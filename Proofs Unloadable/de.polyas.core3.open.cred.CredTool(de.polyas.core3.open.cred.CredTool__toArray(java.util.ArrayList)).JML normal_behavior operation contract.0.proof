\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 02:16:44 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 02:16:44 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:toArray(java.util.ArrayList)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:toArray(java.util.ArrayList)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "24005")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "list,result_399,exc_455,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "2"))
(rule "castedGetAny" (formula "5") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "nonNull" (formula "9") (term "0,0,0,0,1") (inst "i=i"))
(rule "sub_literals" (formula "9") (term "2,1,0,1,1,0,0,0,0,1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "greater_literals" (formula "9") (term "0,1,0,0,0,0,1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,0,0,0,1"))
(rule "nonNull" (formula "9") (term "1,1,1,0,0,0,1") (inst "i=i"))
(rule "sub_literals" (formula "9") (term "2,1,0,1,1,1,1,1,0,0,0,1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "greater_literals" (formula "9") (term "0,1,1,1,1,0,0,0,1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "4"))
(rule "true_left" (formula "4"))
(rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "5"))
 (builtin "One Step Simplification" (formula "5"))
(rule "insert_constant_string_value" (formula "5") (term "0,0,1,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "insert_constant_string_value" (formula "5") (term "0,0,1,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "insert_constant_string_value" (formula "5") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "castDel" (formula "5") (term "0,0,0,1,0,0,0"))
(rule "castDel" (formula "5") (term "0,0,0,1,0,0,0,0"))
(rule "castDel" (formula "5") (term "0,0,0,1,0,0"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "applyEq" (formula "12") (term "0") (ifseqformula "5"))
(rule "commute_and" (formula "4") (term "0,0"))
(rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_toArray,savedHeapBefore_toArray,_listBefore_toArray"))
 (builtin "One Step Simplification" (formula "15"))
(rule "variableDeclarationFinalAssign" (formula "15") (term "1"))
(rule "variableDeclarationFinal" (formula "15") (term "1") (newnames "len"))
 (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_size,result_400,exc_456,heapAfter_size,anon_heap_size") (contract "java.util.ArrayList[java.util.Collection::size()].JML normal_behavior operation contract.0"))
(branch "Post (size)"
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "expand_inInt" (formula "7") (term "1,0,1"))
   (rule "replace_int_MAX" (formula "7") (term "1,0,1,0,1"))
   (rule "replace_int_MIN" (formula "7") (term "0,1,1,0,1"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "eqSymm" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "9"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclarationFinalAssign" (formula "22") (term "1"))
   (rule "variableDeclarationFinal" (formula "22") (term "1") (newnames "arr_1"))
   (rule "pullOutSelect" (formula "10") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "10"))
   (rule "hideAuxiliaryEq" (formula "10"))
   (rule "applyEq" (formula "4") (term "1,0,0,0") (ifseqformula "10"))
   (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "arrayCreation" (formula "21") (term "1") (inst "#v0=s_arr"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "s_arr"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "dim0"))
   (rule "assignment" (formula "21") (term "1"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "ifUnfold" (formula "21") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "21") (term "1"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "ifSplit" (formula "21"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "blockThrow" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "throwUnfold" (formula "22") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "n"))
      (rule "lenNonNegative" (formula "11") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1") (ifseqformula "2"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "instanceCreationAssignment" (formula "28") (term "1") (inst "#v0=n_1"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "n_1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "28") (term "1") (inst "#v0=n_2"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "n_2"))
      (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "__NEW__"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "28") (term "1") (inst "#v0=n_3"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "n_3"))
      (rule "allocateInstance" (formula "28"))
       (builtin "One Step Simplification" (formula "29"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "14"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0") (ifseqformula "14"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
      (rule "notLeft" (formula "1"))
      (rule "orRight" (formula "20"))
      (rule "blockEmpty" (formula "32") (term "1"))
      (rule "assignment" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "assignment_write_attribute_this" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallWithinClass" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "blockEmpty" (formula "32") (term "1"))
      (rule "assignment_write_attribute_this" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "assignment_write_attribute_this" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "blockEmpty" (formula "32") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "32") (term "1"))
      (rule "methodCallReturn" (formula "32") (term "1"))
      (rule "assignment" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "blockEmpty" (formula "32") (term "1"))
      (rule "assignment" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallSuper" (formula "32") (term "1"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "blockEmpty" (formula "32") (term "1"))
      (rule "assignment_write_attribute_this" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "assignment_write_attribute_this" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "methodCallEmpty" (formula "32") (term "1"))
      (rule "blockEmpty" (formula "32") (term "1"))
      (rule "assignment_write_attribute" (formula "32") (term "1"))
      (branch "Normal Execution (n_1 != null)"
          (builtin "One Step Simplification" (formula "33"))
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "22")))
         (rule "false_right" (formula "32"))
         (rule "assignment" (formula "32") (term "1"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "methodCallParamThrow" (formula "32") (term "1"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "tryCatchThrow" (formula "32") (term "1"))
         (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_1"))
         (rule "equality_comparison_simple" (formula "32") (term "1"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "replace_known_right" (formula "32") (term "0,0,1,0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "ifElseSplit" (formula "32"))
         (branch "if x_1 true"
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
             (builtin "One Step Simplification" (formula "33"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "32"))
            (branch "if n instanceof java.lang.Throwable true"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "32") (term "1") (newnames "e_7"))
               (rule "delete_unnecessary_cast" (formula "32") (term "1"))
                (builtin "One Step Simplification" (formula "33"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "32") (term "1"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "emptyModality" (formula "32") (term "1"))
               (rule "andRight" (formula "32"))
               (branch
                  (rule "andRight" (formula "32"))
                  (branch
                     (rule "andRight" (formula "32"))
                     (branch
                        (rule "andRight" (formula "32"))
                        (branch
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "notRight" (formula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "allRight" (formula "32") (inst "sk=i_0"))
                           (rule "impRight" (formula "32"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "34"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "9"))
                           (rule "leq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "closeFalse" (formula "9"))
                        )
                     )
                     (branch
                        (rule "andRight" (formula "32"))
                        (branch
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "6"))
                           (rule "leq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                           (rule "leq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                        (branch
                           (rule "andRight" (formula "32"))
                           (branch
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "6"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                           (branch
                              (rule "andRight" (formula "32"))
                              (branch
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "notRight" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "allRight" (formula "32") (inst "sk=i_0"))
                                 (rule "impRight" (formula "32"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "34"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "9"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                           )
                        )
                     )
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "22")))
                     (rule "false_right" (formula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "closeFalse" (formula "17"))
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "allRight" (formula "32") (inst "sk=f_0"))
                  (rule "allRight" (formula "32") (inst "sk=o_0"))
                  (rule "orRight" (formula "32"))
                  (rule "eqSymm" (formula "33"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "6"))
                  (rule "leq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "closeFalse" (formula "16"))
               )
            )
            (branch "if n instanceof java.lang.Throwable false"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (n_1 = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "22"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "lenNonNegative" (formula "10") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1") (ifseqformula "2"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "28") (term "1") (inst "#v0=s_arr_1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "s_arr_1"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "28") (term "1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "methodBodyExpand" (formula "28") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "28") (term "1") (inst "#v0=s_arr_2"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "s_arr_2"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "28") (term "1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "allocateInstanceWithLength" (formula "28"))
       (builtin "One Step Simplification" (formula "29"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "13"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0") (ifseqformula "13"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "orRight" (formula "20"))
      (rule "blockEmpty" (formula "33") (term "1"))
      (rule "assignment" (formula "33") (term "1"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
      (rule "expand_inInt" (formula "1"))
      (rule "replace_int_MAX" (formula "1") (term "1,0"))
      (rule "replace_int_MIN" (formula "1") (term "0,1"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_commuteLeq" (formula "2"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "methodCall" (formula "33") (term "1"))
      (branch "Normal Execution (newObject != null )"
          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "22")))
         (rule "false_right" (formula "33"))
         (rule "methodBodyExpand" (formula "33") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "assignment_write_attribute_this" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "methodCallWithinClass" (formula "33") (term "1"))
         (rule "methodBodyExpand" (formula "33") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "arrayInitialisation" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "33") (term "1,2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,0"))
         (rule "applyEq" (formula "33") (term "1,2,1,0,1,0") (ifseqformula "1"))
         (rule "methodCallEmpty" (formula "33") (term "1"))
         (rule "blockEmpty" (formula "33") (term "1"))
         (rule "assignment_write_attribute_this" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "methodCallReturnIgnoreResult" (formula "33") (term "1"))
         (rule "blockEmpty" (formula "33") (term "1"))
         (rule "methodCallReturn" (formula "33") (term "1"))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "methodCallEmpty" (formula "33") (term "1"))
         (rule "blockEmpty" (formula "33") (term "1"))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "blockEmpty" (formula "33") (term "1"))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "for_to_while" (formula "33") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "33") (term "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "i"))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
          (builtin "Loop Invariant" (formula "33") (newnames "variant,b_7,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (rule "andRight" (formula "33"))
            (branch
               (rule "andRight" (formula "33"))
               (branch
                  (rule "andRight" (formula "33"))
                  (branch
                     (rule "andRight" (formula "33"))
                     (branch
                        (rule "andRight" (formula "33"))
                        (branch
                           (rule "andRight" (formula "33"))
                           (branch
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_ltRight" (formula "23"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                              (rule "leq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "nnf_imp2or" (formula "10") (term "0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                              (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "31"))
                              (rule "closeTrue" (formula "31"))
                           )
                           (branch
                              (rule "andRight" (formula "33"))
                              (branch
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "dismissNonSelectedField" (formula "33") (term "0,0"))
                                 (rule "inEqSimp_ltRight" (formula "23"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=java_util_Collection_seq_1"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                 (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "1"))
                                 (rule "close" (formula "32") (ifseqformula "18"))
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "close" (formula "33") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "allRight" (formula "33") (inst "sk=i_1"))
                           (rule "impRight" (formula "33"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "35"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "26"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_1"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfMemset" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or" (formula "14") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "allLeft" (formula "14") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "14") (term "0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "14"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_literals" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch
                        (rule "andRight" (formula "33"))
                        (branch
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "leq_literals" (formula "33"))
                           (rule "closeTrue" (formula "33"))
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_ltRight" (formula "23"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "32"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "1"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch
                     (rule "andRight" (formula "33"))
                     (branch
                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "22")))
                        (rule "closeTrue" (formula "33"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "allRight" (formula "33") (inst "sk=j_0"))
                        (rule "impRight" (formula "33"))
                        (rule "andLeft" (formula "1"))
                        (rule "notRight" (formula "35"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "inEqSimp_ltRight" (formula "23"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                  (rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "31"))
                  (rule "notRight" (formula "31"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_0"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "0") (inst "iv=iv"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "32") (ifseqformula "2"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "33"))
               (rule "wellFormedStorePrimitive" (formula "33"))
               (rule "inEqSimp_ltRight" (formula "23"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
               (rule "leq_literals" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "wellFormedMemsetArrayObject" (formula "31"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "wellFormedStorePrimitive" (formula "31"))
               (rule "wellFormedStorePrimitive" (formula "31"))
               (rule "wellFormedStorePrimitive" (formula "31"))
               (rule "wellFormedCreate" (formula "31"))
               (rule "wellFormedAnonEQ" (formula "31") (ifseqformula "14"))
               (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "7")))
               (rule "closeTrue" (formula "31"))
            )
         )
         (branch "Body Preserves Invariant"
             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
             (builtin "One Step Simplification" (formula "35"))
            (rule "expand_inInt" (formula "21") (term "1"))
            (rule "replace_int_MAX" (formula "21") (term "1,0,1"))
            (rule "replace_int_MIN" (formula "21") (term "0,1,1"))
            (rule "impRight" (formula "35"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "eqSymm" (formula "45") (term "0,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "eqSymm" (formula "45") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "eqSymm" (formula "45") (term "1,0,0,1,0,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "45") (term "0,1,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "45") (term "0,1,1,1,0"))
            (rule "eqSymm" (formula "24"))
            (rule "eqSymm" (formula "23"))
            (rule "castedGetAny" (formula "44") (term "0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
            (rule "castedGetAny" (formula "24") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "30"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26"))
            (rule "inEqSimp_commuteLeq" (formula "25"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclarationAssign" (formula "44") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_7_1"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "exc_457"))
            (rule "assignment" (formula "44") (term "1"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "thrownExc"))
            (rule "blockThrow" (formula "44") (term "1,0,0,1"))
            (rule "blockThrow" (formula "44") (term "1,0,0,1"))
            (rule "pullOutSelect" (formula "24") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "24"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
            (rule "simplifySelectOfAnon" (formula "24"))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "44")))
            (rule "eqSymm" (formula "24") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
            (rule "sortsDisjointModuloNull" (formula "24") (term "0,0,0"))
            (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "34")))
            (rule "ifthenelse_negated" (formula "24") (term "0"))
            (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "23"))
            (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "24"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "simplifySelectOfStore" (formula "24"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "simplifySelectOfStore" (formula "24"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "simplifySelectOfStore" (formula "24"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "simplifySelectOfCreate" (formula "24"))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")))
            (rule "castDel" (formula "24") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "24") (term "0,0"))
            (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")))
            (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "45")) (ifInst ""  (formula "9")))
            (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "simplifySelectOfMemset" (formula "24"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
            (rule "elementOfArrayRange" (formula "24") (term "0,0") (inst "iv=iv"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "simplifySelectOfCreate" (formula "24"))
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "34")))
            (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0"))
            (rule "applyEqReverse" (formula "25") (term "0,0,0,1,0") (ifseqformula "24"))
            (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "23"))
            (rule "boxToDiamond" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "expand_subJint" (formula "43") (term "0,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "43") (term "0,0,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "43") (term "0,0,1,1,1,0,1"))
            (rule "expand_subJint" (formula "43") (term "0,1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "43") (term "0,0,1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "43") (term "0,0,1,1,1,0,0"))
            (rule "expand_moduloInteger" (formula "43") (term "0,1,1,1,0,1"))
            (rule "replace_int_MIN" (formula "43") (term "0,0,1,1,1,0,1"))
            (rule "replace_int_RANGE" (formula "43") (term "1,1,0,1,1,1,0,1"))
            (rule "replace_int_HALFRANGE" (formula "43") (term "0,0,1,0,1,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,1,1,0,1"))
            (rule "expand_moduloInteger" (formula "43") (term "0,1,1,1,0,0"))
            (rule "replace_int_RANGE" (formula "43") (term "1,1,0,1,1,1,0,0"))
            (rule "replace_int_HALFRANGE" (formula "43") (term "0,0,1,0,1,1,1,0,0"))
            (rule "replace_int_MIN" (formula "43") (term "0,0,1,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,1,1,0,0"))
            (rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
            (rule "simplifySelectOfMemset" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "commute_and" (formula "24") (term "0,0"))
            (rule "commute_and" (formula "21") (term "0,0"))
            (rule "less_than_comparison_simple" (formula "26") (term "1"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "methodCallEmpty" (formula "26") (term "1"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "emptyModality" (formula "26") (term "1"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "notRight" (formula "26"))
            (rule "ifUnfold" (formula "40") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_1"))
            (rule "less_than_comparison_simple" (formula "40") (term "1"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "replace_known_left" (formula "40") (term "0,0,1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "ifSplit" (formula "40"))
            (branch "if x_1 true"
                (builtin "One Step Simplification" (formula "41"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "eval_order_array_access3" (formula "40") (term "1") (inst "#v1=s") (inst "#v2=x") (inst "#v0=s_arr"))
               (rule "variableDeclarationAssign" (formula "40") (term "1"))
               (rule "variableDeclaration" (formula "40") (term "1") (newnames "s_arr_3"))
               (rule "assignment" (formula "40") (term "1"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "variableDeclarationAssign" (formula "40") (term "1"))
               (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_2"))
               (rule "assignment" (formula "40") (term "1"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "variableDeclarationAssign" (formula "40") (term "1"))
               (rule "variableDeclaration" (formula "40") (term "1") (newnames "s"))
               (rule "compound_reference_cast_expression" (formula "40") (term "1") (inst "#v=o"))
               (rule "variableDeclarationAssign" (formula "40") (term "1"))
               (rule "variableDeclaration" (formula "40") (term "1") (newnames "o"))
                (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_get,result_401,exc_458,heapAfter_get,anon_heap_get") (contract "java.util.ArrayList[java.util.List::get(int)].JML normal_behavior operation contract.0"))
               (branch "Post (get)"
                   (builtin "One Step Simplification" (formula "42"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "31"))
                  (rule "notLeft" (formula "32"))
                  (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "castedGetAny" (formula "30") (term "0"))
                  (rule "dismissNonSelectedField" (formula "29") (term "0,0,0"))
                  (rule "assignment" (formula "47") (term "1"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "pullOutSelect" (formula "30") (term "0,0") (inst "selectSK=java_util_Collection_seq_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "47")))
                  (rule "replaceKnownSelect_taclet1010_2" (formula "30") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1010_12" (formula "30") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet1010_3" (formula "30") (term "0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1010_9" (formula "30") (term "0,0,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "30"))
                  (rule "hideAuxiliaryEq" (formula "30"))
                  (rule "pullOutSelect" (formula "29") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                  (rule "simplifySelectOfMemset" (formula "29"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "simplifySelectOfStore" (formula "29"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "simplifySelectOfStore" (formula "29"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "simplifySelectOfStore" (formula "29"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "simplifySelectOfCreate" (formula "29"))
                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")))
                  (rule "castDel" (formula "29") (term "1,0"))
                  (rule "eqSymm" (formula "29") (term "0,0"))
                  (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=java_lang_Object_created__2"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                  (rule "ifthenelse_negated" (formula "29") (term "0"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "33"))
                  (rule "true_left" (formula "33"))
                  (rule "reference_type_cast" (formula "48") (term "1"))
                  (branch "Normal Execution (o instanceof String)"
                      (builtin "One Step Simplification" (formula "49"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "assignment_to_reference_array_component" (formula "49") (term "1"))
                     (branch "Normal Execution (s_arr_3 != null)"
                         (builtin "One Step Simplification" (formula "50"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "24")))
                        (rule "andLeft" (formula "1"))
                        (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "blockEmpty" (formula "50") (term "1"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "4"))
                        (rule "postincrement" (formula "49") (term "1"))
                        (rule "compound_int_cast_expression" (formula "49") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "49") (term "1"))
                        (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_3"))
                        (rule "remove_parentheses_right" (formula "49") (term "1"))
                        (rule "assignmentAdditionInt" (formula "49") (term "1"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "translateJavaAddInt" (formula "49") (term "0,1,0"))
                        (rule "expand_addJint" (formula "49") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "49") (term "0,0,1,0"))
                        (rule "expand_moduloInteger" (formula "49") (term "0,1,0"))
                        (rule "replace_int_MIN" (formula "49") (term "0,0,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "49") (term "0,0,1,0,1,0"))
                        (rule "replace_int_RANGE" (formula "49") (term "1,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,1,0,1,0"))
                        (rule "add_literals" (formula "49") (term "0,0,1,0,1,0"))
                        (rule "widening_identity_cast_5" (formula "49") (term "1"))
                        (rule "assignment" (formula "49") (term "1"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "tryEmpty" (formula "49") (term "1"))
                        (rule "methodCallEmpty" (formula "49") (term "1"))
                        (rule "emptyModality" (formula "49") (term "1"))
                         (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "3")) (ifInst ""  (formula "38")))
                        (rule "andRight" (formula "49"))
                        (branch
                           (rule "andRight" (formula "49"))
                           (branch
                              (rule "andRight" (formula "49"))
                              (branch
                                 (rule "andRight" (formula "49"))
                                 (branch
                                    (rule "andRight" (formula "49"))
                                    (branch
                                       (rule "andRight" (formula "49"))
                                       (branch
                                          (rule "andRight" (formula "49"))
                                          (branch
                                             (rule "inEqSimp_ltRight" (formula "39"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0"))
                                             (rule "qeq_literals" (formula "24") (term "0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "nnf_imp2or" (formula "13") (term "0"))
                                             (rule "nnf_imp2or" (formula "24") (term "0"))
                                             (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "45"))
                                             (rule "closeTrue" (formula "45"))
                                          )
                                          (branch
                                             (rule "dismissNonSelectedField" (formula "49") (term "0,0"))
                                             (rule "replaceKnownSelect_taclet001010_19" (formula "49") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet001010_20" (formula "49") (term "0,0"))
                                             (rule "close" (formula "49") (ifseqformula "20"))
                                          )
                                       )
                                       (branch
                                          (rule "allRight" (formula "49") (inst "sk=i_1"))
                                          (rule "impRight" (formula "49"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notRight" (formula "51"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                          (rule "replaceKnownSelect_taclet001010_19" (formula "3") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet001010_20" (formula "3") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                          (rule "replaceKnownSelect_taclet001010_19" (formula "1") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet001010_20" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltRight" (formula "42"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "23"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                          (rule "leq_literals" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                          (rule "leq_literals" (formula "29") (term "0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "28") (term "0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "ifthenelse_split" (formula "31") (term "0"))
                                          (branch "result_401.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "32"))
                                             (rule "hideAuxiliaryEq" (formula "32"))
                                             (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "hideAuxiliaryEq" (formula "32"))
                                             (rule "seqGetAlphaCast" (formula "32") (term "0"))
                                             (rule "castedGetAny" (formula "32") (term "0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "allLeft" (formula "17") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "result_401.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "31"))
                                             (rule "hideAuxiliaryEq" (formula "31"))
                                             (rule "seqGetAlphaCast" (formula "33") (term "0"))
                                             (rule "castedGetAny" (formula "33") (term "0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "allLeft" (formula "17") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "andRight" (formula "49"))
                                       (branch
                                          (rule "inEqSimp_ltRight" (formula "39"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "48"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "mod_axiom" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "23"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0"))
                                          (rule "qeq_literals" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                          (rule "equal_literals" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or_2" (formula "25") (term "0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or" (formula "25") (term "0,0"))
                                          (rule "commute_or_2" (formula "25") (term "0"))
                                          (rule "ifthenelse_split" (formula "28") (term "0"))
                                          (branch "result_401.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "30") (term "2,0") (ifseqformula "29"))
                                             (rule "hideAuxiliaryEq" (formula "29"))
                                             (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "hideAuxiliaryEq" (formula "29"))
                                             (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "26") (term "0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "27"))
                                             (rule "mul_literals" (formula "2") (term "1,1,0"))
                                             (rule "greater_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "result_401.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "27") (term "0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                             (rule "mul_literals" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "27") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0"))
                                             (rule "greater_literals" (formula "27") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "qeq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                       )
                                       (branch
                                          (rule "inEqSimp_ltRight" (formula "39"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "48"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "mod_axiom" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "polyDiv_pullOut" (formula "1") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,1"))
                                          (rule "equal_literals" (formula "1") (term "0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,1,1"))
                                          (rule "polySimp_addComm0" (formula "1") (term "1,1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(neglit(2(#)))") (inst "elimGcdLeftDiv=div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "3") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "21") (term "0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or" (formula "27") (term "0,0"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "ifthenelse_split" (formula "30") (term "0"))
                                          (branch "result_401.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "31"))
                                             (rule "hideAuxiliaryEq" (formula "31"))
                                             (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "hideAuxiliaryEq" (formula "31"))
                                             (rule "div_axiom" (formula "1") (term "0,1,1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "4") (term "1"))
                                             (rule "applyEqRigid" (formula "24") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "24") (term "0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "5"))
                                             (rule "greater_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "28") (term "0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                             (rule "mul_literals" (formula "28") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "28") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0"))
                                             (rule "greater_literals" (formula "28") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "qeq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "closeFalse" (formula "28"))
                                          )
                                          (branch "result_401.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "30"))
                                             (rule "hideAuxiliaryEq" (formula "30"))
                                             (rule "div_axiom" (formula "1") (term "0,1,1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                             (rule "equal_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                             (rule "add_literals" (formula "3") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "4") (term "1"))
                                             (rule "applyEqRigid" (formula "24") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "28") (term "0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                             (rule "mul_literals" (formula "28") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "28") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0"))
                                             (rule "greater_literals" (formula "28") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "qeq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "closeFalse" (formula "28"))
                                          )
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "49") (inst "sk=j_0"))
                                    (rule "impRight" (formula "49"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "51"))
                                    (rule "inEqSimp_ltRight" (formula "42"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                    (rule "leq_literals" (formula "29") (term "0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                    (rule "qeq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                    (rule "ifEqualsNull" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__3"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "nnf_imp2or" (formula "18") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                    (rule "commute_and" (formula "1") (term "0"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "commute_and" (formula "1") (term "1"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "commute_or" (formula "29") (term "0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "cnf_rightDist" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "cnf_rightDist" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "commute_or" (formula "2"))
                                    (rule "cnf_rightDist" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "commute_or" (formula "2"))
                                    (rule "ifthenelse_split" (formula "34") (term "0"))
                                    (branch "result_401.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "div_axiom" (formula "7") (term "0,1,1") (inst "quotient=quotient_0"))
                                       (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1,1,1,1"))
                                       (rule "equal_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                       (rule "add_literals" (formula "9") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "9") (term "1"))
                                       (rule "add_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm1" (formula "10") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "32") (term "0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                       (rule "mul_literals" (formula "32") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "32") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "leq_literals" (formula "32") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_antiSymm" (formula "33") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "33"))
                                       (rule "mul_literals" (formula "6") (term "1,1"))
                                       (rule "add_literals" (formula "6") (term "1"))
                                       (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "32"))
                                       (rule "mul_literals" (formula "8") (term "1,1"))
                                       (rule "add_literals" (formula "8") (term "1"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "31"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                       (rule "qeq_literals" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "applyEq" (formula "6") (term "1") (ifseqformula "30"))
                                       (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "30"))
                                       (rule "mul_literals" (formula "7") (term "1,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,1"))
                                       (rule "add_zero_left" (formula "7") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                       (rule "times_zero_1" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "seqGetAlphaCast" (formula "36") (term "0"))
                                       (rule "castedGetAny" (formula "36") (term "0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "cut_direct" (formula "1") (term "1"))
                                       (branch "CUT: (java.lang.String)result_401 = null TRUE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "cut_direct" (formula "2") (term "1"))
                                          (branch "CUT: j_0 = i_0 TRUE"
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "qeq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                             (rule "ineffectiveCast" (formula "1") (term "0") (ifseqformula "5"))
                                             (rule "typeEqDerived2" (formula "6") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                          (branch "CUT: j_0 = i_0 FALSE"
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "37"))
                                             (rule "inEqSimp_contradEq3" (formula "37") (ifseqformula "6"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0"))
                                             (rule "qeq_literals" (formula "37") (term "0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "allLeft" (formula "31") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet100000001010_29" (formula "31") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100000001010_30" (formula "31") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "31"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                       (branch "CUT: (java.lang.String)result_401 = null FALSE"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "36"))
                                          (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "5"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "30") (term "0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "allLeft" (formula "30") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet100000001010_29" (formula "30") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000001010_30" (formula "30") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "30") (term "0,0,1"))
                                          (rule "leq_literals" (formula "30") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "30") (term "0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "closeFalse" (formula "30"))
                                       )
                                    )
                                    (branch "result_401.<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
                                       (rule "hideAuxiliaryEq" (formula "34"))
                                       (rule "div_axiom" (formula "7") (term "0,1,1") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "7") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "equal_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                       (rule "add_literals" (formula "9") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "9") (term "1"))
                                       (rule "add_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "7"))
                                       (rule "polySimp_addComm1" (formula "10") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "9"))
                                       (rule "mul_literals" (formula "33") (term "0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "33") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "33") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_antiSymm" (formula "33") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "33"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "32"))
                                       (rule "mul_literals" (formula "8") (term "1,1"))
                                       (rule "add_literals" (formula "8") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "31"))
                                       (rule "mul_literals" (formula "5") (term "1,1"))
                                       (rule "add_literals" (formula "5") (term "1"))
                                       (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "30"))
                                       (rule "qeq_literals" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "applyEq" (formula "7") (term "0,1,0,1") (ifseqformula "30"))
                                       (rule "mul_literals" (formula "7") (term "1,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,1"))
                                       (rule "add_zero_left" (formula "7") (term "1"))
                                       (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "30"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                       (rule "times_zero_1" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "seqGetAlphaCast" (formula "37") (term "0"))
                                       (rule "castedGetAny" (formula "37") (term "0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "ifthenelse_split" (formula "35") (term "0"))
                                       (branch "result_401 = s_arr_2 TRUE"
                                          (rule "applyEqReverse" (formula "37") (term "0,0,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "hideAuxiliaryEq" (formula "36"))
                                          (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "40")))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                       (branch "result_401 = s_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "35"))
                                          (rule "hideAuxiliaryEq" (formula "35"))
                                          (rule "commute_or" (formula "35") (term "0"))
                                          (rule "commute_or_2" (formula "35"))
                                          (rule "cut_direct" (formula "1") (term "1"))
                                          (branch "CUT: (java.lang.String)result_401 = null TRUE"
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "cut_direct" (formula "2") (term "1"))
                                             (branch "CUT: j_0 = i_0 TRUE"
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "1,0"))
                                                (rule "times_zero_1" (formula "6") (term "0"))
                                                (rule "qeq_literals" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                                (rule "ineffectiveCast" (formula "1") (term "0") (ifseqformula "5"))
                                                (rule "typeEqDerived2" (formula "6") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "close" (formula "37") (ifseqformula "1"))
                                             )
                                             (branch "CUT: j_0 = i_0 FALSE"
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "37"))
                                                (rule "inEqSimp_contradEq3" (formula "37") (ifseqformula "6"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0"))
                                                (rule "qeq_literals" (formula "37") (term "0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "false_right" (formula "37"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                                (rule "mul_literals" (formula "4") (term "0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "31") (term "0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "allLeft" (formula "31") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet100000001010_29" (formula "31") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100000001010_30" (formula "31") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,1"))
                                                (rule "leq_literals" (formula "31") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "31") (term "0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "closeFalse" (formula "31"))
                                             )
                                          )
                                          (branch "CUT: (java.lang.String)result_401 = null FALSE"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "36"))
                                             (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0"))
                                             (rule "qeq_literals" (formula "36") (term "0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "allLeft" (formula "30") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet100000001010_29" (formula "30") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100000001010_30" (formula "30") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "30") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "6"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0"))
                                             (rule "add_zero_right" (formula "30") (term "0"))
                                             (rule "leq_literals" (formula "30"))
                                             (rule "closeFalse" (formula "30"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (rule "inEqSimp_ltRight" (formula "39"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "45"))
                                 (rule "notRight" (formula "45"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet1010_13" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1010_18" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "45") (ifseqformula "2"))
                              )
                           )
                           (branch
                              (rule "allRight" (formula "49") (inst "sk=f_0"))
                              (rule "allRight" (formula "49") (inst "sk=o_0"))
                              (rule "orRight" (formula "49"))
                              (rule "orRight" (formula "49"))
                              (rule "dismissNonSelectedField" (formula "50") (term "0,0,1"))
                              (rule "inEqSimp_ltRight" (formula "39"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                              (rule "leq_literals" (formula "18") (term "0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "22"))
                              (rule "leq_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "48"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                              (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "46"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "47") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "47"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=f_0_1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet1000001010_34" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "5"))
                              (rule "leq_literals" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "replaceKnownSelect_taclet1000001010_27" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet1000001010_34" (formula "1") (term "0,0,1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "50"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "nnf_imp2or" (formula "27") (term "0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_notAnd" (formula "27") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                              (rule "commute_and" (formula "49"))
                              (rule "commute_or_2" (formula "27") (term "0"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "commute_or" (formula "27") (term "0,0"))
                              (rule "commute_or_2" (formula "27") (term "0"))
                              (rule "commute_or" (formula "16") (term "0,0"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "ifthenelse_split" (formula "30") (term "0"))
                              (branch "result_401.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "31"))
                                 (rule "hideAuxiliaryEq" (formula "31"))
                                 (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "hideAuxiliaryEq" (formula "31"))
                                 (rule "seqGetAlphaCast" (formula "31") (term "0"))
                                 (rule "castedGetAny" (formula "31") (term "0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "¬o_0 = null ∧ ¬o_0.<created> = TRUE TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                                    (rule "applyEqReverse" (formula "48") (term "0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "notRight" (formula "47"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "¬o_0 = null ∧ ¬o_0.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "46"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "31"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")))
                                       (rule "closeTrue" (formula "33"))
                                    )
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "47") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "result_401.<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "seqGetAlphaCast" (formula "32") (term "0"))
                                 (rule "castedGetAny" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "¬o_0 = null ∧ ¬o_0.<created> = TRUE TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "51"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "notRight" (formula "49"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "¬o_0 = null ∧ ¬o_0.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "48"))
                                    (rule "ifthenelse_split" (formula "28") (term "0"))
                                    (branch "result_401 = s_arr_2 TRUE"
                                       (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "hideAuxiliaryEq" (formula "29"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "result_401 = s_arr_2 FALSE"
                                       (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "commute_or" (formula "28") (term "0"))
                                       (rule "commute_or_2" (formula "28"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "32"))
                                          (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "49") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                           (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                           (rule "precOfInt" (formula "49"))
                           (rule "inEqSimp_ltRight" (formula "39"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48") (term "1"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                           (rule "add_literals" (formula "48") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0,1"))
                           (rule "add_literals" (formula "48") (term "0,0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                           (rule "mul_literals" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "mod_axiom" (formula "48") (term "0,1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1,0,1,0,1"))
                           (rule "mul_literals" (formula "48") (term "0,0,1,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0,1"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,1"))
                           (rule "mod_axiom" (formula "48") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "48") (term "0,0,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,1"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0,0,1"))
                           (rule "mod_axiom" (formula "48") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1,0,1,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,0,1,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0,1,1"))
                           (rule "mul_literals" (formula "48") (term "0,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0"))
                           (rule "mul_literals" (formula "48") (term "1,0"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "23"))
                           (rule "leq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                           (rule "leq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "qeq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "polyMod_pullOut" (formula "45") (term "0,0") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                           (rule "mod_axiom" (formula "45") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "45") (term "0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "0,1,0"))
                           (rule "mul_literals" (formula "45") (term "0,0,1,0"))
                           (rule "polyMod_pullOut" (formula "45") (term "0,1") (inst "polyDivCoeff=div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))), i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,1"))
                           (rule "mod_axiom" (formula "45") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "45") (term "1"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "45") (term "0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "45") (term "0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "45") (term "0,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,1"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0,0,1"))
                           (rule "add_zero_left" (formula "45") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor2" (formula "45") (term "0,0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,0,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
                           (rule "elimGcdLeq" (formula "45") (term "1") (inst "elimGcdRightDiv=div(add(add(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        result_400),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        result_400),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,1"))
                           (rule "mul_literals" (formula "45") (term "0,0,0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,1"))
                           (rule "sub_literals" (formula "45") (term "0,0,0,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,1,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,1,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,1,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,1,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "45") (term "0,1,0,1"))
                           (rule "add_literals" (formula "45") (term "1,0,1,0,1"))
                           (rule "times_zero_1" (formula "45") (term "0,1,0,1"))
                           (rule "qeq_literals" (formula "45") (term "1,0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,1"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "45") (term "0,0,1"))
                           (rule "leq_literals" (formula "45") (term "0,1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "2"))
                           (rule "leq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "nnf_imp2or" (formula "13") (term "0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "24") (term "0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "ifthenelse_split" (formula "27") (term "0"))
                           (branch "result_401.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "28"))
                              (rule "hideAuxiliaryEq" (formula "28"))
                              (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "hideAuxiliaryEq" (formula "28"))
                              (rule "commute_or" (formula "24") (term "0,0"))
                              (rule "commute_or_2" (formula "24") (term "0"))
                              (rule "commute_or" (formula "13") (term "0,0"))
                              (rule "commute_or_2" (formula "13") (term "0"))
                              (rule "seqGetAlphaCast" (formula "28") (term "0"))
                              (rule "castedGetAny" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "div_axiom" (formula "43") (term "0,0,0") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "1") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                              (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                              (rule "mul_literals" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "0,1,0"))
                              (rule "mul_literals" (formula "46") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                              (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "3"))
                              (rule "mul_literals" (formula "22") (term "0,0"))
                              (rule "add_zero_left" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,1,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "29") (term "0,0"))
                              (rule "add_zero_left" (formula "29") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "29") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "29") (term "0,0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0"))
                              (rule "qeq_literals" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "6"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                              (rule "mul_literals" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                              (rule "mul_literals" (formula "24") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "7"))
                              (rule "greater_literals" (formula "24") (term "0,0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "mul_literals" (formula "24") (term "1,0"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "29"))
                              (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "25") (term "1,1"))
                              (rule "add_literals" (formula "25") (term "1"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "7"))
                              (rule "leq_literals" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "2") (term "1,1"))
                              (rule "add_literals" (formula "2") (term "1"))
                              (rule "applyEqRigid" (formula "50") (term "1,1") (ifseqformula "7"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "4") (term "1,0,1"))
                              (rule "add_literals" (formula "4") (term "0,1"))
                              (rule "applyEqRigid" (formula "49") (term "0,1,0,1,0") (ifseqformula "7"))
                              (rule "mul_literals" (formula "49") (term "1,0,1,0"))
                              (rule "add_literals" (formula "49") (term "0,1,0"))
                              (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_leqRight" (formula "49"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                              (rule "mul_literals" (formula "4") (term "1,0,1"))
                              (rule "add_literals" (formula "4") (term "0,1"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "8"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "7"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "29"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                              (rule "mul_literals" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "28"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "div_axiom" (formula "1") (term "0") (inst "quotient=quotient_1"))
                              (rule "qeq_literals" (formula "1") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                              (rule "mul_literals" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "25"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "polySimp_addLiterals" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "5"))
                              (rule "mul_literals" (formula "28") (term "0,0"))
                              (rule "add_zero_left" (formula "28") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                              (rule "mul_literals" (formula "28") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "1,1,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0"))
                              (rule "add_zero_right" (formula "12") (term "0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "6"))
                              (rule "greater_literals" (formula "12") (term "0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0"))
                              (rule "leq_literals" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "33") (term "0,0"))
                              (rule "add_zero_left" (formula "33") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "33") (ifseqformula "6"))
                              (rule "mul_literals" (formula "33") (term "1,1,0"))
                              (rule "greater_literals" (formula "33") (term "0,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "qeq_literals" (formula "33") (term "0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "closeFalse" (formula "33"))
                           )
                           (branch "result_401.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "27"))
                              (rule "hideAuxiliaryEq" (formula "27"))
                              (rule "commute_or" (formula "24") (term "0,0"))
                              (rule "commute_or_2" (formula "24") (term "0"))
                              (rule "commute_or" (formula "13") (term "0,0"))
                              (rule "commute_or_2" (formula "13") (term "0"))
                              (rule "seqGetAlphaCast" (formula "29") (term "0"))
                              (rule "castedGetAny" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "div_axiom" (formula "45") (term "0,0,0") (inst "quotient=quotient_0"))
                              (rule "equal_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                              (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                              (rule "mul_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "48") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "48") (term "0,0,1,0"))
                              (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "3"))
                              (rule "mul_literals" (formula "22") (term "0,0"))
                              (rule "add_zero_left" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,1,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "2"))
                              (rule "mul_literals" (formula "29") (term "0,0"))
                              (rule "add_zero_left" (formula "29") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "29") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "29") (term "0,0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0"))
                              (rule "qeq_literals" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "6"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                              (rule "mul_literals" (formula "24") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "7"))
                              (rule "mul_literals" (formula "24") (term "1,1,0"))
                              (rule "greater_literals" (formula "24") (term "0,0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "29"))
                              (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "7"))
                              (rule "leq_literals" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "2") (term "1,1"))
                              (rule "add_zero_right" (formula "2") (term "1"))
                              (rule "applyEqRigid" (formula "51") (term "1,1") (ifseqformula "7"))
                              (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "7"))
                              (rule "times_zero_2" (formula "24") (term "1,1"))
                              (rule "add_zero_right" (formula "24") (term "1"))
                              (rule "applyEqRigid" (formula "51") (term "0,1,0,1,0") (ifseqformula "7"))
                              (rule "mul_literals" (formula "51") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "51") (term "0,1,0"))
                              (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_leqRight" (formula "51"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "8"))
                              (rule "times_zero_2" (formula "5") (term "1,0,1"))
                              (rule "add_zero_right" (formula "5") (term "0,1"))
                              (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "8"))
                              (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "8"))
                              (rule "times_zero_2" (formula "4") (term "1,0,1"))
                              (rule "add_zero_right" (formula "4") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "7"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "29"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                              (rule "mul_literals" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "28"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "ifthenelse_split" (formula "31") (term "0"))
                              (branch "result_401 = s_arr_2 TRUE"
                                 (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "applyEq" (formula "32") (term "1") (ifseqformula "31"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "result_401 = s_arr_2 FALSE"
                                 (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "31"))
                                 (rule "hideAuxiliaryEq" (formula "31"))
                                 (rule "commute_or" (formula "31") (term "0"))
                                 (rule "commute_or_2" (formula "31"))
                                 (rule "div_axiom" (formula "1") (term "0") (inst "quotient=quotient_1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "26") (term "0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0"))
                                 (rule "greater_literals" (formula "10") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                 (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "2") (term "1,1"))
                                 (rule "add_literals" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "29") (term "1,1"))
                                 (rule "add_literals" (formula "29") (term "1"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "4") (term "1,0,1"))
                                 (rule "add_literals" (formula "4") (term "0,1"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,1") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "3") (term "1,0,1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "closeFalse" (formula "32"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (s_arr_3 = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (s_arr_3 != null, but x_2 Out of Bounds!)"
                         (builtin "One Step Simplification" (formula "50"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                        (rule "blockThrow" (formula "50") (term "1"))
                        (rule "commute_or" (formula "1"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castedGetAny" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "methodCallParamThrow" (formula "50") (term "1,0,0,1"))
                        (rule "tryCatchThrow" (formula "50") (term "1,0,0,1"))
                        (rule "ifElseUnfold" (formula "50") (term "1,0,0,1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "50") (term "1,0,0,1") (newnames "x_3"))
                        (rule "equality_comparison_simple" (formula "50") (term "1,0,0,1"))
                        (rule "throwUnfold" (formula "50") (term "1") (inst "#v0=a"))
                        (rule "variableDeclarationAssign" (formula "50") (term "1"))
                        (rule "variableDeclaration" (formula "50") (term "1") (newnames "a"))
                        (rule "instanceCreationAssignment" (formula "50") (term "1") (inst "#v0=a_1"))
                        (rule "variableDeclarationAssign" (formula "50") (term "1"))
                        (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_1"))
                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "50") (term "1") (inst "#v0=a_2"))
                        (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_2"))
                        (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "variableDeclaration" (formula "50") (term "1") (newnames "__NEW__"))
                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "50") (term "1") (inst "#v0=a_3"))
                        (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_3"))
                        (rule "allocateInstance" (formula "50"))
                         (builtin "One Step Simplification" (formula "51"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "31"))
                        (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "30")))
                        (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1"))
                        (rule "blockEmpty" (formula "53") (term "1"))
                        (rule "assignment" (formula "53") (term "1"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "wellFormedMemsetArrayObject" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
                        (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
                        (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
                        (rule "wellFormedCreate" (formula "1") (term "0"))
                        (rule "wellFormedAnonEQ" (formula "1") (term "0") (ifseqformula "19"))
                        (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "37"))
                        (rule "orRight" (formula "37"))
                        (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=java_lang_Object_created__3"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "ifEqualsTRUE" (formula "37"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "orRight" (formula "37"))
                        (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "hideAuxiliaryEqConcrete2" (formula "39"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallWithinClass" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "blockEmpty" (formula "56") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "blockEmpty" (formula "56") (term "1"))
                        (rule "methodCallReturnIgnoreResult" (formula "56") (term "1"))
                        (rule "methodCallReturn" (formula "56") (term "1"))
                        (rule "assignment" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "blockEmpty" (formula "56") (term "1"))
                        (rule "assignment" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallSuper" (formula "56") (term "1"))
                        (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "blockEmpty" (formula "56") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "methodCallEmpty" (formula "56") (term "1"))
                        (rule "blockEmpty" (formula "56") (term "1"))
                        (rule "assignment_write_attribute" (formula "56") (term "1"))
                        (branch "Normal Execution (a_1 != null)"
                            (builtin "One Step Simplification" (formula "57"))
                            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "41")))
                           (rule "false_right" (formula "56"))
                           (rule "assignment" (formula "56") (term "1"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "tryCatchThrow" (formula "56") (term "1"))
                           (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_4"))
                           (rule "equality_comparison_simple" (formula "56") (term "1"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "56"))
                           (rule "ifElseSplit" (formula "56"))
                           (branch "if x_4 true"
                               (builtin "One Step Simplification" (formula "57"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_4 false"
                               (builtin "One Step Simplification" (formula "57"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifElseSplit" (formula "56"))
                              (branch "if a instanceof java.lang.Throwable true"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                 (rule "true_left" (formula "1"))
                                 (rule "variableDeclaration" (formula "56") (term "1") (newnames "e_7"))
                                 (rule "delete_unnecessary_cast" (formula "56") (term "1"))
                                  (builtin "One Step Simplification" (formula "57"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "56") (term "1"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "assignment" (formula "56") (term "1"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "methodCallEmpty" (formula "56") (term "1"))
                                 (rule "emptyModality" (formula "56") (term "1"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "41"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "ifElseSplit" (formula "56"))
                                 (branch "if x_3 true"
                                     (builtin "One Step Simplification" (formula "57"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_3 false"
                                     (builtin "One Step Simplification" (formula "57"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifElseSplit" (formula "56"))
                                    (branch "if thrownExc instanceof java.lang.Throwable true"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "56") (term "1") (newnames "e_8"))
                                       (rule "delete_unnecessary_cast" (formula "56") (term "1"))
                                        (builtin "One Step Simplification" (formula "57"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment" (formula "56") (term "1"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "emptyModality" (formula "56") (term "1"))
                                       (rule "andRight" (formula "56"))
                                       (branch
                                          (rule "andRight" (formula "56"))
                                          (branch
                                             (rule "andRight" (formula "56"))
                                             (branch
                                                (rule "andRight" (formula "56"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "notRight" (formula "56"))
                                                   (rule "inEqSimp_ltRight" (formula "47"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                                   (rule "mul_literals" (formula "3") (term "1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                                   (rule "leq_literals" (formula "29") (term "0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "qeq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "25"))
                                                   (rule "qeq_literals" (formula "3") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "allRight" (formula "56") (inst "sk=i_1"))
                                                   (rule "impRight" (formula "56"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notRight" (formula "58"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "49"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                   (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                                                   (rule "mul_literals" (formula "5") (term "1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "5") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "28"))
                                                   (rule "leq_literals" (formula "32") (term "0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0"))
                                                   (rule "qeq_literals" (formula "28") (term "0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                             )
                                             (branch
                                                (rule "andRight" (formula "56"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_ltRight" (formula "46"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                                   (rule "leq_literals" (formula "29") (term "0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0"))
                                                   (rule "qeq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "2") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                                (branch
                                                   (rule "andRight" (formula "56"))
                                                   (branch
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "inEqSimp_ltRight" (formula "46"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0"))
                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                                      (rule "leq_literals" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0"))
                                                      (rule "qeq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "2") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                                      (rule "leq_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "closeFalse" (formula "24"))
                                                   )
                                                   (branch
                                                      (rule "andRight" (formula "56"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notRight" (formula "56"))
                                                         (rule "inEqSimp_ltRight" (formula "47"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                                         (rule "leq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                                         (rule "leq_literals" (formula "29") (term "0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "25"))
                                                         (rule "qeq_literals" (formula "3") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0"))
                                                         (rule "leq_literals" (formula "5"))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "allRight" (formula "56") (inst "sk=i_1"))
                                                         (rule "impRight" (formula "56"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notRight" (formula "58"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "49"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "28"))
                                                         (rule "leq_literals" (formula "32") (term "0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                         (rule "leq_literals" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "5") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "closeFalse" (formula "27"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch
                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "41")))
                                             (rule "false_right" (formula "56"))
                                             (rule "inEqSimp_ltRight" (formula "46"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "25"))
                                             (rule "qeq_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0"))
                                             (rule "qeq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                       (branch
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "allRight" (formula "56") (inst "sk=f_0"))
                                          (rule "allRight" (formula "56") (inst "sk=o_0"))
                                          (rule "orRight" (formula "56"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "inEqSimp_ltRight" (formula "46"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "2") (term "0,0,1"))
                                          (rule "leq_literals" (formula "2") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0"))
                                          (rule "qeq_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                    )
                                    (branch "if thrownExc instanceof java.lang.Throwable false"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "if a instanceof java.lang.Throwable false"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Null Reference (a_1 = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Array Store Exception (incompatible dynamic element type of s_arr_3 and s)"
                         (builtin "One Step Simplification" (formula "50"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "24")))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "array_store_known_dynamic_array_type" (formula "36") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "closeTrue" (formula "36"))
                     )
                  )
                  (branch "ClassCastException (!(o instanceof String))"
                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "34")))
                     (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "32") (userinteraction))
                     (rule "seqCastInstance" (formula "48") (userinteraction))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "notRight" (formula "48"))
                     (rule "inEqSimp_ltRight" (formula "39"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "blockThrow" (formula "48") (term "1"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "48") (term "0,1,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "22"))
                     (rule "leq_literals" (formula "26") (term "0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0"))
                     (rule "qeq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "2"))
                     (rule "leq_literals" (formula "25") (term "0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "45") (term "0,1,1,0,0,0,1,1,0,1"))
                     (rule "nnf_imp2or" (formula "45") (term "0,1,0,0,0,0,1,0,0,1"))
                     (rule "nnf_imp2or" (formula "45") (term "0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "nnf_imp2or" (formula "45") (term "0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,0,1,1,0,0,0,1,1,0,1"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0,0,0,1,0,0,1"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,0,1,1,1,1,0,0,0,1,0,0,1"))
                     (rule "commute_or_2" (formula "24") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_or_2" (formula "24") (term "0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "seqGetAlphaCast" (formula "30") (term "0"))
                     (rule "castedGetAny" (formula "30") (term "0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "seqGetAlphaCast" (formula "1") (term "0"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "allLeft" (formula "13") (inst "t=i_0"))
                     (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1"))
                     (rule "leq_literals" (formula "13") (term "0,1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "13"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "closeFalse" (formula "23"))
                  )
               )
               (branch "Exceptional Post (get)"
                   (builtin "One Step Simplification" (formula "42"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "31"))
                  (rule "notLeft" (formula "29"))
                  (rule "close" (formula "33") (ifseqformula "32"))
               )
               (branch "Pre (get)"
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "wellFormedAnon" (formula "40") (term "0,1"))
                  (rule "wellFormedStorePrimitive" (formula "40") (term "0,0,1"))
                  (rule "replaceKnownSelect_taclet1010_2" (formula "40") (term "0,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1010_12" (formula "40") (term "0,1,1,0,0"))
                  (rule "expand_inInt" (formula "40") (term "1,1"))
                  (rule "replace_int_MIN" (formula "40") (term "0,1,1,1"))
                  (rule "replace_int_MAX" (formula "40") (term "1,0,1,1"))
                  (rule "replace_known_left" (formula "40") (term "0,1,1") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "21")))
                  (rule "inEqSimp_ltRight" (formula "30"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1"))
                  (rule "replace_known_left" (formula "39") (term "1,1") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                  (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "applyEq" (formula "39") (term "0,1,0,0,0") (ifseqformula "19"))
                  (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "qeq_literals" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "21"))
                  (rule "leq_literals" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "wellFormedMemsetArrayObject" (formula "36") (term "1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "wellFormedStorePrimitive" (formula "36") (term "1"))
                  (rule "wellFormedStorePrimitive" (formula "36") (term "1"))
                  (rule "wellFormedStorePrimitive" (formula "36") (term "1"))
                  (rule "wellFormedCreate" (formula "36") (term "1"))
                  (rule "wellFormedAnonEQ" (formula "36") (term "1") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "14")))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "1"))
                  (rule "leq_literals" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "23") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "36"))
                  (rule "closeTrue" (formula "36"))
               )
               (branch "Null reference (_list = null)"
                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")))
                  (rule "closeTrue" (formula "40"))
               )
            )
            (branch "if x_1 false"
                (builtin "One Step Simplification" (formula "41"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
             (builtin "One Step Simplification" (formula "35"))
             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
            (rule "expand_inInt" (formula "21") (term "1"))
            (rule "replace_int_MAX" (formula "21") (term "1,0,1"))
            (rule "replace_int_MIN" (formula "21") (term "0,1,1"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "22"))
            (rule "eqSymm" (formula "23"))
            (rule "eqSymm" (formula "22"))
            (rule "castedGetAny" (formula "23") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "29"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24"))
            (rule "inEqSimp_commuteLeq" (formula "25"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
            (rule "variableDeclarationAssign" (formula "43") (term "1"))
            (rule "variableDeclaration" (formula "43") (term "1") (newnames "b_7_1"))
            (rule "blockEmpty" (formula "43") (term "1,0,1"))
            (rule "pullOutSelect" (formula "23") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "23"))
            (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
            (rule "simplifySelectOfAnon" (formula "23"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
            (rule "eqSymm" (formula "23") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
            (rule "sortsDisjointModuloNull" (formula "23") (term "0,0,0"))
            (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "33")))
            (rule "ifthenelse_negated" (formula "23") (term "0"))
            (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "22"))
            (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=java_util_Collection_seq_2"))
            (rule "simplifySelectOfMemset" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
            (rule "elementOfArrayRange" (formula "23") (term "0,0") (inst "iv=iv"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "simplifySelectOfCreate" (formula "23"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "34")))
            (rule "replaceKnownSelect_taclet0_0" (formula "23") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "23") (term "0"))
            (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
            (rule "hideAuxiliaryEq" (formula "23"))
            (rule "pullOutSelect" (formula "23") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "simplifySelectOfStore" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "simplifySelectOfStore" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "simplifySelectOfStore" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "simplifySelectOfCreate" (formula "23"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "34")))
            (rule "castDel" (formula "23") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "23") (term "0,0"))
            (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "34"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "44")))
            (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "44")) (ifInst ""  (formula "8")))
            (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "23"))
            (rule "hideAuxiliaryEq" (formula "23"))
            (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "23"))
            (rule "applyEqReverse" (formula "23") (term "0,0,0,1,0") (ifseqformula "22"))
            (rule "hideAuxiliaryEq" (formula "22"))
            (rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "simplifySelectOfMemset" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "commute_and" (formula "24") (term "0,0"))
            (rule "commute_and" (formula "21") (term "0,0"))
            (rule "less_than_comparison_simple" (formula "39") (term "1"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "methodCallEmpty" (formula "39") (term "1"))
            (rule "emptyModality" (formula "39") (term "1"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "impRight" (formula "39"))
            (rule "notLeft" (formula "1"))
            (rule "methodCallReturn" (formula "40") (term "1"))
            (rule "assignment" (formula "40") (term "1"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "methodCallEmpty" (formula "40") (term "1"))
            (rule "tryEmpty" (formula "40") (term "1"))
            (rule "emptyModality" (formula "40") (term "1"))
            (rule "andRight" (formula "40"))
            (branch
               (rule "andRight" (formula "40"))
               (branch
                  (rule "andRight" (formula "40"))
                  (branch
                     (rule "andRight" (formula "40"))
                     (branch
                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "29")))
                        (rule "closeTrue" (formula "40"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "allRight" (formula "40") (inst "sk=i_1"))
                        (rule "impRight" (formula "40"))
                        (rule "notRight" (formula "41"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_ltRight" (formula "33"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                        (rule "leq_literals" (formula "29") (term "0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                        (rule "leq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnon" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "narrowSelectArrayType" (formula "2") (term "0") (ifseqformula "23") (ifseqformula "30"))
                        (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                        (rule "add_literals" (formula "25") (term "1,0"))
                        (rule "times_zero_1" (formula "25") (term "0"))
                        (rule "leq_literals" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "24"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEq" (formula "25") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "24"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "23"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "22"))
                        (rule "applyEq" (formula "18") (term "1") (ifseqformula "22"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "23") (term "0"))
                        (rule "commute_or" (formula "14") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or" (formula "23") (term "0,0"))
                        (rule "commute_or_2" (formula "23") (term "0"))
                        (rule "allLeft" (formula "23") (inst "t=i_1"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "23") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                        (rule "add_literals" (formula "23") (term "0,0,1"))
                        (rule "leq_literals" (formula "23") (term "0,1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "26") (ifseqformula "2"))
                     )
                  )
                  (branch
                     (rule "andRight" (formula "40"))
                     (branch
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_ltRight" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "30"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "21"))
                        (rule "leq_literals" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "11") (term "1,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                        (rule "inEqSimp_homoInEq1" (formula "22"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "1,0"))
                        (rule "times_zero_1" (formula "22") (term "0"))
                        (rule "leq_literals" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEq" (formula "36") (term "1,2,1,0,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "21"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "15") (term "1") (ifseqformula "19"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "19"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                        (rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "34"))
                        (rule "notRight" (formula "34"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "simplifySelectOfMemset" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "replaceKnownSelect_taclet2010_17" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2010_19" (formula "1") (term "2,0"))
                        (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "elementOfArrayRange" (formula "1") (inst "iv=iv"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                        (rule "andRight" (formula "40"))
                        (branch
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_ltRight" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "30"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "21"))
                           (rule "leq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "22"))
                           (rule "applyEq" (formula "37") (term "1,2,1,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "20"))
                           (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                           (rule "add_literals" (formula "20") (term "1,0"))
                           (rule "times_zero_1" (formula "20") (term "0"))
                           (rule "leq_literals" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "19"))
                           (rule "applyEq" (formula "15") (term "1") (ifseqformula "19"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "nnf_imp2or" (formula "10") (term "0"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "10") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                           (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "34"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "insert_constant_string_value" (formula "34") (term "0,0,1,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "insert_constant_string_value" (formula "34") (term "0,0,1,0,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "insert_constant_string_value" (formula "34") (term "0,0,1,0,0,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "castDel" (formula "34") (term "0,0,0,1,0,0,0"))
                           (rule "castDel" (formula "34") (term "0,0,0,1,0,0"))
                           (rule "castDel" (formula "34") (term "0,0,0,1,0,0,0,0"))
                           (rule "replace_known_right" (formula "34") (term "0,1,0,0,0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "28")) (ifInst ""  (formula "30")))
                           (rule "pullOutSelect" (formula "34") (term "0,0,1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfMemset" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "35") (term "0,0,1,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "34") (term "0,1,0,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "pullOutSelect" (formula "34") (term "0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                           (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "35") (term "1"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfMemset" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "35") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "12"))
                           (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "34") (term "0,1,0") (ifseqformula "31"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "pullOutSelect" (formula "34") (term "0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "35") (term "1"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfMemset" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfMemset" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "notRight" (formula "34"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                           (rule "simplifySelectOfMemset" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfArrayRange" (formula "1") (term "0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "30") (ifseqformula "2"))
                        )
                        (branch
                           (rule "andRight" (formula "40"))
                           (branch
                               (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "29")))
                              (rule "closeTrue" (formula "40"))
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "allRight" (formula "40") (inst "sk=i_1"))
                              (rule "impRight" (formula "40"))
                              (rule "notRight" (formula "41"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_ltRight" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "33"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "24"))
                              (rule "leq_literals" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnon" (formula "2"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "narrowSelectArrayType" (formula "2") (term "0") (ifseqformula "23") (ifseqformula "30"))
                              (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "23"))
                              (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                              (rule "add_literals" (formula "23") (term "1,0"))
                              (rule "times_zero_1" (formula "23") (term "0"))
                              (rule "leq_literals" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "applyEq" (formula "18") (term "1") (ifseqformula "22"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "22"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                              (rule "leq_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "nnf_imp2or" (formula "23") (term "0"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or" (formula "23") (term "0,0"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "commute_or" (formula "14") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "allLeft" (formula "23") (inst "t=i_1"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "23") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1"))
                              (rule "leq_literals" (formula "23") (term "0,1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "26") (ifseqformula "2"))
                           )
                        )
                     )
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "closeTrue" (formula "40"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "40"))
               (rule "allRight" (formula "40") (inst "sk=f_0"))
               (rule "allRight" (formula "40") (inst "sk=o_0"))
               (rule "orRight" (formula "40"))
               (rule "eqSymm" (formula "41"))
               (rule "inEqSimp_ltRight" (formula "30"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltRight" (formula "26"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
               (rule "leq_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "21"))
               (rule "leq_literals" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "39"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
               (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "2"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "23"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,0"))
               (rule "times_zero_1" (formula "2") (term "0"))
               (rule "qeq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
               (rule "inEqSimp_homoInEq1" (formula "23"))
               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "1,0"))
               (rule "times_zero_1" (formula "23") (term "0"))
               (rule "leq_literals" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,1,0,0") (ifseqformula "22"))
               (rule "applyEq" (formula "11") (term "1,1,0,0,0") (ifseqformula "22"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "22"))
               (rule "applyEq" (formula "1") (term "1,2,1,0,0,2,0") (ifseqformula "21"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "21"))
               (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "20"))
               (rule "applyEq" (formula "2") (term "1") (ifseqformula "20"))
               (rule "applyEq" (formula "16") (term "1") (ifseqformula "20"))
               (rule "pullOutSelect" (formula "1") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
               (rule "simplifySelectOfMemset" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfStore" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfMemset" (formula "2"))
               (rule "elementOfArrayRange" (formula "2") (term "0,0,0") (inst "iv=iv"))
               (rule "eqSymm" (formula "2") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1,0,0,0"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
               (rule "simplifySelectOfStore" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
               (rule "simplifySelectOfStore" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
               (rule "simplifySelectOfStore" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_6"))
               (rule "simplifySelectOfCreate" (formula "2"))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_7"))
               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "nnf_imp2or" (formula "18") (term "0"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
               (rule "mul_literals" (formula "28") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
               (rule "commute_and" (formula "8") (term "0,0,0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_and" (formula "7") (term "0,0"))
               (rule "commute_and" (formula "8") (term "1,0,0"))
               (rule "commute_or_2" (formula "28") (term "0"))
               (rule "commute_and" (formula "5") (term "0,0"))
               (rule "commute_and" (formula "4") (term "0,0"))
               (rule "commute_and" (formula "3") (term "0,0"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_and" (formula "2") (term "0,0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "commute_or_2" (formula "28") (term "0"))
               (rule "cnf_rightDist" (formula "8") (term "0,0"))
               (rule "commute_or" (formula "8") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
               (rule "commute_or" (formula "8") (term "0,1,0,0"))
               (rule "commute_or" (formula "8") (term "1,1,0,0"))
               (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
               (rule "commute_or" (formula "8") (term "1,0,0,0"))
               (rule "shift_paren_and" (formula "8") (term "0,0"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "o_0 = s_arr_2 TRUE"
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "8") (term "0,0,1,1,0,0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "8") (term "0,1,1,0,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "ifthenelse_negated" (formula "8") (term "0"))
                  (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "42") (term "0,0,0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "42") (term "0,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "notRight" (formula "42"))
                  (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                  (rule "close" (formula "31") (ifseqformula "1"))
               )
               (branch "o_0 = s_arr_2 FALSE"
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "7") (term "1,1,0,0,0,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "29")))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_and_2" (formula "1") (term "0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0"))
                  (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
      (branch "Null Reference (newObject = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Exceptional Post (size)"
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (size)"
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
   (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
   (rule "nnf_imp2or" (formula "4") (term "0"))
   (rule "nnf_notAnd" (formula "4") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
   (rule "mul_literals" (formula "4") (term "1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
   (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "15"))
   (rule "closeTrue" (formula "15"))
)
(branch "Null reference (_list = null)"
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
   (rule "closeTrue" (formula "15"))
)
)
}
