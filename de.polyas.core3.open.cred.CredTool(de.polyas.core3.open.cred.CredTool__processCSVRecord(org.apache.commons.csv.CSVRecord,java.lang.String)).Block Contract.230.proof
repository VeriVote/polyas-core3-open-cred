\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 20 00:15:46 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\problem {
{heap:=heap_Before_BLOCK}
  !(  wellFormed(heap_Before_BLOCK)
    & heap = heap_Before_BLOCK
    & !self_52 = null
    &   boolean::select(heap,
                        self_52,
                        java.lang.Object::<created>)
      = TRUE
    &   de.polyas.core3.open.cred.CredTool::exactInstance(self_52)
      = TRUE
    & (  ((  _password_7 = null
           |   boolean::select(heap_Before_BLOCK,
                               _password_7,
                               java.lang.Object::<created>)
             = TRUE)<<SC>>)
       & ((  _record_6 = null
           |   boolean::select(heap_Before_BLOCK,
                               _record_6,
                               java.lang.Object::<created>)
             = TRUE)<<SC>>)
       & ((  dataForVoter_3_Before = null
           |   boolean::select(heap_Before_BLOCK,
                               dataForVoter_3_Before,
                               java.lang.Object::<created>)
             = TRUE)<<SC>>))
    & ((  (((!(dataForVoter_3_Before = null)<<origin("requires @ file CredTool.java @ line 188","[]")>>)<<origin("requires @ file CredTool.java @ line 188","[]")>>
        & (!(_record_6 = null)<<origin("requires @ file CredTool.java @ line 188","[]")>>)<<origin("requires @ file CredTool.java @ line 188","[]")>>)<<SC,
                                                                                                                                                        origin("requires @ file CredTool.java @ line 188","[]")>>
        & (!(_password_7 = null)<<origin("requires @ file CredTool.java @ line 188","[]")>>)<<origin("requires @ file CredTool.java @ line 188","[]")>>)<<SC,
                                                                                                                                                          origin("requires @ file CredTool.java @ line 188","[]")>>
        & ((  java.math.BigInteger::<$inv>(heap_Before_BLOCK)
            & ((  de.polyas.core3.open.cred.CredentialGenerator::<$inv>(heap_Before_BLOCK)
                & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heap_Before_BLOCK)
                    & ((  java.lang.Object::<inv>(heap_Before_BLOCK,
                                                  _record_6)
                        & ((  java.lang.Object::<inv>(heap_Before_BLOCK,
                                                      self_52)
                            & ((  (\forall int j;
                                     ((   (  leq(Z(0(#)),
                                                 j)<<origin("requires @ file CredTool.java @ line 196","[]")>>
                                           & lt(j,
                                                seqLen(Seq::select(heap_Before_BLOCK,
                                                                   java.util.ArrayList::select(heap_Before_BLOCK,
                                                                                               self_52,
                                                                                               de.polyas.core3.open.cred.CredTool::$inputColsForDist),
                                                                   java.util.Collection::$seq)))<<origin("requires @ file CredTool.java @ line 196","[]")>>)<<SC,
                                                                                                                                                              origin("requires @ file CredTool.java @ line 196","[]")>>
                                       -> (\exists int i;
                                             ((  (leq(Z(0(#)),
                                                      i)<<origin("requires @ file CredTool.java @ line 196","[]")>>
                                               & lt(i,
                                                    seqLen(Seq::select(heap_Before_BLOCK,
                                                                       _record_6,
                                                                       org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 196","[]")>>)<<SC,
                                                                                                                                                                                  origin("requires @ file CredTool.java @ line 196","[]")>>
                                               & (  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                               _record_6,
                                                                                               org.apache.commons.csv.CSVRecord::$key_seq),
                                                                                   i))
                                                  = (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                               java.util.ArrayList::select(heap_Before_BLOCK,
                                                                                                                           self_52,
                                                                                                                           de.polyas.core3.open.cred.CredTool::$inputColsForDist),
                                                                                               java.util.Collection::$seq),
                                                                                   j)))<<origin("requires @ file CredTool.java @ line 196","[]")>>)<<SC,
                                                                                                                                                     origin("requires @ file CredTool.java @ line 196","[]")>>))<<origin("requires @ file CredTool.java @ line 196","[]")>>)<<origin("requires @ file CredTool.java @ line 196","[]")>>))<<origin("requires @ file CredTool.java @ line 196","[]")>>
                                & ((  (\forall int j;
                                         ((   (  leq(Z(0(#)),
                                                     j)<<origin("requires @ file CredTool.java @ line 200","[]")>>
                                               & lt(j,
                                                    seqLen(Seq::select(heap_Before_BLOCK,
                                                                       java.util.ArrayList::select(heap_Before_BLOCK,
                                                                                                   self_52,
                                                                                                   de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),
                                                                       java.util.Collection::$seq)))<<origin("requires @ file CredTool.java @ line 200","[]")>>)<<SC,
                                                                                                                                                                  origin("requires @ file CredTool.java @ line 200","[]")>>
                                           -> (\exists int i;
                                                 ((  (leq(Z(0(#)),
                                                          i)<<origin("requires @ file CredTool.java @ line 200","[]")>>
                                                   & lt(i,
                                                        seqLen(Seq::select(heap_Before_BLOCK,
                                                                           _record_6,
                                                                           org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 200","[]")>>)<<SC,
                                                                                                                                                                                      origin("requires @ file CredTool.java @ line 200","[]")>>
                                                   & (  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                                   _record_6,
                                                                                                   org.apache.commons.csv.CSVRecord::$key_seq),
                                                                                       i))
                                                      = (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                                   java.util.ArrayList::select(heap_Before_BLOCK,
                                                                                                                               self_52,
                                                                                                                               de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),
                                                                                                   java.util.Collection::$seq),
                                                                                       j)))<<origin("requires @ file CredTool.java @ line 200","[]")>>)<<SC,
                                                                                                                                                         origin("requires @ file CredTool.java @ line 200","[]")>>))<<origin("requires @ file CredTool.java @ line 200","[]")>>)<<origin("requires @ file CredTool.java @ line 200","[]")>>))<<origin("requires @ file CredTool.java @ line 200","[]")>>
                                    & ((  (\exists int i;
                                             ((  (leq(Z(0(#)),
                                                      i)<<origin("requires @ file CredTool.java @ line 204","[]")>>
                                               & lt(i,
                                                    seqLen(Seq::select(heap_Before_BLOCK,
                                                                       _record_6,
                                                                       org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 204","[]")>>)<<SC,
                                                                                                                                                                                  origin("requires @ file CredTool.java @ line 204","[]")>>
                                               & (  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                               _record_6,
                                                                                               org.apache.commons.csv.CSVRecord::$key_seq),
                                                                                   i))
                                                  = java.lang.String::select(heap_Before_BLOCK,
                                                                             self_52,
                                                                             de.polyas.core3.open.cred.CredTool::$idCol))<<origin("requires @ file CredTool.java @ line 204","[]")>>)<<SC,
                                                                                                                                                                                       origin("requires @ file CredTool.java @ line 204","[]")>>))<<origin("requires @ file CredTool.java @ line 204","[]")>>
                                        & (\forall int i;
                                             ((   (  leq(Z(0(#)),
                                                         i)<<origin("requires @ file CredTool.java @ line 207","[]")>>
                                                   & lt(i,
                                                        seqLen(Seq::select(heap_Before_BLOCK,
                                                                           _record_6,
                                                                           org.apache.commons.csv.CSVRecord::$key_seq)))<<origin("requires @ file CredTool.java @ line 207","[]")>>)<<SC,
                                                                                                                                                                                      origin("requires @ file CredTool.java @ line 207","[]")>>
                                               -> ((  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                                 _record_6,
                                                                                                 org.apache.commons.csv.CSVRecord::$key_seq),
                                                                                     i))
                                                    = java.lang.String::select(heap_Before_BLOCK,
                                                                               self_52,
                                                                               de.polyas.core3.open.cred.CredTool::$idCol))<<origin("requires @ file CredTool.java @ line 207","[]")>>
                                               -> (\exists int j;
                                                     ((  (leq(Z(0(#)),
                                                              j)<<origin("requires @ file CredTool.java @ line 207","[]")>>
                                                       & lt(j,
                                                            seqLen(strContent((java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                                                         _record_6,
                                                                                                                         org.apache.commons.csv.CSVRecord::$value_seq),
                                                                                                             i)))))<<origin("requires @ file CredTool.java @ line 207","[]")>>)<<SC,
                                                                                                                                                                                 origin("requires @ file CredTool.java @ line 207","[]")>>
                                                       & gt((int)(any::seqGet(strContent((java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,
                                                                                                                                    _record_6,
                                                                                                                                    org.apache.commons.csv.CSVRecord::$value_seq),
                                                                                                                        i))),
                                                                              j)),
                                                            C(2(3(#))))<<origin("requires @ file CredTool.java @ line 207","[]")>>)<<SC,
                                                                                                                                     origin("requires @ file CredTool.java @ line 207","[]")>>))<<origin("requires @ file CredTool.java @ line 207","[]")>>)<<origin("requires @ file CredTool.java @ line 207","[]")>>)<<origin("requires @ file CredTool.java @ line 207","[]")>>))<<origin("requires @ file CredTool.java @ line 207","[]")>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>)
    & {self_52:=self_52
       || (_password_7:=_password_7
       || _record_6:=_record_6
       || dataForVoter_3:=dataForVoter_3_Before)}
        \[{method-frame(source=processCSVRecord(org.apache.commons.csv.CSVRecord, java.lang.String)@de.polyas.core3.open.cred.CredTool,this=self_52): {java.lang.Throwable exc#1 = null;breakOut:try { {
                  printStatus();
                  final String voterId = _record_6.get(this.idCol);
                  exitIfIdInvalid(voterId);
                  dataForVoter_3=CredentialGenerator.generateDataForVoter(voterId,_password_7);
                  initDistVals(_record_6,dataForVoter_3);
                }
              }     catch (java.lang.Throwable e#18) {
                exc#1=e#18;
              }
            }
          }\] (  self_52_After_BLOCK = self_52
               & _password_7 = _password_7
               & _record_6 = _record_6
               & dataForVoter_3_After = dataForVoter_3
               & exc#1_After_BLOCK = exc#1
               & heap_After_BLOCK = heap))

}

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "137552")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "notRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "exLeft" (formula "14") (inst "sk=i_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "eqSymm" (formula "12") (term "1,0,1,0"))
(rule "eqSymm" (formula "13") (term "1,0,1,0"))
(rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
 (builtin "One Step Simplification" (formula "6"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "20"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "17") (term "0,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,1,1,0,0,1,1,0"))
(rule "castedGetAny" (formula "17") (term "0,1,0,1,1,0"))
(rule "castedGetAny" (formula "16") (term "0"))
(rule "castedGetAny" (formula "12") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "12") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "1,1,0,1,0"))
(rule "castedGetAny" (formula "13") (term "0,1,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,0,1,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "variableDeclarationAssign" (formula "18") (term "1"))
(rule "variableDeclaration" (formula "18") (term "1") (newnames "exc_67"))
(rule "assignment" (formula "18") (term "1"))
 (builtin "One Step Simplification" (formula "18"))
(rule "boxToDiamond" (formula "18") (term "1"))
 (builtin "One Step Simplification" (formula "18"))
(rule "notLeft" (formula "18"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "10") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1"))
(rule "expand_inInt" (formula "10") (term "1,0,0,1,0"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
(rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1,0"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "eqSymm" (formula "10"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "exLeft" (formula "18") (inst "sk=i_1"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "exLeft" (formula "15") (inst "sk=i_2_0"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "castedGetAny" (formula "19") (term "0,0,1,0"))
(rule "castedGetAny" (formula "18") (term "0,0,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "castedGetAny" (formula "22") (term "0"))
(rule "castedGetAny" (formula "17") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "9"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "commute_and" (formula "23") (term "0,0"))
(rule "commute_and" (formula "24") (term "0,0"))
(rule "commute_and" (formula "28") (term "0,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "8"))
(rule "true_left" (formula "8"))
(rule "commute_and" (formula "22") (term "0,0,1,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "8"))
(rule "true_left" (formula "8"))
(rule "commute_and" (formula "22") (term "0,0,1,0"))
(rule "commute_and_2" (formula "26") (term "0,1,1,0"))
(rule "commute_and" (formula "10") (term "1,0,0"))
(rule "commute_and" (formula "10") (term "0,0,0"))
(rule "commute_and" (formula "9") (term "1,0,0"))
(rule "commute_and" (formula "9") (term "0,0,0"))
(rule "commute_and" (formula "17") (term "0,0"))
(rule "commute_and" (formula "16") (term "0,0"))
(rule "commute_and" (formula "12") (term "0,0"))
(rule "commute_and_2" (formula "21") (term "0,1,0"))
(rule "commute_and_2" (formula "22") (term "0,1,0"))
 (builtin "Use Operation Contract" (formula "57") (newnames "heapBefore_printStatus,exc_68,heapAfter_printStatus,anon_heap_printStatus") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::printStatus()].JML normal_behavior operation contract.0"))
(branch "Post (printStatus)"
    (builtin "One Step Simplification" (formula "28"))
    (builtin "One Step Simplification" (formula "61"))
    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")))
    (builtin "One Step Simplification" (formula "29"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "29"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "30"))
   (rule "variableDeclarationFinalAssign" (formula "63") (term "1"))
   (rule "variableDeclarationFinal" (formula "63") (term "1") (newnames "voterId_4"))
   (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "32") (term "0"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "31") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "56")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "31"))
   (rule "exLeft" (formula "35") (inst "sk=i_2"))
   (rule "andLeft" (formula "35"))
   (rule "andLeft" (formula "35"))
   (rule "exLeft" (formula "32") (inst "sk=i_2_1"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "32"))
   (rule "castedGetAny" (formula "36") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "35") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "31") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "39") (term "0"))
   (rule "castedGetAny" (formula "34") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "37"))
   (rule "inEqSimp_commuteLeq" (formula "32"))
   (rule "commute_and" (formula "36") (term "0,0"))
   (rule "commute_and" (formula "35") (term "0,0"))
   (rule "commute_and" (formula "31") (term "0,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0"))
   (rule "shift_paren_and" (formula "9") (term "0,0"))
   (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
   (rule "commute_and_2" (formula "10") (term "0,0,0"))
   (rule "commute_and_2" (formula "9") (term "0,0,0"))
   (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
   (rule "lenNonNegative" (formula "24") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "charLiteral_to_int" (formula "27") (term "1,0,0,0,1,1,0"))
   (rule "seqGetAlphaCast" (formula "26") (term "0"))
   (rule "castedGetAny" (formula "26") (term "0"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "lenNonNegative" (formula "8") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "70") (term "1"))
   (rule "variableDeclarationAssign" (formula "70") (term "1"))
   (rule "variableDeclaration" (formula "70") (term "1") (newnames "var"))
   (rule "assignment" (formula "70") (term "1"))
    (builtin "One Step Simplification" (formula "70"))
   (rule "variableDeclarationAssign" (formula "70") (term "1"))
   (rule "variableDeclaration" (formula "70") (term "1") (newnames "var_1"))
   (rule "assignment_read_attribute_this" (formula "70") (term "1"))
    (builtin "One Step Simplification" (formula "70"))
   (rule "pullOutSelect" (formula "70") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "3")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "70") (term "0,1,0"))
    (builtin "Use Operation Contract" (formula "70") (newnames "heapBefore_get,result_49,exc_69") (contract "org.apache.commons.csv.CSVRecord[org.apache.commons.csv.CSVRecord::get(java.lang.String)].JML normal_behavior operation contract.0"))
   (branch "Post (get)"
       (builtin "One Step Simplification" (formula "74"))
       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
       (builtin "One Step Simplification" (formula "41"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "insert_constant_string_value" (formula "52") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "52"))
      (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "51"))
      (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "50"))
      (rule "insert_constant_string_value" (formula "69") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "69"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1,1") (ifseqformula "30"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,1,0") (ifseqformula "30"))
      (rule "castDel" (formula "52") (term "0,0"))
      (rule "castDel" (formula "51") (term "0,0"))
      (rule "castDel" (formula "50") (term "0,0"))
      (rule "castDel" (formula "69") (term "0,0"))
      (rule "andLeft" (formula "42"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "43"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "42"))
      (rule "notLeft" (formula "42"))
      (rule "exLeft" (formula "44") (inst "sk=i_3"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "exLeft" (formula "41") (inst "sk=i_4"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "53"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "castedGetAny" (formula "49") (term "0"))
      (rule "castedGetAny" (formula "44") (term "0"))
      (rule "castedGetAny" (formula "43") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "47"))
      (rule "inEqSimp_commuteLeq" (formula "41"))
      (rule "assignment" (formula "85") (term "1"))
       (builtin "One Step Simplification" (formula "85"))
      (rule "blockEmpty" (formula "85") (term "1"))
      (rule "pullOutSelect" (formula "48") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "88")) (ifInst ""  (formula "5")))
      (rule "replaceKnownSelect_taclet00_6" (formula "43") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "42") (term "0,1"))
      (rule "replaceKnownSelect_taclet00_6" (formula "50") (term "0,0"))
      (rule "elementOfSingleton" (formula "48") (term "0,0"))
       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "88")))
      (rule "hideAuxiliaryEq" (formula "48"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "49") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "43") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "42") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "48") (term "0,1"))
      (rule "pullOutSelect" (formula "44") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "88")) (ifInst ""  (formula "5")))
      (rule "elementOfSingleton" (formula "44") (term "0,0"))
       (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "88")))
      (rule "hideAuxiliaryEq" (formula "44"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "44") (term "0,0"))
      (rule "commute_or" (formula "52"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "50") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "50") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "50") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "50") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "50") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "50") (term "0,0,0,0,1,0,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "50") (term "0,1,1,0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "50") (term "0,0,0,0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "50") (term "0,1,1,0,0,0,1"))
      (rule "replaceKnownSelect_taclet00_6" (formula "50") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "50") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "50") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "50") (term "0,1,1,0,0,0,1,0"))
      (rule "expand_inInt" (formula "50") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "50") (term "1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0,1"))
      (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0,1,0"))
      (rule "andLeft" (formula "50"))
      (rule "andLeft" (formula "50"))
      (rule "eqSymm" (formula "50"))
      (rule "castedGetAny" (formula "51") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "50") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "51") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
      (rule "commute_or" (formula "40"))
      (rule "commute_and" (formula "51") (term "0,0,0"))
      (rule "commute_and" (formula "51") (term "1,0,0"))
      (rule "commute_and" (formula "50") (term "0,0,0"))
      (rule "commute_and" (formula "50") (term "1,0,0"))
      (rule "shift_paren_and" (formula "51") (term "0,0"))
      (rule "commute_and_2" (formula "51") (term "0,0,0"))
      (rule "shift_paren_and" (formula "50") (term "0,0"))
      (rule "commute_and_2" (formula "50") (term "0,0,0"))
      (rule "lenNonNegative" (formula "20") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "lenNonNegative" (formula "15") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "seqGetAlphaCast" (formula "23") (term "0"))
      (rule "castedGetAny" (formula "23") (term "0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "seqGetAlphaCast" (formula "17") (term "0"))
      (rule "castedGetAny" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "lenNonNegative" (formula "24") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24"))
       (builtin "Use Operation Contract" (formula "87") (newnames "heapBefore_exitIfIdInvalid,exc_70,heapAfter_exitIfIdInvalid,anon_heap_exitIfIdInvalid") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::exitIfIdInvalid(java.lang.String)].JML normal_behavior operation contract.0"))
      (branch "Post (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "91"))
          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")) (ifInst ""  (formula "53")) (ifInst ""  (formula "59")))
          (builtin "One Step Simplification" (formula "57"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1") (ifseqformula "33"))
         (rule "andLeft" (formula "56"))
         (rule "andLeft" (formula "59"))
         (rule "exLeft" (formula "59") (inst "sk=j_0"))
         (rule "andLeft" (formula "59"))
         (rule "andLeft" (formula "59"))
         (rule "castedGetAny" (formula "61") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "59"))
         (rule "commute_or" (formula "62"))
         (rule "charLiteral_to_int" (formula "61") (term "1"))
         (rule "seqGetAlphaCast" (formula "41") (term "0"))
         (rule "castedGetAny" (formula "41") (term "0"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "true_left" (formula "41"))
         (rule "seqGetAlphaCast" (formula "38") (term "0"))
         (rule "castedGetAny" (formula "38") (term "0"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "true_left" (formula "38"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "78"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "true_left" (formula "55"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "91") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "92"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "Use Operation Contract" (formula "99") (newnames "heapBefore_generateDataForVoter,result_50,exc_71,heapAfter_generateDataForVoter,anon_heap_generateDataForVoter") (contract "de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator::generateDataForVoter(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "69"))
             (builtin "One Step Simplification" (formula "103"))
             (builtin "One Step Simplification" (formula "68"))
             (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "71")) (ifInst ""  (formula "107")) (ifInst ""  (formula "71")) (ifInst ""  (formula "107")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1,1") (ifseqformula "61"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,1,1") (ifseqformula "39"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1,0,1") (ifseqformula "61"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,1,0,1") (ifseqformula "39"))
            (rule "andLeft" (formula "68"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,1,0") (ifseqformula "68"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,1,0") (ifseqformula "61"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,1,1,0") (ifseqformula "39"))
            (rule "andLeft" (formula "71"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "73"))
            (rule "andLeft" (formula "72"))
            (rule "andLeft" (formula "70"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "75"))
            (rule "andLeft" (formula "74"))
            (rule "andLeft" (formula "70"))
            (rule "andLeft" (formula "71"))
            (rule "notLeft" (formula "72"))
            (rule "replace_known_left" (formula "79") (term "0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "true_left" (formula "79"))
            (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "79"))
             (builtin "One Step Simplification" (formula "69"))
            (rule "assignment" (formula "112") (term "1"))
             (builtin "One Step Simplification" (formula "112"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "74"))
            (rule "insert_constant_string_value" (formula "74") (term "0,0,0,0") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "castDel" (formula "74") (term "0,0,0,0,0"))
            (rule "andLeft" (formula "74"))
            (rule "notLeft" (formula "75"))
            (rule "andLeft" (formula "74"))
            (rule "notLeft" (formula "74"))
            (rule "notLeft" (formula "74"))
            (rule "pullOutSelect" (formula "79") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_14" (formula "79") (term "0"))
            (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_17" (formula "78") (term "0"))
            (rule "commute_or_2" (formula "77"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "75"))
            (rule "andLeft" (formula "75"))
            (rule "andLeft" (formula "75"))
            (rule "andLeft" (formula "75"))
            (rule "notLeft" (formula "75"))
            (rule "notLeft" (formula "75"))
            (rule "pullOutSelect" (formula "76") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "76"))
            (rule "replaceKnownSelect_taclet0000_18" (formula "80") (term "0"))
            (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "76"))
            (rule "elementOfSingleton" (formula "76") (term "0,0"))
             (builtin "One Step Simplification" (formula "76"))
            (rule "hideAuxiliaryEq" (formula "76"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_20" (formula "79") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_20" (formula "76") (term "1"))
            (rule "pullOutSelect" (formula "75") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
            (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "replaceKnownSelect_taclet0000_21" (formula "80") (term "0"))
            (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "elementOfSingleton" (formula "75") (term "0,0"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "hideAuxiliaryEq" (formula "75"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_23" (formula "79") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_23" (formula "75") (term "1"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "74"))
            (rule "andLeft" (formula "74"))
            (rule "notLeft" (formula "74"))
            (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=java_math_BigInteger_value_0"))
            (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "80")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,0,0") (ifseqformula "39"))
            (rule "ifthenelse_negated" (formula "74") (term "0"))
            (rule "applyEqRigid" (formula "74") (term "1") (ifseqformula "75"))
            (rule "ifEqualsInteger" (formula "74"))
            (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0000_25" (formula "75") (term "1,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_25" (formula "75") (term "1,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_25" (formula "75") (term "1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_25" (formula "75") (term "1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0000_25" (formula "75") (term "1,0,0,0,0,1"))
            (rule "replaceKnownSelect_taclet0000_25" (formula "75") (term "1,0,1,0,0,1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "80") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "74") (term "1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "74") (term "1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "74") (term "1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "74") (term "1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "74") (term "1,0,0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_27" (formula "74") (term "1,0,1,0,0,1"))
            (rule "replace_known_left" (formula "74") (term "0,0,0,1") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "11")))
            (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "113")) (ifInst ""  (formula "11")))
            (rule "elementOfSingleton" (formula "74") (term "0,0"))
             (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "113")))
            (rule "hideAuxiliaryEq" (formula "74"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "74") (term "0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "70"))
            (rule "andLeft" (formula "70"))
            (rule "andLeft" (formula "70"))
            (rule "notLeft" (formula "72"))
            (rule "notLeft" (formula "71"))
            (rule "notLeft" (formula "70"))
            (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "82")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "62"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "83")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "63"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "64"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "85")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_1"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "86")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "44"))
            (rule "ifthenelse_negated" (formula "2") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "67"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_2"))
            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "46"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "88")))
            (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "88")))
            (rule "ifthenelse_negated" (formula "5") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_2"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "89")))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "89")))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "79"))
            (rule "andLeft" (formula "79"))
            (rule "andLeft" (formula "79"))
            (rule "andLeft" (formula "79"))
            (rule "notLeft" (formula "79"))
            (rule "notLeft" (formula "79"))
            (rule "pullOutSelect" (formula "80") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_1"))
            (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "80"))
            (rule "replaceKnownSelect_taclet0000_39" (formula "89") (term "0"))
            (rule "replaceKnownSelect_taclet0000_18" (formula "80") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_20" (formula "80") (term "0"))
            (rule "hideAuxiliaryEq" (formula "80"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_40" (formula "88") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_40" (formula "80") (term "1"))
            (rule "pullOutSelect" (formula "79") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_1"))
            (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "replaceKnownSelect_taclet0000_41" (formula "89") (term "0"))
            (rule "replaceKnownSelect_taclet0000_21" (formula "79") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_23" (formula "79") (term "0"))
            (rule "hideAuxiliaryEq" (formula "79"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_42" (formula "79") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_42" (formula "88") (term "0"))
            (rule "commute_or_2" (formula "78") (term "0"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "85"))
            (rule "true_left" (formula "85"))
            (rule "commute_or" (formula "86") (term "0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "84"))
            (rule "andLeft" (formula "84"))
            (rule "andLeft" (formula "84"))
            (rule "andLeft" (formula "86"))
            (rule "notLeft" (formula "85"))
            (rule "notLeft" (formula "84"))
            (rule "pullOutSelect" (formula "85") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
            (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "124")))
            (rule "replaceKnownSelect_taclet0000_43" (formula "90") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,0") (ifseqformula "48"))
            (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "85"))
            (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "124")) (ifInst ""  (formula "13")))
            (rule "elementOfSingleton" (formula "85") (term "0,0"))
             (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "124")))
            (rule "hideAuxiliaryEq" (formula "85"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "89") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "85") (term "1"))
            (rule "pullOutSelect" (formula "84") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
            (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "123")))
            (rule "replaceKnownSelect_taclet0000_46" (formula "89") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0") (ifseqformula "48"))
            (rule "replace_known_left" (formula "84") (term "0,0,0,0") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "84"))
            (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "123")) (ifInst ""  (formula "13")))
            (rule "elementOfSingleton" (formula "84") (term "0,0"))
             (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "123")))
            (rule "hideAuxiliaryEq" (formula "84"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "88") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "84") (term "1"))
            (rule "commute_or_2" (formula "9") (term "0,0"))
            (rule "commute_or_2" (formula "6") (term "0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "109") (term "0") (ifseqformula "14"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "108") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "107") (term "0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "102") (term "0") (ifseqformula "18"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "103"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "104") (term "0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "105"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "111") (term "0") (ifseqformula "20"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "112"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "21"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "119") (term "0") (ifseqformula "22"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "120"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "122") (term "0") (ifseqformula "23"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "123"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "24"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "126") (term "0") (ifseqformula "25"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "127"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1") (ifseqformula "26"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "26"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "124") (term "0") (ifseqformula "27"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "129") (term "0") (ifseqformula "28"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "130"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "128") (term "0") (ifseqformula "29"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "129"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "133") (term "0") (ifseqformula "30"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "134"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or_2" (formula "20") (term "0,0"))
            (rule "commute_or" (formula "25") (term "0,0"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "98"))
            (rule "true_left" (formula "98"))
            (rule "commute_or" (formula "22") (term "0,0"))
            (rule "commute_or" (formula "19") (term "0,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "97"))
            (rule "andLeft" (formula "97"))
            (rule "andLeft" (formula "97"))
            (rule "andLeft" (formula "99"))
            (rule "notLeft" (formula "97"))
            (rule "notLeft" (formula "97"))
            (rule "pullOutSelect" (formula "97") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_1"))
            (rule "simplifySelectOfAnonEQ" (formula "97") (ifseqformula "95"))
             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "142")))
            (rule "replaceKnownSelect_taclet0000_49" (formula "108") (term "0"))
            (rule "replaceKnownSelect_taclet0000_46" (formula "97") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "97") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,0") (ifseqformula "88"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "97") (term "0,0,0,0") (ifseqformula "66"))
            (rule "replace_known_left" (formula "97") (term "0,0,0,0,0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "97"))
            (rule "hideAuxiliaryEq" (formula "97"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_50" (formula "97") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_50" (formula "107") (term "0"))
            (rule "pullOutSelect" (formula "98") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_1"))
            (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "95"))
             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "141")))
            (rule "replaceKnownSelect_taclet0000_51" (formula "107") (term "0"))
            (rule "replaceKnownSelect_taclet0000_43" (formula "98") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "98") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0") (ifseqformula "88"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0") (ifseqformula "66"))
            (rule "replace_known_left" (formula "98") (term "0,0,0,0,0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "hideAuxiliaryEq" (formula "98"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_52" (formula "106") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_52" (formula "98") (term "1"))
            (rule "commute_or_2" (formula "96"))
            (rule "commute_or_2" (formula "105"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "103"))
            (rule "andLeft" (formula "103"))
            (rule "notLeft" (formula "103"))
            (rule "pullOutSelect" (formula "103") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
            (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "115")))
            (rule "replaceKnownSelect_taclet0000_53" (formula "107") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "103") (term "0,0,0") (ifseqformula "66"))
            (rule "ifthenelse_negated" (formula "103") (term "0"))
            (rule "pullOutSelect" (formula "103") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
            (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "116")))
            (rule "elementOfSingleton" (formula "103") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "103") (ifInst ""  (formula "116")))
            (rule "ifthenelse_negated" (formula "103") (term "0"))
            (rule "seqGetAlphaCast" (formula "85") (term "0"))
            (rule "castedGetAny" (formula "85") (term "0"))
             (builtin "One Step Simplification" (formula "85"))
            (rule "true_left" (formula "85"))
            (rule "seqGetAlphaCast" (formula "79") (term "0"))
            (rule "castedGetAny" (formula "79") (term "0"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "true_left" (formula "79"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "102"))
            (rule "true_left" (formula "102"))
            (rule "seqGetAlphaCast" (formula "80") (term "0"))
            (rule "castedGetAny" (formula "80") (term "0"))
             (builtin "One Step Simplification" (formula "80"))
            (rule "true_left" (formula "80"))
             (builtin "Use Operation Contract" (formula "144") (newnames "heapBefore_initDistVals,exc_72,heapAfter_initDistVals,anon_heap_initDistVals") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::initDistVals(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].JML normal_behavior operation contract.0"))
            (branch "Post (initDistVals)"
                (builtin "One Step Simplification" (formula "108"))
                (builtin "One Step Simplification" (formula "109"))
                (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "150")) (ifInst ""  (formula "115")) (ifInst ""  (formula "150")) (ifInst ""  (formula "115")))
                (builtin "One Step Simplification" (formula "148"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "1,1") (ifseqformula "95"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,1,1") (ifseqformula "88"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "1,0,1") (ifseqformula "95"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,0,1,1") (ifseqformula "66"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,1,0,1") (ifseqformula "88"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,0,1,0,1") (ifseqformula "66"))
               (rule "andLeft" (formula "108"))
               (rule "andLeft" (formula "111"))
               (rule "andLeft" (formula "109"))
               (rule "andLeft" (formula "113"))
               (rule "andLeft" (formula "112"))
               (rule "andLeft" (formula "110"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "113"))
               (rule "andLeft" (formula "110"))
               (rule "andLeft" (formula "115"))
               (rule "andLeft" (formula "111"))
               (rule "eqSymm" (formula "117") (term "1,0,1,0"))
               (rule "replace_known_left" (formula "119") (term "0,0,0") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "119"))
               (rule "true_left" (formula "119"))
               (rule "castedGetAny" (formula "117") (term "1,1,0,1,0"))
               (rule "castedGetAny" (formula "117") (term "0,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0,0,1,0"))
               (rule "pullOutSelect" (formula "117") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_0"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "95"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,1,0,0") (ifseqformula "88"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,1,0,0") (ifseqformula "66"))
               (rule "replaceKnownSelect_taclet00000_56" (formula "118") (term "0,0,1,0,1,0"))
               (rule "pullOutSelect" (formula "118") (term "0,1,1,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "95"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "161")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "88"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0,0") (ifseqformula "66"))
               (rule "replaceKnownSelect_taclet00000_57" (formula "119") (term "0,1,1,0,1,0"))
               (rule "replace_known_left" (formula "118") (term "0,0,0,0,0") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "88"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "161")))
               (rule "replaceKnownSelect_taclet00_6" (formula "118") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "118") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "66"))
               (rule "replace_known_left" (formula "118") (term "0,0,0,0") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "hideAuxiliaryEq" (formula "118"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_59" (formula "118") (term "0,1,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_59" (formula "118") (term "0,1,1,0,0,1,0"))
               (rule "pullOutSelect" (formula "117") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "95"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "160")))
               (rule "replaceKnownSelect_taclet00000_60" (formula "118") (term "1,2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0") (ifseqformula "88"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0,0") (ifseqformula "66"))
               (rule "replaceKnownSelect_taclet00000_60" (formula "118") (term "0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_60" (formula "118") (term "1,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_60" (formula "118") (term "1,0,0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_60" (formula "118") (term "1,0,1,0,0,1,0,0"))
               (rule "replace_known_left" (formula "117") (term "0,0,0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "88"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "160")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0") (ifseqformula "66"))
               (rule "replace_known_left" (formula "117") (term "0,0,0,0") (ifseqformula "32"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "160")) (ifInst ""  (formula "32")))
               (rule "elementOfSingleton" (formula "117") (term "0,0"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "160")))
               (rule "hideAuxiliaryEq" (formula "117"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "117") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "117") (term "1,2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "117") (term "0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "117") (term "1,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "117") (term "1,0,0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "117") (term "1,0,1,0,0,1,0,0"))
               (rule "replace_known_right" (formula "117") (term "0,0,0,0") (ifseqformula "144"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "4")))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "88"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "144")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "117") (term "0,0,0") (ifseqformula "66"))
               (rule "replace_known_left" (formula "117") (term "0,0,0,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "144")) (ifInst ""  (formula "4")))
               (rule "elementOfSingleton" (formula "117") (term "0,0"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "144")))
               (rule "hideAuxiliaryEq" (formula "117"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_66" (formula "117") (term "0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_66" (formula "117") (term "0,0,1,0,1,0"))
               (rule "commuteUnion" (formula "108") (term "0,1,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "128") (term "0") (ifseqformula "31"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "129"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "104") (term "0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "104"))
               (rule "hideAuxiliaryEq" (formula "104"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_67" (formula "120") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_67" (formula "104") (term "1"))
               (rule "replace_known_left" (formula "103") (term "0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "103"))
               (rule "hideAuxiliaryEq" (formula "103"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_68" (formula "119") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_68" (formula "103") (term "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "32"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "126") (term "0") (ifseqformula "33"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "127"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "commute_or" (formula "29") (term "0,0,0"))
               (rule "commute_or" (formula "26") (term "0,0,0"))
               (rule "lenNonNegative" (formula "95") (term "1"))
               (rule "inEqSimp_commuteLeq" (formula "95"))
               (rule "seqGetAlphaCast" (formula "97") (term "0"))
               (rule "castedGetAny" (formula "97") (term "0"))
                (builtin "One Step Simplification" (formula "97"))
               (rule "true_left" (formula "97"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "127") (term "0") (ifseqformula "68"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "128"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "102"))
               (rule "true_left" (formula "102"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "102"))
               (rule "andLeft" (formula "102"))
               (rule "notLeft" (formula "102"))
               (rule "pullOutSelect" (formula "102") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
               (rule "simplifySelectOfAnonEQ" (formula "102") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "131")))
               (rule "replaceKnownSelect_taclet00000_69" (formula "123") (term "0"))
               (rule "replaceKnownSelect_taclet0000_53" (formula "102") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_67" (formula "102") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_68" (formula "102") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "0,0,0") (ifseqformula "92"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "0,0,0,0") (ifseqformula "70"))
               (rule "replace_known_left" (formula "102") (term "0,0,0,0,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "102"))
               (rule "hideAuxiliaryEq" (formula "102"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_70" (formula "102") (term "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_70" (formula "122") (term "0"))
               (rule "commute_or" (formula "24") (term "0,0,0"))
               (rule "commute_or" (formula "101") (term "0,0"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "116") (inst "i=i") (inst "i_0=i_0"))
               (rule "replaceKnownSelect_taclet00000_57" (formula "116") (term "0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_59" (formula "116") (term "0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_57" (formula "116") (term "0,1,1,0,0,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_57" (formula "116") (term "0,0,0,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_59" (formula "116") (term "0,1,1,0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_59" (formula "116") (term "0,0,0,0,1,0,1,0"))
               (rule "expand_inInt" (formula "116") (term "1,0,0,1,0"))
               (rule "expand_inInt" (formula "116") (term "1,0,0,1"))
               (rule "replace_int_MAX" (formula "116") (term "1,0,1,0,0,1,0"))
               (rule "replace_int_MIN" (formula "116") (term "0,1,1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "116") (term "1,0,1,0,0,1"))
               (rule "replace_int_MIN" (formula "116") (term "0,1,1,0,0,1"))
               (rule "andLeft" (formula "116"))
               (rule "andLeft" (formula "116"))
               (rule "castedGetAny" (formula "118") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "117") (term "0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "118") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "118") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "117") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "117") (term "0,0,0,0"))
               (rule "pullOutSelect" (formula "118") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "163")))
               (rule "replaceKnownSelect_taclet00000_71" (formula "116") (term "0,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "92"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0,0") (ifseqformula "70"))
               (rule "replaceKnownSelect_taclet00000_71" (formula "119") (term "0,0,0,1,0"))
               (rule "replace_known_left" (formula "118") (term "0,0,0,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "163")))
               (rule "replaceKnownSelect_taclet00_8" (formula "118") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "118") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "70"))
               (rule "replace_known_left" (formula "118") (term "0,0,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "hideAuxiliaryEq" (formula "118"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_73" (formula "116") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_73" (formula "118") (term "0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_73" (formula "118") (term "0,1,1,0,0,0"))
               (rule "eqSymm" (formula "116"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "118"))
               (rule "replaceKnownSelect_taclet0000_30" (formula "118") (term "0,0,1"))
               (rule "replaceKnownSelect_taclet0000_31" (formula "118") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet0000_32" (formula "118") (term "0,0,0,0"))
               (rule "andLeft" (formula "118"))
               (rule "andLeft" (formula "118"))
               (rule "notLeft" (formula "120"))
               (rule "notLeft" (formula "118"))
               (rule "notLeft" (formula "118"))
               (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "112") (inst "i=i") (inst "i_0=i_0"))
               (rule "expand_inInt" (formula "112") (term "1,0,0,1"))
               (rule "expand_inInt" (formula "112") (term "1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "112") (term "1,0,1,0,0,1"))
               (rule "replace_int_MIN" (formula "112") (term "0,1,1,0,0,1"))
               (rule "replace_int_MIN" (formula "112") (term "0,1,1,0,0,1,0"))
               (rule "replace_int_MAX" (formula "112") (term "1,0,1,0,0,1,0"))
               (rule "andLeft" (formula "112"))
               (rule "andLeft" (formula "112"))
               (rule "eqSymm" (formula "112"))
               (rule "castedGetAny" (formula "114") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "113") (term "0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "114") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "114") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "113") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "113") (term "1,1,0,0"))
               (rule "pullOutSelect" (formula "114") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_2"))
               (rule "simplifySelectOfAnonEQ" (formula "114") (ifseqformula "110"))
                (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "163")))
               (rule "replaceKnownSelect_taclet00000_74" (formula "112") (term "0,0"))
               (rule "replaceKnownSelect_taclet00000_71" (formula "114") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_73" (formula "114") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,0,0") (ifseqformula "100"))
               (rule "replaceKnownSelect_taclet00000_74" (formula "115") (term "0,0,0,1,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,0,1,0,0") (ifseqformula "92"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,0,0,1,0,0") (ifseqformula "70"))
               (rule "eqSymm" (formula "112"))
               (rule "replace_known_left" (formula "114") (term "0,0,0,0,1,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "elementOfUnion" (formula "114") (term "0,0"))
               (rule "elementOfSingleton" (formula "114") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "elementOfUnion" (formula "114") (term "0,0"))
               (rule "elementOfSingleton" (formula "114") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "elementOfUnion" (formula "114") (term "0,0"))
               (rule "elementOfSingleton" (formula "114") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "elementOfSingleton" (formula "114") (term "0,0"))
                (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "163")))
               (rule "hideAuxiliaryEq" (formula "114"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_75" (formula "112") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_75" (formula "114") (term "0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_75" (formula "114") (term "0,1,1,0,0,0"))
               (rule "eqSymm" (formula "112"))
               (rule "pullOutSelect" (formula "113") (term "0,1,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_2"))
               (rule "simplifySelectOfAnonEQ" (formula "113") (ifseqformula "110"))
                (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "162")))
               (rule "replaceKnownSelect_taclet00000_76" (formula "112") (term "0,1"))
               (rule "replaceKnownSelect_taclet00000_57" (formula "113") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_59" (formula "113") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,0,0") (ifseqformula "100"))
               (rule "replaceKnownSelect_taclet00000_76" (formula "114") (term "0,0,0,1,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,1,0,0") (ifseqformula "92"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,0,1,0,0") (ifseqformula "70"))
               (rule "replace_known_left" (formula "113") (term "0,0,0,0,1,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "113"))
               (rule "elementOfUnion" (formula "113") (term "0,0"))
               (rule "elementOfSingleton" (formula "113") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "113"))
               (rule "elementOfUnion" (formula "113") (term "0,0"))
               (rule "elementOfSingleton" (formula "113") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "113"))
               (rule "elementOfUnion" (formula "113") (term "0,0"))
               (rule "elementOfSingleton" (formula "113") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "162")))
               (rule "elementOfSingleton" (formula "113") (term "0,0"))
                (builtin "One Step Simplification" (formula "113"))
               (rule "hideAuxiliaryEq" (formula "113"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_77" (formula "112") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_77" (formula "112") (term "0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_77" (formula "112") (term "0,1,1,0,0,0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "117") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "replaceKnownSelect_taclet00000_56" (formula "117") (term "0,1,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_66" (formula "117") (term "0,1,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_56" (formula "117") (term "0,0,0,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_66" (formula "117") (term "0,0,0,0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_60" (formula "117") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "117") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "insert_constant_string_value" (formula "117") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "79"))
                (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "143")))
               (rule "insert_constant_string_value" (formula "117") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "79"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "insert_constant_string_value" (formula "117") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "79"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "castDel" (formula "117") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "castDel" (formula "117") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "castDel" (formula "117") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "119"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "119"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "119"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "119"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "119"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "119"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "119"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "118"))
               (rule "andLeft" (formula "117"))
               (rule "notLeft" (formula "117"))
               (rule "notLeft" (formula "117"))
               (rule "exLeft" (formula "122") (inst "sk=i_5"))
               (rule "andLeft" (formula "122"))
               (rule "andLeft" (formula "122"))
               (rule "exLeft" (formula "119") (inst "sk=i_2_2"))
               (rule "andLeft" (formula "119"))
               (rule "andLeft" (formula "119"))
               (rule "castedGetAny" (formula "123") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "122") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "118") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "126") (term "0"))
               (rule "castedGetAny" (formula "121") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "123") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "122") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "118") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "124"))
               (rule "inEqSimp_commuteLeq" (formula "119"))
               (rule "applyEqRigid" (formula "133") (term "0") (ifseqformula "117"))
               (rule "pullOutSelect" (formula "122") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_1"))
               (rule "simplifySelectOfAnonEQ" (formula "122") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "141")))
               (rule "replaceKnownSelect_taclet00000_78" (formula "126") (term "0,1"))
               (rule "replaceKnownSelect_taclet00000_78" (formula "127") (term "0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,0") (ifseqformula "92"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (term "0,0,0,0") (ifseqformula "70"))
               (rule "replaceKnownSelect_taclet00000_78" (formula "123") (term "0,0,0,1,0"))
               (rule "ifthenelse_negated" (formula "122") (term "0"))
               (rule "pullOutSelect" (formula "118") (term "1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "186")))
               (rule "replaceKnownSelect_taclet00000_79" (formula "141") (term "0"))
               (rule "replaceKnownSelect_taclet00000_79" (formula "122") (term "1,0,0"))
               (rule "replaceKnownSelect_taclet00000_79" (formula "121") (term "1,0,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "92"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0,0") (ifseqformula "70"))
               (rule "replaceKnownSelect_taclet00000_79" (formula "119") (term "1,0,0,0,1,0"))
               (rule "replace_known_left" (formula "118") (term "0,0,0,0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "186")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0,0,0") (ifseqformula "70"))
               (rule "replace_known_left" (formula "118") (term "0,0,0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "186")) (ifInst ""  (formula "36")))
               (rule "elementOfSingleton" (formula "118") (term "0,0"))
                (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "186")))
               (rule "hideAuxiliaryEq" (formula "118"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_82" (formula "140") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_82" (formula "121") (term "1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_82" (formula "120") (term "1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_82" (formula "118") (term "1,0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_82" (formula "118") (term "1,0,0,0,1,0"))
               (rule "pullOutSelect" (formula "117") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "replaceKnownSelect_taclet00000_83" (formula "135") (term "0"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "simplifySelectOfAnonEQ" (formula "117") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "elementOfSingleton" (formula "118") (term "0,0"))
                (builtin "One Step Simplification" (formula "118"))
               (rule "hideAuxiliaryEq" (formula "118"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_89" (formula "134") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_89" (formula "117") (term "1"))
               (rule "elementOfSingleton" (formula "117") (term "0,0"))
                (builtin "One Step Simplification" (formula "117"))
               (rule "eqSymm" (formula "117"))
               (rule "pullOutSelect" (formula "144") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_record_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "183")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "183")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "183")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "183")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_93" (formula "144") (term "0"))
               (rule "pullOutSelect" (formula "143") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_cols_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "182")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "182")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "182")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "182")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_97" (formula "143") (term "0"))
               (rule "pullOutSelect" (formula "142") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_vals_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "181")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "181")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "181")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "181")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_101" (formula "142") (term "0"))
               (rule "pullOutSelect" (formula "141") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "180")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "180")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "180")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "180")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_105" (formula "141") (term "0"))
               (rule "pullOutSelect" (formula "140") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "179")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "179")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "179")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "179")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_109" (formula "140") (term "0"))
               (rule "pullOutSelect" (formula "139") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "178")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "178")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "178")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "178")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_113" (formula "139") (term "0"))
               (rule "pullOutSelect" (formula "138") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "177")))
               (rule "replaceKnownSelect_taclet00000_114" (formula "122") (term "1,2,0"))
               (rule "replaceKnownSelect_taclet00000_114" (formula "122") (term "1,1,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replaceKnownSelect_taclet00000_114" (formula "122") (term "1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_114" (formula "122") (term "1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_114" (formula "122") (term "1,0,1,0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "177")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "177")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "177")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_117" (formula "138") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_117" (formula "121") (term "1,2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_117" (formula "121") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_117" (formula "121") (term "1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_117" (formula "121") (term "1,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_117" (formula "121") (term "1,0,0,0,0,0"))
               (rule "replace_known_left" (formula "121") (term "0,0,0,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "121"))
               (rule "simplifySelectOfAnonEQ" (formula "121") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "161")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "121") (term "0,0,0") (ifseqformula "70"))
               (rule "replace_known_left" (formula "121") (term "0,0,0,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "121"))
               (rule "simplifySelectOfAnonEQ" (formula "121") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "161")) (ifInst ""  (formula "13")))
               (rule "elementOfSingleton" (formula "121") (term "0,0"))
                (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "161")))
               (rule "hideAuxiliaryEq" (formula "121"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_120" (formula "125") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_120" (formula "124") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_120" (formula "121") (term "0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_120" (formula "121") (term "0,0,0,1,0"))
               (rule "pullOutSelect" (formula "136") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "175")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "175")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "175")) (ifInst ""  (formula "37")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "175")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_124" (formula "136") (term "0"))
               (rule "pullOutSelect" (formula "135") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "174")))
               (rule "replaceKnownSelect_taclet00000_125" (formula "126") (term "1"))
               (rule "replaceKnownSelect_taclet00000_125" (formula "121") (term "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
               (rule "hideAuxiliaryEq" (formula "126"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_126" (formula "135") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_126" (formula "121") (term "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_126" (formula "1") (term "1"))
               (rule "eqSymm" (formula "121"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "1"))
               (rule "pullOutSelect" (formula "134") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "174")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "94"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "174")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "174")) (ifInst ""  (formula "38")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "174")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_130" (formula "134") (term "0"))
               (rule "pullOutSelect" (formula "133") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "173")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "94"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "173")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "173")) (ifInst ""  (formula "38")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "173")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_134" (formula "133") (term "0"))
               (rule "pullOutSelect" (formula "132") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "172")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "94"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "172")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "172")) (ifInst ""  (formula "38")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "172")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_138" (formula "132") (term "0"))
               (rule "pullOutSelect" (formula "131") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "0"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_141" (formula "131") (term "0"))
               (rule "pullOutSelect" (formula "130") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_145" (formula "130") (term "0"))
               (rule "pullOutSelect" (formula "129") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_149" (formula "129") (term "0"))
               (rule "pullOutSelect" (formula "120") (term "0,1") (inst "selectSK=java_util_Collection_seq_2"))
               (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "152")))
               (rule "replaceKnownSelect_taclet00000_150" (formula "122") (term "0,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0") (ifseqformula "71"))
               (rule "replaceKnownSelect_taclet00000_150" (formula "118") (term "0,0,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_150" (formula "118") (term "0,1,1,0,0"))
               (rule "replace_known_left" (formula "120") (term "0,0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "120"))
               (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "93"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "152")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "120") (term "0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "120"))
               (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "152")) (ifInst ""  (formula "22")))
               (rule "elementOfSingleton" (formula "120") (term "0,0"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "152")))
               (rule "hideAuxiliaryEq" (formula "120"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_153" (formula "121") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_153" (formula "120") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_153" (formula "118") (term "0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_153" (formula "118") (term "0,1,1,0,0"))
               (rule "eqSymm" (formula "121"))
               (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "168")))
               (rule "replaceKnownSelect_taclet0_3" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "72"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_155" (formula "1") (term "1"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "1"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "114") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "insert_constant_string_value" (formula "114") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "80"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "insert_constant_string_value" (formula "114") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "80"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "insert_constant_string_value" (formula "114") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "80"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "castDel" (formula "114") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "castDel" (formula "114") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "castDel" (formula "114") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "115"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "notLeft" (formula "115"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "notLeft" (formula "115"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "notLeft" (formula "115"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "notLeft" (formula "115"))
               (rule "andLeft" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "116"))
               (rule "notLeft" (formula "115"))
               (rule "notLeft" (formula "114"))
               (rule "exLeft" (formula "119") (inst "sk=i_6"))
               (rule "andLeft" (formula "119"))
               (rule "andLeft" (formula "119"))
               (rule "exLeft" (formula "116") (inst "sk=i_2_3"))
               (rule "andLeft" (formula "116"))
               (rule "andLeft" (formula "116"))
               (rule "castedGetAny" (formula "120") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "119") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "115") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "123") (term "0"))
               (rule "castedGetAny" (formula "118") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "120") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "119") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "115") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "121"))
               (rule "inEqSimp_commuteLeq" (formula "116"))
               (rule "applyEqRigid" (formula "141") (term "0") (ifseqformula "114"))
               (rule "pullOutSelect" (formula "120") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_3"))
               (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "111"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "149")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,1,0,0") (ifseqformula "101"))
               (rule "replaceKnownSelect_taclet00000_156" (formula "121") (term "0,0,0,1,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,1,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,1,0,0") (ifseqformula "71"))
               (rule "elementOfUnion" (formula "120") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "120") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "120"))
               (rule "elementOfUnion" (formula "120") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "120") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "120"))
               (rule "elementOfUnion" (formula "120") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "120") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "120"))
               (rule "elementOfSingleton" (formula "120") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "149")))
               (rule "ifthenelse_negated" (formula "120") (term "0"))
               (rule "pullOutSelect" (formula "119") (term "1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_1"))
               (rule "simplifySelectOfAnonEQ" (formula "119") (ifseqformula "111"))
                (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "196")))
               (rule "replaceKnownSelect_taclet00000_157" (formula "151") (term "0"))
               (rule "replaceKnownSelect_taclet00000_114" (formula "119") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_117" (formula "119") (term "2,0"))
               (rule "replaceKnownSelect_taclet00000_157" (formula "124") (term "1,0,1"))
               (rule "replaceKnownSelect_taclet00000_157" (formula "125") (term "1,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0,1,0,0") (ifseqformula "101"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0,0,1,0,0") (ifseqformula "93"))
               (rule "replaceKnownSelect_taclet00000_157" (formula "120") (term "1,0,0,0,1,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0,0,0,1,0,0") (ifseqformula "71"))
               (rule "replace_known_left" (formula "119") (term "0,0,0,0,1,0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "119"))
               (rule "elementOfUnion" (formula "119") (term "0,0"))
               (rule "elementOfSingleton" (formula "119") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "119"))
               (rule "elementOfUnion" (formula "119") (term "0,0"))
               (rule "elementOfSingleton" (formula "119") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "119"))
               (rule "elementOfUnion" (formula "119") (term "0,0"))
               (rule "elementOfSingleton" (formula "119") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "196")))
               (rule "elementOfSingleton" (formula "119") (term "0,0"))
                (builtin "One Step Simplification" (formula "119"))
               (rule "hideAuxiliaryEq" (formula "119"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_158" (formula "150") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_158" (formula "124") (term "1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_158" (formula "123") (term "1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_158" (formula "119") (term "1,0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_158" (formula "119") (term "1,0,0,0,1,0"))
               (rule "pullOutSelect" (formula "115") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_4"))
               (rule "simplifySelectOfAnonEQ" (formula "115") (ifseqformula "111"))
                (builtin "One Step Simplification" (formula "115") (ifInst ""  (formula "149")))
               (rule "replaceKnownSelect_taclet00000_159" (formula "119") (term "0,0"))
               (rule "replaceKnownSelect_taclet00000_159" (formula "118") (term "0,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,1,0,0") (ifseqformula "101"))
               (rule "replaceKnownSelect_taclet00000_159" (formula "116") (term "0,0,0,1,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,1,0,0") (ifseqformula "93"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "115") (term "0,0,0,1,0,0") (ifseqformula "71"))
               (rule "pullOutSelect" (formula "114") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
               (rule "simplifySelectOfAnonEQ" (formula "114") (ifseqformula "111"))
                (builtin "One Step Simplification" (formula "114"))
               (rule "replaceKnownSelect_taclet00000_84" (formula "114") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_89" (formula "114") (term "2,0"))
               (rule "eqSymm" (formula "115"))
               (rule "simplifySelectOfAnonEQ" (formula "115") (ifseqformula "111"))
                (builtin "One Step Simplification" (formula "115"))
               (rule "replaceKnownSelect_taclet00000_161" (formula "144") (term "0"))
               (rule "replaceKnownSelect_taclet00000_83" (formula "115") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_89" (formula "115") (term "2,0"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_record_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "112"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "197")))
               (rule "replaceKnownSelect_taclet00000_90" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_93" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "102"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "94"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_cols_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "113"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "198")))
               (rule "replaceKnownSelect_taclet00000_94" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_97" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "103"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "95"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "73"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_vals_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "114"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "199")))
               (rule "replaceKnownSelect_taclet00000_98" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_101" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "104"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "96"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "74"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "115"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "200")))
               (rule "replaceKnownSelect_taclet00000_102" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_105" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "105"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "97"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "75"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "41"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "116"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "201")))
               (rule "replaceKnownSelect_taclet00000_106" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_109" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "106"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "98"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "76"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "42"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "121") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "121") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "121"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "117"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "202")))
               (rule "replaceKnownSelect_taclet00000_110" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_113" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "107"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "99"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "77"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "43"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "118"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "203")))
               (rule "replaceKnownSelect_taclet00000_60" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_63" (formula "1") (term "2,0"))
               (rule "replaceKnownSelect_taclet00000_168" (formula "129") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_168" (formula "129") (term "1,2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "108"))
               (rule "replaceKnownSelect_taclet00000_168" (formula "129") (term "1,0,1,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "100"))
               (rule "replaceKnownSelect_taclet00000_168" (formula "129") (term "1,0,1,0,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "78"))
               (rule "replaceKnownSelect_taclet00000_168" (formula "129") (term "1,0,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_168" (formula "129") (term "1,0,0,0,0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "119"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "204")))
               (rule "replaceKnownSelect_taclet00000_79" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_82" (formula "1") (term "2,0"))
               (rule "replaceKnownSelect_taclet00000_169" (formula "124") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_169" (formula "124") (term "1,2,0"))
               (rule "replaceKnownSelect_taclet00000_169" (formula "124") (term "0,0,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "109"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "101"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "79"))
               (rule "replaceKnownSelect_taclet00000_169" (formula "124") (term "1,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_169" (formula "124") (term "1,0,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_169" (formula "124") (term "1,0,0,0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_169" (formula "124") (term "1,0,1,0,0,0,1,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "122") (term "0,0"))
               (rule "elementOfSingleton" (formula "122") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "122"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "120"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "205")))
               (rule "replaceKnownSelect_taclet00000_121" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_124" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "110"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "102"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "80"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "121"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "206")))
               (rule "replaceKnownSelect_taclet00000_171" (formula "136") (term "1"))
               (rule "replaceKnownSelect_taclet00000_171" (formula "130") (term "1"))
               (rule "replaceKnownSelect_taclet00000_125" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_126" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "111"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "103"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "81"))
               (rule "hideAuxiliaryEq" (formula "130"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_172" (formula "135") (term "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_172" (formula "1") (term "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_172" (formula "157") (term "0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "125") (term "0,0"))
               (rule "elementOfSingleton" (formula "125") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "125"))
               (rule "pullOutSelect" (formula "156") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "122"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "206")))
               (rule "replaceKnownSelect_taclet00000_127" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_130" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "112"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "104"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "82"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "156") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "123"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "207")))
               (rule "replaceKnownSelect_taclet00000_131" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_134" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "113"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "105"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "83"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "49"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "156") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "124"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "208")))
               (rule "replaceKnownSelect_taclet00000_135" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_138" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "114"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "106"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "84"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "50"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "13") (term "0,0"))
               (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_176" (formula "168") (term "0"))
               (rule "pullOutSelect" (formula "154") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "124"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet00000_139" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_141" (formula "1") (term "2,0"))
               (rule "pullOutSelect" (formula "154") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "125"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet00000_146" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_149" (formula "1") (term "2,0"))
               (rule "pullOutSelect" (formula "154") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "126"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet00000_142" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_145" (formula "1") (term "2,0"))
               (rule "elementOfUnion" (formula "15") (term "0,0"))
               (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfUnion" (formula "14") (term "0,0"))
               (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "elementOfUnion" (formula "13") (term "0,0"))
               (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "elementOfUnion" (formula "12") (term "0,0"))
               (rule "elementOfSingleton" (formula "12") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "elementOfUnion" (formula "11") (term "0,0"))
               (rule "elementOfSingleton" (formula "11") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "pullOutSelect" (formula "140") (term "0,0") (inst "selectSK=java_util_Collection_seq_5"))
               (rule "simplifySelectOfAnonEQ" (formula "140") (ifseqformula "126"))
                (builtin "One Step Simplification" (formula "140") (ifInst ""  (formula "197")))
               (rule "replaceKnownSelect_taclet00000_180" (formula "139") (term "0,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "140") (term "0,1,0,0") (ifseqformula "116"))
               (rule "replaceKnownSelect_taclet00000_180" (formula "135") (term "0,0,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_180" (formula "135") (term "0,1,1,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "140") (term "0,0,1,0,0") (ifseqformula "108"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "140") (term "0,0,0,1,0,0") (ifseqformula "86"))
               (rule "replace_known_left" (formula "140") (term "0,0,0,0,1,0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "140"))
               (rule "elementOfUnion" (formula "10") (term "0,0"))
               (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "elementOfUnion" (formula "131") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "131") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "131"))
               (rule "elementOfUnion" (formula "9") (term "0,0"))
               (rule "elementOfSingleton" (formula "9") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "elementOfUnion" (formula "129") (term "0,0"))
               (rule "elementOfSingleton" (formula "129") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "129"))
               (rule "elementOfUnion" (formula "8") (term "0,0"))
               (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "elementOfUnion" (formula "7") (term "0,0"))
               (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "elementOfUnion" (formula "130") (term "0,0"))
               (rule "elementOfSingleton" (formula "130") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "130"))
               (rule "elementOfUnion" (formula "6") (term "0,0"))
               (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "elementOfUnion" (formula "5") (term "0,0"))
               (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "elementOfUnion" (formula "4") (term "0,0"))
               (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfUnion" (formula "3") (term "0,0"))
               (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "pullOutSelect" (formula "136") (term "1,0") (inst "selectSK=java_util_Collection_seq_6"))
               (rule "simplifySelectOfAnonEQ" (formula "136") (ifseqformula "116"))
                (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "167")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "136") (term "0,0,0") (ifseqformula "108"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "136") (term "0,0,0,0") (ifseqformula "86"))
               (rule "ifthenelse_negated" (formula "136") (term "0"))
               (rule "elementOfUnion" (formula "2") (term "0,0"))
               (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "15") (term "0,0"))
               (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_182" (formula "171") (term "0"))
               (rule "elementOfUnion" (formula "14") (term "0,0"))
               (rule "elementOfSingleton" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "elementOfUnion" (formula "13") (term "0,0"))
               (rule "elementOfSingleton" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "elementOfUnion" (formula "12") (term "0,0"))
               (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "elementOfUnion" (formula "11") (term "0,0"))
               (rule "elementOfSingleton" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "elementOfUnion" (formula "140") (term "0,0"))
               (rule "elementOfSingleton" (formula "140") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "140"))
               (rule "elementOfUnion" (formula "10") (term "0,0"))
               (rule "elementOfSingleton" (formula "10") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "elementOfUnion" (formula "130") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "130") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "165")))
               (rule "elementOfSingleton" (formula "130") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "130"))
               (rule "ifthenelse_negated" (formula "130") (term "0"))
               (rule "elementOfUnion" (formula "9") (term "0,0"))
               (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "elementOfUnion" (formula "128") (term "0,0"))
               (rule "elementOfSingleton" (formula "128") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "128"))
               (rule "elementOfSingleton" (formula "128") (term "0,0"))
                (builtin "One Step Simplification" (formula "128"))
               (rule "hideAuxiliaryEq" (formula "128"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_183" (formula "158") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_183" (formula "128") (term "1"))
                (builtin "One Step Simplification" (formula "128"))
               (rule "eqSymm" (formula "128") (term "1"))
               (rule "elementOfUnion" (formula "8") (term "0,0"))
               (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "elementOfUnion" (formula "7") (term "0,0"))
               (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "elementOfUnion" (formula "6") (term "0,0"))
               (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "elementOfUnion" (formula "5") (term "0,0"))
               (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "elementOfUnion" (formula "4") (term "0,0"))
               (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfUnion" (formula "3") (term "0,0"))
               (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "elementOfUnion" (formula "2") (term "0,0"))
               (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "14") (term "0,0"))
               (rule "elementOfSingleton" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "209")))
               (rule "elementOfSingleton" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "hideAuxiliaryEq" (formula "14"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_184" (formula "167") (term "0"))
               (rule "elementOfUnion" (formula "13") (term "0,0"))
               (rule "elementOfSingleton" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "208")))
               (rule "elementOfSingleton" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_185" (formula "165") (term "0"))
               (rule "elementOfUnion" (formula "12") (term "0,0"))
               (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "206")))
               (rule "elementOfSingleton" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "hideAuxiliaryEq" (formula "12"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_186" (formula "163") (term "0"))
               (rule "elementOfUnion" (formula "11") (term "0,0"))
               (rule "elementOfSingleton" (formula "11") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "204")))
               (rule "elementOfSingleton" (formula "11") (term "0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_187" (formula "161") (term "0"))
               (rule "elementOfUnion" (formula "135") (term "0,0"))
               (rule "elementOfSingleton" (formula "135") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "135"))
               (rule "elementOfUnion" (formula "10") (term "0,0"))
               (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "elementOfSingleton" (formula "10") (term "0,0"))
                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "202")))
               (rule "hideAuxiliaryEq" (formula "10"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "159") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "130") (term "1,2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "129") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_64" (formula "129") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_66" (formula "129") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "129") (term "1,2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "130") (term "1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "129") (term "1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "130") (term "1,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "129") (term "1,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "129") (term "1,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "130") (term "1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_188" (formula "130") (term "1,0,1,0,0,0,0"))
               (rule "replace_known_left" (formula "129") (term "0,0,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "129"))
               (rule "hideAuxiliaryEq" (formula "129"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_189" (formula "129") (term "1,0"))
               (rule "replace_known_left" (formula "129") (term "0,0,0,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "129"))
               (rule "hideAuxiliaryEq" (formula "129"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_190" (formula "129") (term "0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_190" (formula "129") (term "0,1,1,0,0"))
               (rule "elementOfUnion" (formula "9") (term "0,0"))
               (rule "elementOfSingleton" (formula "9") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "elementOfSingleton" (formula "9") (term "0,0"))
                (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "197")))
               (rule "hideAuxiliaryEq" (formula "9"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_191" (formula "154") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_191" (formula "123") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet00000_150" (formula "123") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_153" (formula "123") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_191" (formula "123") (term "1,2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_191" (formula "123") (term "1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_191" (formula "123") (term "1,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_191" (formula "123") (term "1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_191" (formula "123") (term "1,0,1,0,0,0,0"))
               (rule "replace_known_left" (formula "123") (term "0,0,0,0,0") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "123"))
               (rule "hideAuxiliaryEq" (formula "123"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_192" (formula "125") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_192" (formula "151") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_192" (formula "130") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_192" (formula "7") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_192" (formula "123") (term "0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_192" (formula "123") (term "0,0,0,1,0"))
               (rule "eqSymm" (formula "129"))
               (rule "elementOfUnion" (formula "122") (term "0,0"))
               (rule "elementOfSingleton" (formula "122") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "122"))
               (rule "elementOfSingleton" (formula "122") (term "0,0"))
                (builtin "One Step Simplification" (formula "122"))
               (rule "true_left" (formula "122"))
               (rule "elementOfUnion" (formula "8") (term "0,0"))
               (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "192")))
               (rule "elementOfSingleton" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "hideAuxiliaryEq" (formula "8"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_193" (formula "149") (term "0"))
               (rule "elementOfUnion" (formula "7") (term "0,0"))
               (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "190")))
               (rule "elementOfSingleton" (formula "7") (term "0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "eqSymm" (formula "7"))
               (rule "elementOfUnion" (formula "6") (term "0,0"))
               (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "elementOfSingleton" (formula "6") (term "0,0"))
                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "190")))
               (rule "hideAuxiliaryEq" (formula "6"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_194" (formula "146") (term "0"))
               (rule "elementOfUnion" (formula "5") (term "0,0"))
               (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "188")))
               (rule "elementOfSingleton" (formula "5") (term "0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_195" (formula "144") (term "0"))
               (rule "elementOfUnion" (formula "4") (term "0,0"))
               (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "186")))
               (rule "elementOfSingleton" (formula "4") (term "0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_196" (formula "142") (term "0"))
               (rule "elementOfUnion" (formula "3") (term "0,0"))
               (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "elementOfSingleton" (formula "3") (term "0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_197" (formula "140") (term "0"))
               (rule "elementOfUnion" (formula "2") (term "0,0"))
               (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "2") (term "0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_198" (formula "138") (term "0"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_199" (formula "136") (term "0"))
               (rule "elementOfUnion" (formula "120") (term "0,0"))
               (rule "elementOfSingleton" (formula "120") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "120"))
               (rule "elementOfSingleton" (formula "120") (term "0,0"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "165")))
               (rule "simplifySelectOfAnonEQ" (formula "120") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "165")))
               (rule "replaceKnownSelect_taclet00000_118" (formula "120") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_120" (formula "120") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0") (ifseqformula "94"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "120") (term "0,0,0,0") (ifseqformula "72"))
               (rule "replace_known_left" (formula "120") (term "0,0,0,0,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "120"))
               (rule "hideAuxiliaryEq" (formula "120"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_201" (formula "119") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_201" (formula "120") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_201" (formula "117") (term "0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_201" (formula "117") (term "0,1,1,0,0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "114"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "115"))
               (rule "andLeft" (formula "114"))
               (rule "notLeft" (formula "115"))
               (rule "notLeft" (formula "114"))
               (rule "pullOutSelect" (formula "135") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "113"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
               (rule "replaceKnownSelect_taclet0000_30" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "103"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "95"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "73"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "133"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_203" (formula "135") (term "0"))
               (rule "pullOutSelect" (formula "134") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "113"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
               (rule "replaceKnownSelect_taclet0000_31" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "103"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "95"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "73"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "133"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_205" (formula "134") (term "0"))
               (rule "pullOutSelect" (formula "133") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "113"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
               (rule "replaceKnownSelect_taclet0000_32" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "103"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "95"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "73"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "133"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_207" (formula "133") (term "0"))
               (rule "commute_or_2" (formula "132") (term "0"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "108"))
               (rule "true_left" (formula "108"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "104"))
               (rule "true_left" (formula "104"))
               (rule "tryEmpty" (formula "173") (term "1"))
                (builtin "One Step Simplification" (formula "173"))
               (rule "blockEmptyLabel" (formula "173") (term "1"))
               (rule "blockEmpty" (formula "173") (term "1"))
               (rule "commute_or_2" (formula "32") (term "0,0"))
               (rule "commute_or_2" (formula "29") (term "0,0"))
               (rule "commute_or_2" (formula "103") (term "0"))
               (rule "commute_and" (formula "128") (term "0,0,1,0"))
               (rule "commute_and" (formula "128") (term "0,0"))
               (rule "commute_or_2" (formula "26") (term "0,0"))
               (rule "associativeLawUnion" (formula "110") (term "0,1,0"))
               (rule "commute_and" (formula "119") (term "1,0,0"))
               (rule "commute_and" (formula "118") (term "1,0,0"))
               (rule "commute_and" (formula "118") (term "0,0,0"))
               (rule "commute_and" (formula "119") (term "0,0,0"))
               (rule "commute_and" (formula "125") (term "0,0"))
               (rule "commute_and" (formula "124") (term "0,0"))
               (rule "commute_and" (formula "120") (term "0,0"))
               (rule "commuteUnion_2" (formula "110") (term "1,0"))
               (rule "seqGetAlphaCast" (formula "133") (term "0"))
               (rule "castedGetAny" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "seqGetAlphaCast" (formula "122") (term "0"))
               (rule "castedGetAny" (formula "122") (term "0"))
                (builtin "One Step Simplification" (formula "122"))
               (rule "true_left" (formula "122"))
               (rule "commute_or_2" (formula "127"))
               (rule "commute_or_2" (formula "103"))
               (rule "commute_or" (formula "127") (term "0,0"))
               (rule "commute_or_2" (formula "127") (term "0"))
               (rule "commute_or_2" (formula "127"))
               (rule "commute_and_2" (formula "125") (term "0,1,0"))
               (rule "shift_paren_and" (formula "118") (term "0,0"))
               (rule "commute_and_2" (formula "118") (term "0,0,0"))
               (rule "shift_paren_and" (formula "118") (term "0,0"))
               (rule "commute_and_2" (formula "118") (term "0,0,0"))
               (rule "methodCallEmpty" (formula "166") (term "1"))
               (rule "emptyModality" (formula "166") (term "1"))
                (builtin "One Step Simplification" (formula "166"))
               (rule "notRight" (formula "166"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
                (opengoal "{heap:=heap_Before_BLOCK}   !(  wellFormed(heap_Before_BLOCK)     & heap = heap_Before_BLOCK     & !self_52 = null     &   boolean::select(heap,                         self_52,                         java.lang.Object::<created>)       = TRUE     &   de.polyas.core3.open.cred.CredTool::exactInstance(self_52)       = TRUE     & (  ((  _password_7 = null            |   boolean::select(heap_Before_BLOCK,                                _password_7,                                java.lang.Object::<created>)              = TRUE)<<SC>>)        & ((  _record_6 = null            |   boolean::select(heap_Before_BLOCK,                                _record_6,                                java.lang.Object::<created>)              = TRUE)<<SC>>)        & ((  dataForVoter_3_Before = null            |   boolean::select(heap_Before_BLOCK,                                dataForVoter_3_Before,                                java.lang.Object::<created>)              = TRUE)<<SC>>))     & ((  (((!(dataForVoter_3_Before = null)<<origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>         & (!(_record_6 = null)<<origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>)<<SC,                                                                                                                                                         origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>         & (!(_password_7 = null)<<origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>)<<SC,                                                                                                                                                           origin(\"requires @ file CredTool.java @ line 188\",\"[]\")>>         & ((  java.math.BigInteger::<$inv>(heap_Before_BLOCK)             & ((  de.polyas.core3.open.cred.CredentialGenerator::<$inv>(heap_Before_BLOCK)                 & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heap_Before_BLOCK)                     & ((  java.lang.Object::<inv>(heap_Before_BLOCK,                                                   _record_6)                         & ((  java.lang.Object::<inv>(heap_Before_BLOCK,                                                       self_52)                             & ((  (\\forall int j;                                      ((   (  leq(Z(0(#)),                                                  j)<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>                                            & lt(j,                                                 seqLen(Seq::select(heap_Before_BLOCK,                                                                    java.util.ArrayList::select(heap_Before_BLOCK,                                                                                                self_52,                                                                                                de.polyas.core3.open.cred.CredTool::$inputColsForDist),                                                                    java.util.Collection::$seq)))<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>)<<SC,                                                                                                                                                               origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>                                        -> (\\exists int i;                                              ((  (leq(Z(0(#)),                                                       i)<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>                                                & lt(i,                                                     seqLen(Seq::select(heap_Before_BLOCK,                                                                        _record_6,                                                                        org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>)<<SC,                                                                                                                                                                                   origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>                                                & (  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                _record_6,                                                                                                org.apache.commons.csv.CSVRecord::$key_seq),                                                                                    i))                                                   = (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                java.util.ArrayList::select(heap_Before_BLOCK,                                                                                                                            self_52,                                                                                                                            de.polyas.core3.open.cred.CredTool::$inputColsForDist),                                                                                                java.util.Collection::$seq),                                                                                    j)))<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>)<<SC,                                                                                                                                                      origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 196\",\"[]\")>>                                 & ((  (\\forall int j;                                          ((   (  leq(Z(0(#)),                                                      j)<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>                                                & lt(j,                                                     seqLen(Seq::select(heap_Before_BLOCK,                                                                        java.util.ArrayList::select(heap_Before_BLOCK,                                                                                                    self_52,                                                                                                    de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),                                                                        java.util.Collection::$seq)))<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>)<<SC,                                                                                                                                                                   origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>                                            -> (\\exists int i;                                                  ((  (leq(Z(0(#)),                                                           i)<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>                                                    & lt(i,                                                         seqLen(Seq::select(heap_Before_BLOCK,                                                                            _record_6,                                                                            org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>)<<SC,                                                                                                                                                                                       origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>                                                    & (  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                    _record_6,                                                                                                    org.apache.commons.csv.CSVRecord::$key_seq),                                                                                        i))                                                       = (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                    java.util.ArrayList::select(heap_Before_BLOCK,                                                                                                                                self_52,                                                                                                                                de.polyas.core3.open.cred.CredTool::$inputColsForPolyas),                                                                                                    java.util.Collection::$seq),                                                                                        j)))<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>)<<SC,                                                                                                                                                          origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 200\",\"[]\")>>                                     & ((  (\\exists int i;                                              ((  (leq(Z(0(#)),                                                       i)<<origin(\"requires @ file CredTool.java @ line 204\",\"[]\")>>                                                & lt(i,                                                     seqLen(Seq::select(heap_Before_BLOCK,                                                                        _record_6,                                                                        org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 204\",\"[]\")>>)<<SC,                                                                                                                                                                                   origin(\"requires @ file CredTool.java @ line 204\",\"[]\")>>                                                & (  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                _record_6,                                                                                                org.apache.commons.csv.CSVRecord::$key_seq),                                                                                    i))                                                   = java.lang.String::select(heap_Before_BLOCK,                                                                              self_52,                                                                              de.polyas.core3.open.cred.CredTool::$idCol))<<origin(\"requires @ file CredTool.java @ line 204\",\"[]\")>>)<<SC,                                                                                                                                                                                        origin(\"requires @ file CredTool.java @ line 204\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 204\",\"[]\")>>                                         & (\\forall int i;                                              ((   (  leq(Z(0(#)),                                                          i)<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>                                                    & lt(i,                                                         seqLen(Seq::select(heap_Before_BLOCK,                                                                            _record_6,                                                                            org.apache.commons.csv.CSVRecord::$key_seq)))<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>)<<SC,                                                                                                                                                                                       origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>                                                -> ((  (java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                  _record_6,                                                                                                  org.apache.commons.csv.CSVRecord::$key_seq),                                                                                      i))                                                     = java.lang.String::select(heap_Before_BLOCK,                                                                                self_52,                                                                                de.polyas.core3.open.cred.CredTool::$idCol))<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>                                                -> (\\exists int j;                                                      ((  (leq(Z(0(#)),                                                               j)<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>                                                        & lt(j,                                                             seqLen(strContent((java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                                          _record_6,                                                                                                                          org.apache.commons.csv.CSVRecord::$value_seq),                                                                                                              i)))))<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>)<<SC,                                                                                                                                                                                  origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>                                                        & gt((int)(any::seqGet(strContent((java.lang.String)(any::seqGet(Seq::select(heap_Before_BLOCK,                                                                                                                                     _record_6,                                                                                                                                     org.apache.commons.csv.CSVRecord::$value_seq),                                                                                                                         i))),                                                                               j)),                                                             C(2(3(#))))<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>)<<SC,                                                                                                                                      origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>)<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>))<<origin(\"requires @ file CredTool.java @ line 207\",\"[]\")>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>)     & {self_52:=self_52        || (_password_7:=_password_7        || _record_6:=_record_6        || dataForVoter_3:=dataForVoter_3_Before)}         \\[{method-frame(source=processCSVRecord(org.apache.commons.csv.CSVRecord, java.lang.String)@de.polyas.core3.open.cred.CredTool,this=self_52): {java.lang.Throwable exc#1 = null;breakOut:try { {                   printStatus();                   final String voterId = _record_6.get(this.idCol);                   exitIfIdInvalid(voterId);                   dataForVoter_3=CredentialGenerator.generateDataForVoter(voterId,_password_7);                   initDistVals(_record_6,dataForVoter_3);                 }               }     catch (java.lang.Throwable e#18) {                 exc#1=e#18;               }             }           }\\] (  self_52_After_BLOCK = self_52                & _password_7 = _password_7                & _record_6 = _record_6                & dataForVoter_3_After = dataForVoter_3                & exc#1_After_BLOCK = exc#1                & heap_After_BLOCK = heap)) ")
            )
            (branch "Exceptional Post (initDistVals)"
                (builtin "One Step Simplification" (formula "146"))
                (builtin "One Step Simplification" (formula "108"))
               (rule "andLeft" (formula "108"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (term "1,0") (ifseqformula "108"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (term "0,1,0") (ifseqformula "95"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (term "0,0,1,0") (ifseqformula "88"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "109") (term "0,0,0,1,0") (ifseqformula "66"))
               (rule "andLeft" (formula "109"))
               (rule "andLeft" (formula "109"))
               (rule "andLeft" (formula "111"))
               (rule "notLeft" (formula "109"))
               (rule "close" (formula "112") (ifseqformula "111"))
            )
            (branch "Pre (initDistVals)"
                (builtin "One Step Simplification" (formula "144") (ifInst ""  (formula "146")) (ifInst ""  (formula "111")) (ifInst ""  (formula "146")) (ifInst ""  (formula "111")))
               (rule "andRight" (formula "144"))
               (branch "Case 1"
                  (rule "andRight" (formula "144"))
                  (branch "Case 1"
                     (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "144") (inst "i=i") (inst "i_0=i_0") (userinteraction))
                     (rule "andRight" (formula "144"))
                     (branch
                        (rule "andRight" (formula "144"))
                        (branch
                           (rule "eqSymm" (formula "144"))
                           (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "61"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "61") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "84"))
                           (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "84") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "48"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "93"))
                           (rule "mul_literals" (formula "93") (term "1,0,0"))
                           (rule "add_literals" (formula "93") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "78"))
                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "78") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "70"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "70") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "73"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "73") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "92"))
                           (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "92") (term "0"))
                           (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                           (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                           (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "applyEq" (formula "67") (term "3") (ifseqformula "66"))
                           (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "43"))
                           (rule "applyEq" (formula "80") (term "5") (ifseqformula "79"))
                           (rule "applyEq" (formula "88") (term "4") (ifseqformula "87"))
                           (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "38"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                           (rule "polySimp_elimOne" (formula "59") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                           (rule "polySimp_elimOne" (formula "52") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                           (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                           (rule "polySimp_elimOne" (formula "82") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                           (rule "mul_literals" (formula "91") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                           (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                           (rule "polySimp_elimOne" (formula "76") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                           (rule "polySimp_elimOne" (formula "68") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                           (rule "polySimp_elimOne" (formula "71") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "90"))
                           (rule "polySimp_mulLiterals" (formula "90") (term "0"))
                           (rule "polySimp_elimOne" (formula "90") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "142") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                           (rule "eqSymm" (formula "143"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                           (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "143") (term "0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "142"))
                           (rule "applyEq" (formula "142") (term "0") (ifseqformula "38"))
                           (rule "pullOutSelect" (formula "142") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                           (rule "replaceKnownSelect_taclet00_6" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "143") (term "0,1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "143"))
                           (rule "closeTrue" (formula "143"))
                        )
                        (branch
                           (rule "expand_inInt" (formula "144") (term "1,0,0"))
                           (rule "replace_int_MIN" (formula "144") (term "0,1,1,0,0"))
                           (rule "replace_int_MAX" (formula "144") (term "1,0,1,0,0"))
                           (rule "allRight" (formula "144") (inst "sk=i_0_0"))
                           (rule "impRight" (formula "144"))
                           (rule "notRight" (formula "145"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "2"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "78"))
                           (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "78") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "75"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "75") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "89"))
                           (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "89") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "97"))
                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "97") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "98"))
                           (rule "mul_literals" (formula "98") (term "1,0,0"))
                           (rule "add_literals" (formula "98") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "83"))
                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "83") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "69") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "66") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "53"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "53") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "59"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "59") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "5"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "applyEq" (formula "87") (term "5") (ifseqformula "86"))
                           (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                           (rule "applyEq" (formula "72") (term "3") (ifseqformula "71"))
                           (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "48"))
                           (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "applyEq" (formula "103") (term "4") (ifseqformula "102"))
                           (rule "applyEq" (formula "126") (term "0") (ifseqformula "47"))
                           (rule "applyEq" (formula "93") (term "4") (ifseqformula "92"))
                           (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "44"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                           (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                           (rule "polySimp_elimOne" (formula "76") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                           (rule "polySimp_elimOne" (formula "73") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "87"))
                           (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                           (rule "polySimp_elimOne" (formula "87") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "95"))
                           (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                           (rule "polySimp_elimOne" (formula "95") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "96"))
                           (rule "mul_literals" (formula "96") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                           (rule "polySimp_elimOne" (formula "81") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "67") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                           (rule "polySimp_elimOne" (formula "64") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                           (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                           (rule "polySimp_elimOne" (formula "57") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                           (rule "leq_literals" (formula "5") (term "0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "98"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "91"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                           (rule "replaceKnownSelect_taclet00_6" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "1") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "69"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_and_subsumption3" (formula "44") (term "0,0,0"))
                           (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_and_subsumption3" (formula "45") (term "0,0,0"))
                           (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "nnf_imp2or" (formula "59") (term "0"))
                           (rule "nnf_imp2or" (formula "60") (term "0"))
                           (rule "nnf_imp2or" (formula "66") (term "0"))
                           (rule "nnf_imp2or" (formula "47") (term "0"))
                           (rule "nnf_imp2or" (formula "53") (term "0"))
                           (rule "nnf_imp2or" (formula "52") (term "0"))
                           (rule "nnf_imp2or" (formula "44") (term "0"))
                           (rule "nnf_imp2or" (formula "45") (term "0"))
                           (rule "nnf_notAnd" (formula "59") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                           (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                           (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "60") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                           (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "66") (term "1,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "47") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "53") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                           (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                           (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                           (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                           (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "106"))
                           (rule "true_left" (formula "106"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "99"))
                           (rule "true_left" (formula "99"))
                           (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
                           (rule "andLeft" (formula "99"))
                           (rule "notLeft" (formula "99"))
                           (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                           (rule "applyEq" (formula "108") (term "0") (ifseqformula "99"))
                           (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "97"))
                            (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "117")))
                           (rule "replaceKnownSelect_taclet0000_53" (formula "99") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0") (ifseqformula "90"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0") (ifseqformula "68"))
                           (rule "ifthenelse_negated" (formula "99") (term "0"))
                           (rule "commute_or" (formula "98") (term "0,0"))
                           (rule "commute_or" (formula "105") (term "0,0"))
                           (rule "commute_or" (formula "30") (term "0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0"))
                           (rule "commute_or" (formula "24") (term "0,0,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "22") (term "0"))
                           (branch "result_50.<created>@heap_Before_BLOCK = TRUE TRUE"
                              (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "27"))
                              (rule "hideAuxiliaryEq" (formula "27"))
                              (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "replace_known_left" (formula "90") (term "1,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "true_left" (formula "90"))
                              (rule "commute_or" (formula "51") (term "0,0"))
                              (rule "ifthenelse_split" (formula "95") (term "0"))
                              (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "97") (term "1,0") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "replace_known_left" (formula "96") (term "1,0,0") (ifseqformula "95"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "applyEqReverse" (formula "90") (term "1,0") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "replace_known_left" (formula "90") (term "0,0,0,0") (ifseqformula "95"))
                                  (builtin "One Step Simplification" (formula "90"))
                                 (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "90"))
                                 (rule "applyEqReverse" (formula "91") (term "1") (ifseqformula "90"))
                                 (rule "hideAuxiliaryEq" (formula "90"))
                                 (rule "commute_or" (formula "52") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "52") (term "0,0,1,0"))
                                 (rule "cut_direct" (formula "96") (term "1"))
                                 (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "97"))
                                    (rule "true_left" (formula "97"))
                                    (rule "replace_known_left" (formula "70") (term "1") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "true_left" (formula "70"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                                    (rule "true_left" (formula "89"))
                                    (rule "lenNonNegative" (formula "85") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "85"))
                                    (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                    (rule "castedGetAny" (formula "87") (term "0"))
                                     (builtin "One Step Simplification" (formula "87"))
                                    (rule "true_left" (formula "87"))
                                    (rule "commute_or" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "45") (term "0,0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "commute_or" (formula "36") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or" (formula "37") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "51") (term "0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "52") (term "0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "36") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                    (rule "leq_literals" (formula "36") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "36") (term "0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "closeFalse" (formula "36"))
                                 )
                                 (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "96"))
                                    (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "replace_known_left" (formula "96") (term "1") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "96"))
                                    (rule "true_left" (formula "96"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "90"))
                                    (rule "true_left" (formula "90"))
                                    (rule "lenNonNegative" (formula "86") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "86"))
                                    (rule "seqGetAlphaCast" (formula "88") (term "0"))
                                    (rule "castedGetAny" (formula "88") (term "0"))
                                     (builtin "One Step Simplification" (formula "88"))
                                    (rule "true_left" (formula "88"))
                                    (rule "commute_or" (formula "39") (term "0,0"))
                                    (rule "commute_or" (formula "45") (term "0,0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "commute_or" (formula "36") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or" (formula "37") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                    (rule "ex_pull_out3" (formula "51") (term "0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "52") (term "0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                    (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                    (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                    (rule "allLeft" (formula "36") (inst "t=i_0_0"))
                                    (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                    (rule "leq_literals" (formula "36") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "36") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "36"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "35"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "109"))
                                 (rule "close" (formula "99") (ifseqformula "27"))
                              )
                           )
                           (branch "result_50.<created>@heap_Before_BLOCK = TRUE FALSE"
                              (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                              (rule "hideAuxiliaryEq" (formula "22"))
                              (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "107"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "replace_known_right" (formula "28") (term "1,0,0,0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "106"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "replace_known_right" (formula "95") (term "1,0,0") (ifseqformula "105"))
                               (builtin "One Step Simplification" (formula "95"))
                              (rule "ifthenelse_split" (formula "101") (term "0"))
                              (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "103") (term "1,0") (ifseqformula "102"))
                                 (rule "hideAuxiliaryEq" (formula "102"))
                                 (rule "replace_known_left" (formula "96") (term "0,0,0,0") (ifseqformula "101"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "96"))
                                 (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "96"))
                                 (rule "hideAuxiliaryEq" (formula "96"))
                                 (rule "replace_known_left" (formula "101") (term "1,0,0") (ifseqformula "100"))
                                  (builtin "One Step Simplification" (formula "101"))
                                 (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "101"))
                                 (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "101"))
                                 (rule "hideAuxiliaryEq" (formula "101"))
                                 (rule "commute_or" (formula "56") (term "0,0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "63") (term "0,0"))
                                 (rule "commute_or_2" (formula "50") (term "0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "57") (term "0,0,1,0"))
                                 (rule "cut_direct" (formula "75") (term "1"))
                                 (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "true_left" (formula "76"))
                                    (rule "replace_known_left" (formula "102") (term "1") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "102"))
                                    (rule "true_left" (formula "102"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "96"))
                                    (rule "true_left" (formula "96"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "lenNonNegative" (formula "91") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "91"))
                                    (rule "seqGetAlphaCast" (formula "93") (term "0"))
                                    (rule "castedGetAny" (formula "93") (term "0"))
                                     (builtin "One Step Simplification" (formula "93"))
                                    (rule "true_left" (formula "93"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "ifthenelse_split" (formula "24") (term "0"))
                                    (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "27"))
                                       (rule "hideAuxiliaryEq" (formula "27"))
                                       (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "99") (term "0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "replace_known_left" (formula "91") (term "1") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "true_left" (formula "91"))
                                       (rule "ex_pull_out3" (formula "51") (term "0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "52") (term "0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "36") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                       (rule "leq_literals" (formula "36") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "36"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "replace_known_right" (formula "93") (term "1") (ifseqformula "99"))
                                        (builtin "One Step Simplification" (formula "93"))
                                       (rule "ex_pull_out3" (formula "53") (term "0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "54") (term "0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "38") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "38") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "3"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "inEqSimp_homoInEq1" (formula "38"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0"))
                                       (rule "add_zero_right" (formula "38") (term "0"))
                                       (rule "leq_literals" (formula "38"))
                                       (rule "closeFalse" (formula "38"))
                                    )
                                 )
                                 (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "75"))
                                    (rule "replace_known_left" (formula "102") (term "1,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "103")))
                                    (rule "true_left" (formula "102"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "96"))
                                    (rule "true_left" (formula "96"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "lenNonNegative" (formula "91") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "91"))
                                    (rule "commute_or" (formula "50") (term "0,0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "seqGetAlphaCast" (formula "93") (term "0"))
                                    (rule "castedGetAny" (formula "93") (term "0"))
                                     (builtin "One Step Simplification" (formula "93"))
                                    (rule "true_left" (formula "93"))
                                    (rule "commute_or" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or" (formula "41") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                    (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                    (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                    (rule "ifthenelse_split" (formula "24") (term "0"))
                                    (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "23"))
                                       (rule "hideAuxiliaryEq" (formula "23"))
                                       (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "23"))
                                       (rule "hideAuxiliaryEq" (formula "23"))
                                       (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "23"))
                                       (rule "hideAuxiliaryEq" (formula "23"))
                                       (rule "replace_known_left" (formula "91") (term "1") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "91"))
                                       (rule "true_left" (formula "91"))
                                       (rule "ex_pull_out3" (formula "51") (term "0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "52") (term "0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "36") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "36") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "36"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "99"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "99"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "replace_known_right" (formula "93") (term "1") (ifseqformula "99"))
                                        (builtin "One Step Simplification" (formula "93"))
                                       (rule "ex_pull_out3" (formula "53") (term "0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "54") (term "0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                       (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                       (rule "allLeft" (formula "38") (inst "t=i_0_0"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "38") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "38"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                              )
                              (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "105") (ifseqformula "116"))
                                 (rule "close" (formula "105") (ifseqformula "32"))
                              )
                           )
                        )
                     )
                     (branch
                        (rule "expand_inInt" (formula "144") (term "1,0,0"))
                        (rule "replace_int_MIN" (formula "144") (term "0,1,1,0,0"))
                        (rule "replace_int_MAX" (formula "144") (term "1,0,1,0,0"))
                        (rule "allRight" (formula "144") (inst "sk=i_5"))
                        (rule "impRight" (formula "144"))
                        (rule "notRight" (formula "145"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "2"))
                        (rule "castedGetAny" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "78"))
                        (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "75"))
                        (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "75") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "89"))
                        (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "89") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "83"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "83") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "53"))
                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "53") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "69") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "97"))
                        (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "97") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "98"))
                        (rule "mul_literals" (formula "98") (term "1,0,0"))
                        (rule "add_literals" (formula "98") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "59"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "59") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "5"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "applyEq" (formula "73") (term "3") (ifseqformula "72"))
                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "49"))
                        (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "applyEq" (formula "104") (term "4") (ifseqformula "103"))
                        (rule "applyEq" (formula "94") (term "4") (ifseqformula "93"))
                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                        (rule "applyEq" (formula "85") (term "5") (ifseqformula "84"))
                        (rule "applyEq" (formula "126") (term "0") (ifseqformula "47"))
                        (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "44"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                        (rule "polySimp_elimOne" (formula "73") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "87"))
                        (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                        (rule "polySimp_elimOne" (formula "87") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                        (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                        (rule "polySimp_elimOne" (formula "81") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                        (rule "polySimp_elimOne" (formula "51") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "67") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "95"))
                        (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                        (rule "polySimp_elimOne" (formula "95") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "96"))
                        (rule "mul_literals" (formula "96") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                        (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                        (rule "polySimp_elimOne" (formula "64") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                        (rule "polySimp_elimOne" (formula "57") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                        (rule "leq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "98"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "91"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "40"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                        (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "69"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "43"))
                        (rule "inEqSimp_and_subsumption3" (formula "44") (term "0,0,0"))
                        (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_and_subsumption3" (formula "45") (term "0,0,0"))
                        (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "nnf_imp2or" (formula "60") (term "0"))
                        (rule "nnf_imp2or" (formula "47") (term "0"))
                        (rule "nnf_imp2or" (formula "52") (term "0"))
                        (rule "nnf_imp2or" (formula "53") (term "0"))
                        (rule "nnf_imp2or" (formula "66") (term "0"))
                        (rule "nnf_imp2or" (formula "59") (term "0"))
                        (rule "nnf_imp2or" (formula "44") (term "0"))
                        (rule "nnf_imp2or" (formula "45") (term "0"))
                        (rule "nnf_notAnd" (formula "60") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "60") (term "1,0,0"))
                        (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                        (rule "mul_literals" (formula "60") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "60") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "47") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "47") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "52") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                        (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                        (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "53") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "53") (term "1,0,0"))
                        (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0"))
                        (rule "mul_literals" (formula "53") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "53") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "53") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "53") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "66") (term "1,0"))
                        (rule "nnf_notAnd" (formula "66") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
                        (rule "mul_literals" (formula "66") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "59") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                        (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                        (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "44") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "106"))
                        (rule "true_left" (formula "106"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "100"))
                        (rule "andLeft" (formula "100"))
                        (rule "notLeft" (formula "100"))
                        (rule "pullOutSelect" (formula "100") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                        (rule "applyEq" (formula "109") (term "0") (ifseqformula "100"))
                        (rule "simplifySelectOfAnonEQ" (formula "100") (ifseqformula "97"))
                         (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "118")))
                        (rule "replaceKnownSelect_taclet0000_53" (formula "100") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0") (ifseqformula "90"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,0") (ifseqformula "68"))
                        (rule "ifthenelse_negated" (formula "100") (term "0"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "99"))
                        (rule "true_left" (formula "99"))
                        (rule "commute_or" (formula "98") (term "0,0"))
                        (rule "commute_or" (formula "105") (term "0,0"))
                        (rule "commute_or" (formula "24") (term "0,0,0"))
                        (rule "commute_or" (formula "30") (term "0,0,0"))
                        (rule "commute_or" (formula "27") (term "0,0,0"))
                        (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0"))
                        (rule "ifthenelse_split" (formula "25") (term "0"))
                        (branch "result_50.<created>@heap_Before_BLOCK = TRUE TRUE"
                           (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "replace_known_left" (formula "90") (term "1,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "90"))
                           (rule "true_left" (formula "90"))
                           (rule "commute_or_2" (formula "39") (term "0"))
                           (rule "ifthenelse_split" (formula "95") (term "0"))
                           (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                              (rule "applyEqReverse" (formula "97") (term "1,0") (ifseqformula "96"))
                              (rule "hideAuxiliaryEq" (formula "96"))
                              (rule "replace_known_left" (formula "96") (term "1,0,0") (ifseqformula "95"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "96"))
                              (rule "applyEqReverse" (formula "90") (term "1,0") (ifseqformula "96"))
                              (rule "hideAuxiliaryEq" (formula "96"))
                              (rule "replace_known_left" (formula "90") (term "0,0,0,0") (ifseqformula "95"))
                               (builtin "One Step Simplification" (formula "90"))
                              (rule "applyEqReverse" (formula "91") (term "1") (ifseqformula "90"))
                              (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "90"))
                              (rule "hideAuxiliaryEq" (formula "90"))
                              (rule "commute_or" (formula "52") (term "0,0"))
                              (rule "commute_or_2" (formula "44") (term "0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "commute_and" (formula "52") (term "0,0,1,0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "commute_and" (formula "51") (term "0,0,1,0"))
                              (rule "cut_direct" (formula "96") (term "1"))
                              (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                  (builtin "One Step Simplification" (formula "97"))
                                 (rule "true_left" (formula "97"))
                                 (rule "replace_known_left" (formula "70") (term "1") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "true_left" (formula "70"))
                                 (rule "commute_or" (formula "51") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                                 (rule "true_left" (formula "89"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "lenNonNegative" (formula "85") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "85"))
                                 (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                 (rule "castedGetAny" (formula "87") (term "0"))
                                  (builtin "One Step Simplification" (formula "87"))
                                 (rule "true_left" (formula "87"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "52") (term "0"))
                                 (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                 (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "51") (term "0"))
                                 (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                 (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                 (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                 (rule "ex_pull_out3" (formula "58") (term "0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                 (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                 (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "allLeft" (formula "37") (inst "t=i_5"))
                                 (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "37") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "3"))
                                 (rule "andLeft" (formula "37"))
                                 (rule "inEqSimp_homoInEq1" (formula "37"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0"))
                                 (rule "add_literals" (formula "37") (term "0"))
                                 (rule "leq_literals" (formula "37"))
                                 (rule "closeFalse" (formula "37"))
                              )
                              (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "replace_known_left" (formula "96") (term "1") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "96"))
                                 (rule "true_left" (formula "96"))
                                 (rule "commute_or" (formula "51") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "90"))
                                 (rule "true_left" (formula "90"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "45") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "lenNonNegative" (formula "86") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "86"))
                                 (rule "seqGetAlphaCast" (formula "88") (term "0"))
                                 (rule "castedGetAny" (formula "88") (term "0"))
                                  (builtin "One Step Simplification" (formula "88"))
                                 (rule "true_left" (formula "88"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_and_2" (formula "52") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_and" (formula "58") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "58") (term "0,1,1,0"))
                                 (rule "ex_pull_out3" (formula "52") (term "0"))
                                 (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                 (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "51") (term "0"))
                                 (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                 (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                 (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                 (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                 (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                 (rule "ex_pull_out3" (formula "58") (term "0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0"))
                                 (rule "commute_or_2" (formula "58") (term "1,0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "58") (term "1,0,0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                                 (rule "shift_paren_or" (formula "58") (term "0,1,0,0,0"))
                                 (rule "commute_or" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "allLeft" (formula "37") (inst "t=i_5"))
                                 (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                 (rule "leq_literals" (formula "37") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "37") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "37"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "99") (ifseqformula "109"))
                              (rule "close" (formula "99") (ifseqformula "27"))
                           )
                        )
                        (branch "result_50.<created>@heap_Before_BLOCK = TRUE FALSE"
                           (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "107"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "replace_known_right" (formula "25") (term "1,0,0") (ifseqformula "106"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "106"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "105"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "105"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "105"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "105"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "105"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_right" (formula "95") (term "1,0,0") (ifseqformula "105"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "commute_or_2" (formula "44") (term "0"))
                           (rule "ifthenelse_split" (formula "101") (term "0"))
                           (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                              (rule "applyEqReverse" (formula "103") (term "1,0") (ifseqformula "102"))
                              (rule "hideAuxiliaryEq" (formula "102"))
                              (rule "replace_known_left" (formula "102") (term "1,0,0") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "102"))
                              (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "102"))
                              (rule "applyEqReverse" (formula "96") (term "1,0") (ifseqformula "102"))
                              (rule "hideAuxiliaryEq" (formula "102"))
                              (rule "replace_known_left" (formula "96") (term "0,0,0,0") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "96"))
                              (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "96"))
                              (rule "hideAuxiliaryEq" (formula "96"))
                              (rule "commute_or" (formula "57") (term "0,0"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "commute_or_2" (formula "50") (term "0"))
                              (rule "commute_and" (formula "57") (term "0,0,1,0"))
                              (rule "commute_or" (formula "63") (term "0,0"))
                              (rule "commute_and" (formula "56") (term "0,0,1,0"))
                              (rule "cut_direct" (formula "75") (term "1"))
                              (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                  (builtin "One Step Simplification" (formula "76"))
                                 (rule "true_left" (formula "76"))
                                 (rule "replace_known_left" (formula "102") (term "1") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "102"))
                                 (rule "true_left" (formula "102"))
                                 (rule "commute_or" (formula "56") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "96"))
                                 (rule "true_left" (formula "96"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "49") (term "0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or" (formula "50") (term "0,0"))
                                 (rule "commute_or_2" (formula "50") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "lenNonNegative" (formula "91") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "91"))
                                 (rule "seqGetAlphaCast" (formula "93") (term "0"))
                                 (rule "castedGetAny" (formula "93") (term "0"))
                                  (builtin "One Step Simplification" (formula "93"))
                                 (rule "true_left" (formula "93"))
                                 (rule "commute_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                 (rule "ifthenelse_split" (formula "24") (term "0"))
                                 (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "26"))
                                    (rule "hideAuxiliaryEq" (formula "26"))
                                    (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replace_known_left" (formula "91") (term "1") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "91"))
                                    (rule "true_left" (formula "91"))
                                    (rule "ex_pull_out3" (formula "52") (term "0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "51") (term "0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "37") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                    (rule "leq_literals" (formula "37") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "37"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "36"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "100"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "replace_known_right" (formula "93") (term "1") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "93"))
                                    (rule "ex_pull_out3" (formula "54") (term "0"))
                                    (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                    (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "53") (term "0"))
                                    (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                    (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                    (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "39") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq0" (formula "39") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "39") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "3"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "39"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0"))
                                    (rule "leq_literals" (formula "39"))
                                    (rule "closeFalse" (formula "39"))
                                 )
                              )
                              (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                  (builtin "One Step Simplification" (formula "75"))
                                 (rule "replace_known_left" (formula "102") (term "1,0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "103")))
                                 (rule "true_left" (formula "102"))
                                 (rule "commute_or" (formula "56") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "96"))
                                 (rule "true_left" (formula "96"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "49") (term "0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or" (formula "50") (term "0,0"))
                                 (rule "commute_or_2" (formula "50") (term "0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "lenNonNegative" (formula "91") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "91"))
                                 (rule "seqGetAlphaCast" (formula "93") (term "0"))
                                 (rule "castedGetAny" (formula "93") (term "0"))
                                  (builtin "One Step Simplification" (formula "93"))
                                 (rule "true_left" (formula "93"))
                                 (rule "commute_or" (formula "41") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "commute_and_2" (formula "57") (term "0,1,0"))
                                 (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "commute_and" (formula "63") (term "0,0,1,1,0"))
                                 (rule "commute_and_2" (formula "63") (term "0,1,1,0"))
                                 (rule "ifthenelse_split" (formula "24") (term "0"))
                                 (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "replace_known_left" (formula "91") (term "1") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "91"))
                                    (rule "true_left" (formula "91"))
                                    (rule "ex_pull_out3" (formula "52") (term "0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "51") (term "0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "58") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "58") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "58") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "37") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "37") (term "0,0,1"))
                                    (rule "leq_literals" (formula "37") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "37"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "101"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "100"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "100"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_right" (formula "93") (term "1") (ifseqformula "99"))
                                     (builtin "One Step Simplification" (formula "93"))
                                    (rule "ex_pull_out3" (formula "54") (term "0"))
                                    (rule "cnf_rightDist" (formula "54") (term "0,0"))
                                    (rule "shift_paren_or" (formula "54") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "54") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "54") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "54") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "53") (term "0"))
                                    (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                    (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                    (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                    (rule "ex_pull_out3" (formula "60") (term "1,0"))
                                    (rule "cnf_rightDist" (formula "60") (term "0,1,0"))
                                    (rule "commute_or" (formula "60") (term "1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "60") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "60") (term "1,0,0,1,0"))
                                    (rule "allLeft" (formula "39") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq0" (formula "39") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "39") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "3"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "39"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0"))
                                    (rule "add_literals" (formula "39") (term "0"))
                                    (rule "leq_literals" (formula "39"))
                                    (rule "closeFalse" (formula "39"))
                                 )
                              )
                           )
                           (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "105") (ifseqformula "116"))
                              (rule "close" (formula "105") (ifseqformula "32"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "144"))
                     (branch
                        (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "73"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "73") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "92"))
                        (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "92") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "84"))
                        (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "84") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "70"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "70") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "48") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "78"))
                        (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "78") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "54"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "54") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "61"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "61") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "93"))
                        (rule "mul_literals" (formula "93") (term "1,0,0"))
                        (rule "add_literals" (formula "93") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "44"))
                        (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "true_left" (formula "43"))
                        (rule "applyEq" (formula "81") (term "5") (ifseqformula "80"))
                        (rule "applyEq" (formula "67") (term "3") (ifseqformula "66"))
                        (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                        (rule "applyEq" (formula "121") (term "0") (ifseqformula "42"))
                        (rule "applyEq" (formula "88") (term "4") (ifseqformula "87"))
                        (rule "applyEq" (formula "98") (term "4") (ifseqformula "97"))
                        (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                        (rule "polySimp_elimOne" (formula "71") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "90"))
                        (rule "polySimp_mulLiterals" (formula "90") (term "0"))
                        (rule "polySimp_elimOne" (formula "90") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                        (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                        (rule "polySimp_elimOne" (formula "82") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                        (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                        (rule "polySimp_elimOne" (formula "68") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                        (rule "polySimp_elimOne" (formula "46") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                        (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                        (rule "polySimp_elimOne" (formula "52") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                        (rule "polySimp_elimOne" (formula "59") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                        (rule "mul_literals" (formula "91") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_and_subsumption3" (formula "40") (term "0,0,0"))
                        (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_and_subsumption3" (formula "41") (term "0,0,0"))
                        (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "nnf_imp2or" (formula "49") (term "0"))
                        (rule "nnf_imp2or" (formula "43") (term "0"))
                        (rule "nnf_imp2or" (formula "48") (term "0"))
                        (rule "nnf_imp2or" (formula "62") (term "1,0"))
                        (rule "nnf_imp2or" (formula "56") (term "0"))
                        (rule "nnf_imp2or" (formula "55") (term "0"))
                        (rule "nnf_imp2or" (formula "40") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "nnf_imp2or" (formula "62") (term "0"))
                        (rule "nnf_notAnd" (formula "49") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                        (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "43") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                        (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                        (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "48") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0"))
                        (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                        (rule "mul_literals" (formula "48") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "48") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "48") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "56") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                        (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                        (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "55") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                        (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                        (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "62") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                        (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "96"))
                        (rule "andLeft" (formula "96"))
                        (rule "notLeft" (formula "96"))
                        (rule "pullOutSelect" (formula "96") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                        (rule "applyEq" (formula "106") (term "0") (ifseqformula "96"))
                        (rule "simplifySelectOfAnonEQ" (formula "96") (ifseqformula "93"))
                         (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "115")))
                        (rule "replaceKnownSelect_taclet0000_53" (formula "96") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0") (ifseqformula "86"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,0") (ifseqformula "64"))
                        (rule "ifthenelse_negated" (formula "96") (term "0"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "103"))
                        (rule "true_left" (formula "103"))
                        (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "143"))
                        (rule "replaceKnownSelect_taclet0000_30" (formula "143") (term "0,0,1"))
                        (rule "replaceKnownSelect_taclet0000_32" (formula "143") (term "0,0,0,0"))
                        (rule "replaceKnownSelect_taclet0000_31" (formula "143") (term "0,0,1,0"))
                        (rule "replace_known_right" (formula "143") (term "0,0,0") (ifseqformula "107"))
                         (builtin "One Step Simplification" (formula "143") (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                        (rule "closeTrue" (formula "143"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "144"))
                        (branch "Case 1"
                           (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "144") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
                           (rule "andRight" (formula "144"))
                           (branch "Case 1"
                              (rule "andRight" (formula "144"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "144"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "144"))
                                    (branch
                                       (rule "andRight" (formula "144"))
                                       (branch
                                          (rule "andRight" (formula "144"))
                                          (branch
                                             (rule "andRight" (formula "144"))
                                             (branch
                                                (rule "andRight" (formula "144"))
                                                (branch
                                                   (rule "andRight" (formula "144"))
                                                   (branch
                                                      (rule "andRight" (formula "144"))
                                                      (branch
                                                         (rule "andRight" (formula "144"))
                                                         (branch
                                                            (rule "andRight" (formula "144"))
                                                            (branch
                                                               (rule "andRight" (formula "144"))
                                                               (branch
                                                                  (rule "andRight" (formula "144"))
                                                                  (branch
                                                                     (rule "andRight" (formula "144"))
                                                                     (branch
                                                                        (rule "andRight" (formula "144"))
                                                                        (branch
                                                                           (rule "andRight" (formula "144"))
                                                                           (branch
                                                                              (rule "andRight" (formula "144"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "144"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "144"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "144"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "144"))
                                                                                          (branch
                                                                                             (rule "andRight" (formula "144"))
                                                                                             (branch
                                                                                                (rule "andRight" (formula "144"))
                                                                                                (branch
                                                                                                   (rule "andRight" (formula "144"))
                                                                                                   (branch
                                                                                                      (rule "andRight" (formula "144"))
                                                                                                      (branch
                                                                                                         (rule "notRight" (formula "144"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                                         (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                                                         (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                                                         (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                                                         (rule "add_literals" (formula "94") (term "0,0"))
                                                                                                         (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                                         (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                         (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                                                         (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                                                         (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                                         (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                                                         (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                                                          (builtin "One Step Simplification" (formula "43"))
                                                                                                         (rule "true_left" (formula "43"))
                                                                                                         (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                                                         (rule "applyEq" (formula "67") (term "3") (ifseqformula "66"))
                                                                                                         (rule "applyEq" (formula "81") (term "5") (ifseqformula "80"))
                                                                                                         (rule "applyEq" (formula "99") (term "4") (ifseqformula "98"))
                                                                                                         (rule "applyEq" (formula "89") (term "4") (ifseqformula "88"))
                                                                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                                                         (rule "mul_literals" (formula "92") (term "1"))
                                                                                                         (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                         (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                         (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
                                                                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                         (rule "close" (formula "117") (ifseqformula "2"))
                                                                                                      )
                                                                                                      (branch
                                                                                                         (rule "notRight" (formula "144"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                                         (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                                                         (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                                                         (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                                                         (rule "add_literals" (formula "94") (term "0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                                         (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                                         (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                         (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                                                         (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                                                         (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                                         (rule "applyEq" (formula "124") (term "0") (ifseqformula "45"))
                                                                                                         (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "124"))
                                                                                                          (builtin "One Step Simplification" (formula "44"))
                                                                                                         (rule "applyEq" (formula "69") (term "3") (ifseqformula "68"))
                                                                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                                         (rule "applyEq" (formula "82") (term "5") (ifseqformula "81"))
                                                                                                         (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                                                         (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                                                         (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                                                         (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                                                         (rule "mul_literals" (formula "92") (term "1"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                         (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                         (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                                                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                         (rule "close" (formula "118") (ifseqformula "2"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch
                                                                                                      (rule "notRight" (formula "144"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                                      (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                                      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                                                      (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                                                      (rule "add_literals" (formula "94") (term "0,0"))
                                                                                                      (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                                      (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                                                      (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                                                      (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                                                      (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                                      (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                                                      (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                                                       (builtin "One Step Simplification" (formula "43"))
                                                                                                      (rule "true_left" (formula "43"))
                                                                                                      (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                                                      (rule "applyEq" (formula "67") (term "3") (ifseqformula "66"))
                                                                                                      (rule "applyEq" (formula "81") (term "5") (ifseqformula "80"))
                                                                                                      (rule "applyEq" (formula "99") (term "4") (ifseqformula "98"))
                                                                                                      (rule "applyEq" (formula "89") (term "4") (ifseqformula "88"))
                                                                                                      (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                                                      (rule "mul_literals" (formula "92") (term "1"))
                                                                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                                      (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
                                                                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "replaceKnownSelect_taclet0_1" (formula "1") (term "0"))
                                                                                                      (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "1") (term "0"))
                                                                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                                      (rule "close" (formula "113") (ifseqformula "2"))
                                                                                                   )
                                                                                                )
                                                                                                (branch
                                                                                                   (rule "insert_constant_string_value" (formula "144") (term "0,0") (ifseqformula "75"))
                                                                                                    (builtin "One Step Simplification" (formula "144"))
                                                                                                   (rule "castDel" (formula "144") (term "0,0,0"))
                                                                                                   (rule "notRight" (formula "144"))
                                                                                                   (rule "close" (formula "121") (ifseqformula "1"))
                                                                                                )
                                                                                             )
                                                                                             (branch
                                                                                                (rule "insert_constant_string_value" (formula "144") (term "0,0") (ifseqformula "75"))
                                                                                                 (builtin "One Step Simplification" (formula "144"))
                                                                                                (rule "castDel" (formula "144") (term "0,0,0"))
                                                                                                (rule "notRight" (formula "144"))
                                                                                                (rule "close" (formula "122") (ifseqformula "1"))
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (rule "insert_constant_string_value" (formula "144") (term "0,0") (ifseqformula "75"))
                                                                                              (builtin "One Step Simplification" (formula "144"))
                                                                                             (rule "castDel" (formula "144") (term "0,0,0"))
                                                                                             (rule "notRight" (formula "144"))
                                                                                             (rule "close" (formula "123") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "notRight" (formula "144"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                          (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                                          (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                                          (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                                          (rule "add_literals" (formula "94") (term "0,0"))
                                                                                          (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                          (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                                          (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                                          (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                                          (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                          (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                                          (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                                          (rule "true_left" (formula "43"))
                                                                                          (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                                          (rule "applyEq" (formula "67") (term "3") (ifseqformula "66"))
                                                                                          (rule "applyEq" (formula "81") (term "5") (ifseqformula "80"))
                                                                                          (rule "applyEq" (formula "99") (term "4") (ifseqformula "98"))
                                                                                          (rule "applyEq" (formula "89") (term "4") (ifseqformula "88"))
                                                                                          (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                                          (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                                          (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                          (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                                          (rule "mul_literals" (formula "92") (term "1"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                                          (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                          (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                                          (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                                                                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                          (rule "hideAuxiliaryEq" (formula "1"))
                                                                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "43"))
                                                                                          (rule "close" (formula "122") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "notRight" (formula "144"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                                       (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                                       (rule "add_literals" (formula "94") (term "0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                       (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                                       (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                                       (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                                       (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                       (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                                       (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                                       (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                       (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                                       (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                                       (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                                       (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "true_left" (formula "43"))
                                                                                       (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                                       (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                                       (rule "mul_literals" (formula "92") (term "1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                       (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                                       (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                                       (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                                       (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                                       (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                                       (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                       (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                       (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_outPath_0"))
                                                                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                       (rule "close" (formula "124") (ifseqformula "2"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "notRight" (formula "144"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                                    (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "94") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                                    (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                                    (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                                    (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                    (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                                    (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                                    (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                                    (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                                    (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "true_left" (formula "43"))
                                                                                    (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                                    (rule "mul_literals" (formula "92") (term "1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                                    (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                                    (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                                    (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                                    (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                    (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                    (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKeyFilename_0"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                    (rule "close" (formula "125") (ifseqformula "2"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "notRight" (formula "144"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                                 (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "94") (term "0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                                 (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                                 (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                                 (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                                 (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                                 (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                                 (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                                 (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                                 (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                                 (rule "true_left" (formula "43"))
                                                                                 (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                                 (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                                 (rule "mul_literals" (formula "92") (term "1"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                                 (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                                 (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                                 (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                                 (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                                 (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                                 (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                                 (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                                 (rule "close" (formula "126") (ifseqformula "2"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "notRight" (formula "144"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                              (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "94") (term "0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                              (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                              (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                              (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                              (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                              (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                              (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                              (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                              (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                              (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                              (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                               (builtin "One Step Simplification" (formula "43"))
                                                                              (rule "true_left" (formula "43"))
                                                                              (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                              (rule "mul_literals" (formula "92") (term "1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                              (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                              (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                              (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                              (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                              (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                              (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                              (rule "replaceKnownSelect_taclet0_3" (formula "1") (term "2,0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "1") (term "2,0"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                              (rule "close" (formula "127") (ifseqformula "2"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "notRight" (formula "144"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                           (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "94") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                           (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                           (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                           (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                           (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                           (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                           (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                           (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "true_left" (formula "43"))
                                                                           (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                           (rule "mul_literals" (formula "92") (term "1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                           (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                           (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                           (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                           (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                           (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                           (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                           (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                           (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distPubKey_0"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                           (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                           (rule "close" (formula "128") (ifseqformula "2"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "notRight" (formula "144"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                        (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "94") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                        (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                        (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                        (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                        (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                        (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                        (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                        (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                        (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                        (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                         (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "true_left" (formula "43"))
                                                                        (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                        (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                        (rule "mul_literals" (formula "92") (term "1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                        (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                        (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                        (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                        (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                        (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                        (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "close" (formula "129") (ifseqformula "2"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "notRight" (formula "144"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                     (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "94") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                     (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                     (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                     (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                     (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                     (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                     (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                     (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                     (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                     (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                     (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                      (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                     (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                     (rule "mul_literals" (formula "92") (term "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                     (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                     (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                     (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                     (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                     (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "close" (formula "130") (ifseqformula "2"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "144"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "94"))
                                                                  (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "94") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "55"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "49"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "74"))
                                                                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "71"))
                                                                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "79"))
                                                                  (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "93"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "62"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "85"))
                                                                  (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                                  (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                                  (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                                  (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                                  (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                                  (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                                  (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                                  (rule "mul_literals" (formula "92") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                                  (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                                  (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                                  (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                                  (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                                  (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                                  (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                  (rule "close" (formula "131") (ifseqformula "2"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "notRight" (formula "144"))
                                                               (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "94"))
                                                               (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                               (rule "add_literals" (formula "94") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "74"))
                                                               (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "71"))
                                                               (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "79"))
                                                               (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "93"))
                                                               (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "62"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "85"))
                                                               (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                               (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                               (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                               (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                               (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                               (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "true_left" (formula "43"))
                                                               (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                               (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                               (rule "mul_literals" (formula "92") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                               (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                               (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                               (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                               (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                               (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_input_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "close" (formula "132") (ifseqformula "2"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "notRight" (formula "144"))
                                                            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "94"))
                                                            (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                            (rule "add_literals" (formula "94") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "55"))
                                                            (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                            (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "49"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "74"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "71"))
                                                            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "79"))
                                                            (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "93"))
                                                            (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "62"))
                                                            (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "85"))
                                                            (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                            (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                            (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                            (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                            (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                            (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                            (rule "mul_literals" (formula "92") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                            (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                            (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                            (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                            (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                            (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                            (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyas_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "close" (formula "133") (ifseqformula "2"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "144"))
                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "94"))
                                                         (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                         (rule "add_literals" (formula "94") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "49"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "74"))
                                                         (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "71"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "93"))
                                                         (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "62"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "85"))
                                                         (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                         (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                         (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                         (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                         (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                         (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                         (rule "mul_literals" (formula "92") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                         (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                         (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                         (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                         (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                         (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_dist_0"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "134") (ifseqformula "2"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "144"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "94"))
                                                      (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                      (rule "add_literals" (formula "94") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "71"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "79"))
                                                      (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "93"))
                                                      (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "62"))
                                                      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "85"))
                                                      (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                      (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                      (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                      (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                      (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                      (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                      (rule "mul_literals" (formula "92") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                      (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                      (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                      (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                      (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_vals_0"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "135") (ifseqformula "2"))
                                                   )
                                                )
                                                (branch
                                                   (rule "notRight" (formula "144"))
                                                   (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "94"))
                                                   (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                   (rule "add_literals" (formula "94") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "49"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "74"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "71"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "79"))
                                                   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "93"))
                                                   (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "62"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "85"))
                                                   (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                   (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                   (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                   (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                   (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                   (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                   (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                   (rule "mul_literals" (formula "92") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                   (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                   (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                   (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_cols_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "136") (ifseqformula "2"))
                                                )
                                             )
                                             (branch
                                                (rule "notRight" (formula "144"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "94"))
                                                (rule "mul_literals" (formula "94") (term "1,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "65") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "65") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "65") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "74"))
                                                (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "71"))
                                                (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "71") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "79"))
                                                (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "93"))
                                                (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "93") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "62"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "62") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "85"))
                                                (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "68") (term "3") (ifseqformula "67"))
                                                (rule "applyEq" (formula "90") (term "4") (ifseqformula "89"))
                                                (rule "applyEq" (formula "100") (term "4") (ifseqformula "99"))
                                                (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "44"))
                                                (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "true_left" (formula "43"))
                                                (rule "applyEq" (formula "122") (term "0") (ifseqformula "43"))
                                                (rule "applyEq" (formula "42") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "40"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "92"))
                                                (rule "mul_literals" (formula "92") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "63") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                                                (rule "polySimp_elimOne" (formula "77") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                                (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                                (rule "polySimp_elimOne" (formula "91") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "60"))
                                                (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                                                (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_record_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "95"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "88"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "66"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")) (ifInst ""  (formula "34")))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "144")))
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "137") (ifseqformula "2"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "144"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "93"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "92"))
                                             (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "92") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "70"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "70") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "78"))
                                             (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "78") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "84"))
                                             (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "84") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "61"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "61") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "73") (term "0"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                             (rule "applyEq" (formula "81") (term "5") (ifseqformula "80"))
                                             (rule "applyEq" (formula "89") (term "4") (ifseqformula "88"))
                                             (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "applyEq" (formula "121") (term "0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "66") (term "3") (ifseqformula "65"))
                                             (rule "applyEq" (formula "98") (term "4") (ifseqformula "97"))
                                             (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                                             (rule "mul_literals" (formula "91") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "90"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                             (rule "polySimp_elimOne" (formula "76") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                                             (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                                             (rule "polySimp_elimOne" (formula "82") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                                             (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                             (rule "polySimp_elimOne" (formula "59") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "142") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "143"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "143") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "142"))
                                             (rule "applyEq" (formula "142") (term "0") (ifseqformula "42"))
                                             (rule "pullOutSelect" (formula "142") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "143")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "allRight" (formula "144") (inst "sk=i_3_0"))
                                          (rule "impRight" (formula "144"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notRight" (formula "146"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "73") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "81"))
                                          (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "81") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "95"))
                                          (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "95") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "51"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "76"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "76") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "96"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "87"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "87") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "47"))
                                          (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "true_left" (formula "46"))
                                          (rule "applyEq" (formula "84") (term "5") (ifseqformula "83"))
                                          (rule "applyEq" (formula "102") (term "4") (ifseqformula "101"))
                                          (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                          (rule "applyEq" (formula "69") (term "3") (ifseqformula "68"))
                                          (rule "applyEq" (formula "124") (term "0") (ifseqformula "45"))
                                          (rule "applyEq" (formula "91") (term "4") (ifseqformula "90"))
                                          (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "42"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                          (rule "polySimp_elimOne" (formula "71") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                                          (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                                          (rule "polySimp_elimOne" (formula "79") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                                          (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                                          (rule "polySimp_elimOne" (formula "93") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                                          (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                          (rule "polySimp_elimOne" (formula "74") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94"))
                                          (rule "mul_literals" (formula "94") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                          (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "90"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "68"))
                                          (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "98"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "91"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "69"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")) (ifInst ""  (formula "37")))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "131"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "68"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")) (ifInst ""  (formula "21")))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")))
                                          (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                          (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "inEqSimp_and_subsumption3" (formula "44") (term "0,0,0"))
                                          (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "nnf_imp2or" (formula "51") (term "0"))
                                          (rule "nnf_imp2or" (formula "65") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "58") (term "0"))
                                          (rule "nnf_imp2or" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "52") (term "0"))
                                          (rule "nnf_imp2or" (formula "59") (term "0"))
                                          (rule "nnf_imp2or" (formula "43") (term "0"))
                                          (rule "nnf_imp2or" (formula "44") (term "0"))
                                          (rule "nnf_imp2or" (formula "65") (term "0"))
                                          (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                          (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                          (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                          (rule "mul_literals" (formula "52") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                          (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "98"))
                                          (rule "true_left" (formula "98"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "104"))
                                          (rule "true_left" (formula "104"))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                          (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                          (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "98"))
                                          (rule "andLeft" (formula "98"))
                                          (rule "notLeft" (formula "98"))
                                          (rule "pullOutSelect" (formula "98") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                                          (rule "applyEq" (formula "107") (term "0") (ifseqformula "98"))
                                          (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "96"))
                                           (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "116")))
                                          (rule "replaceKnownSelect_taclet0000_53" (formula "98") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0") (ifseqformula "89"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0,0") (ifseqformula "67"))
                                          (rule "ifthenelse_negated" (formula "98") (term "0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                          (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                          (rule "commute_or" (formula "97") (term "0,0"))
                                          (rule "commute_or" (formula "104") (term "0,0"))
                                          (rule "commute_or" (formula "26") (term "0,0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or" (formula "29") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "21") (term "0"))
                                          (branch "result_50.<created>@heap_Before_BLOCK = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "25"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "89") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "89"))
                                             (rule "true_left" (formula "89"))
                                             (rule "ifthenelse_split" (formula "94") (term "0"))
                                             (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "96") (term "1,0") (ifseqformula "95"))
                                                (rule "hideAuxiliaryEq" (formula "95"))
                                                (rule "replace_known_left" (formula "89") (term "0,0,0,0") (ifseqformula "94"))
                                                 (builtin "One Step Simplification" (formula "89"))
                                                (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "89"))
                                                (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "89"))
                                                (rule "hideAuxiliaryEq" (formula "89"))
                                                (rule "replace_known_left" (formula "94") (term "1,0,0") (ifseqformula "93"))
                                                 (builtin "One Step Simplification" (formula "94"))
                                                (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "94"))
                                                (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "94"))
                                                (rule "hideAuxiliaryEq" (formula "94"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "commute_or_2" (formula "38") (term "0"))
                                                (rule "commute_or" (formula "50") (term "0,0"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "cut_direct" (formula "95") (term "1"))
                                                (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "96"))
                                                   (rule "true_left" (formula "96"))
                                                   (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "95"))
                                                    (builtin "One Step Simplification" (formula "69"))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "51") (term "0,0"))
                                                   (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                                   (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "57") (term "0,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0"))
                                                   (rule "commute_or_2" (formula "36") (term "0"))
                                                   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "88"))
                                                   (rule "true_left" (formula "88"))
                                                   (rule "lenNonNegative" (formula "84") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "84"))
                                                   (rule "commute_or" (formula "43") (term "0,0"))
                                                   (rule "commute_or" (formula "38") (term "0,0"))
                                                   (rule "commute_or_2" (formula "43") (term "0"))
                                                   (rule "commute_or_2" (formula "38") (term "0"))
                                                   (rule "commute_or" (formula "44") (term "0,0"))
                                                   (rule "commute_or_2" (formula "44") (term "0"))
                                                   (rule "commute_or_2" (formula "35") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "seqGetAlphaCast" (formula "86") (term "0"))
                                                   (rule "castedGetAny" (formula "86") (term "0"))
                                                    (builtin "One Step Simplification" (formula "86"))
                                                   (rule "true_left" (formula "86"))
                                                   (rule "commute_or" (formula "35") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0"))
                                                   (rule "commute_or" (formula "36") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0"))
                                                   (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                   (rule "ex_pull_out3" (formula "50") (term "0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "51") (term "0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "allLeft" (formula "38") (inst "t=i_3_0"))
                                                   (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "38") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "inEqSimp_homoInEq1" (formula "38"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0"))
                                                   (rule "add_literals" (formula "38") (term "0"))
                                                   (rule "leq_literals" (formula "38"))
                                                   (rule "closeFalse" (formula "38"))
                                                )
                                                (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "95"))
                                                   (rule "replace_known_right" (formula "69") (term "1") (ifseqformula "96"))
                                                    (builtin "One Step Simplification" (formula "69"))
                                                   (rule "replace_known_left" (formula "95") (term "1") (ifseqformula "69"))
                                                    (builtin "One Step Simplification" (formula "95"))
                                                   (rule "true_left" (formula "95"))
                                                   (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "51") (term "0,0"))
                                                   (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                                   (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0"))
                                                   (rule "commute_or" (formula "57") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0"))
                                                   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                                                   (rule "true_left" (formula "89"))
                                                   (rule "lenNonNegative" (formula "85") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "85"))
                                                   (rule "commute_or" (formula "43") (term "0,0"))
                                                   (rule "commute_or" (formula "38") (term "0,0"))
                                                   (rule "commute_or_2" (formula "43") (term "0"))
                                                   (rule "commute_or" (formula "44") (term "0,0"))
                                                   (rule "commute_or_2" (formula "38") (term "0"))
                                                   (rule "commute_or_2" (formula "44") (term "0"))
                                                   (rule "commute_or_2" (formula "35") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                                   (rule "castedGetAny" (formula "87") (term "0"))
                                                    (builtin "One Step Simplification" (formula "87"))
                                                   (rule "true_left" (formula "87"))
                                                   (rule "commute_or" (formula "35") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0,0"))
                                                   (rule "commute_or_2" (formula "35") (term "0"))
                                                   (rule "commute_or" (formula "36") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0,0"))
                                                   (rule "commute_or_2" (formula "36") (term "0"))
                                                   (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                                   (rule "ex_pull_out3" (formula "50") (term "0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "51") (term "0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                   (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                   (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "ex_pull_out3" (formula "57") (term "0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,0"))
                                                   (rule "commute_or_2" (formula "57") (term "1,0,0"))
                                                   (rule "shift_paren_or" (formula "57") (term "0,1,0,0"))
                                                   (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "57") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "57") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "57") (term "0,0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "57") (term "0,1,0,0,0"))
                                                   (rule "commute_or" (formula "57") (term "0,0,0,0,0,0"))
                                                   (rule "allLeft" (formula "38") (inst "t=i_3_0"))
                                                   (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "38") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "inEqSimp_homoInEq1" (formula "38"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0"))
                                                   (rule "leq_literals" (formula "38"))
                                                   (rule "closeFalse" (formula "38"))
                                                )
                                             )
                                             (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                                (rule "referencedObjectIsCreatedRight" (formula "98") (ifseqformula "108"))
                                                (rule "close" (formula "98") (ifseqformula "26"))
                                             )
                                          )
                                          (branch "result_50.<created>@heap_Before_BLOCK = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_right" (formula "28") (term "1,0,0,0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "106"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "105"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_right" (formula "94") (term "1,0,0") (ifseqformula "104"))
                                              (builtin "One Step Simplification" (formula "94"))
                                             (rule "ifthenelse_split" (formula "100") (term "0"))
                                             (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "102") (term "1,0") (ifseqformula "101"))
                                                (rule "hideAuxiliaryEq" (formula "101"))
                                                (rule "replace_known_left" (formula "101") (term "1,0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "101"))
                                                (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "101"))
                                                (rule "applyEqReverse" (formula "95") (term "1,0") (ifseqformula "101"))
                                                (rule "hideAuxiliaryEq" (formula "101"))
                                                (rule "replace_known_left" (formula "95") (term "0,0,0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "95"))
                                                (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "95"))
                                                (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "95"))
                                                (rule "hideAuxiliaryEq" (formula "95"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "commute_or" (formula "55") (term "0,0"))
                                                (rule "commute_or_2" (formula "49") (term "0"))
                                                (rule "cut_direct" (formula "74") (term "1"))
                                                (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "75"))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "replace_known_left" (formula "101") (term "1") (ifseqformula "74"))
                                                    (builtin "One Step Simplification" (formula "101"))
                                                   (rule "true_left" (formula "101"))
                                                   (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "56") (term "0,0"))
                                                   (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                                   (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "62") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or_2" (formula "41") (term "0"))
                                                   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                                                   (rule "true_left" (formula "95"))
                                                   (rule "commute_or" (formula "48") (term "0,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0"))
                                                   (rule "lenNonNegative" (formula "90") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "90"))
                                                   (rule "commute_or" (formula "43") (term "0,0"))
                                                   (rule "commute_or" (formula "49") (term "0,0"))
                                                   (rule "commute_or_2" (formula "43") (term "0"))
                                                   (rule "commute_or_2" (formula "49") (term "0"))
                                                   (rule "commute_or_2" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0,0"))
                                                   (rule "seqGetAlphaCast" (formula "92") (term "0"))
                                                   (rule "castedGetAny" (formula "92") (term "0"))
                                                    (builtin "One Step Simplification" (formula "92"))
                                                   (rule "true_left" (formula "92"))
                                                   (rule "commute_or" (formula "40") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or" (formula "41") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0"))
                                                   (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                   (rule "ifthenelse_split" (formula "21") (term "0"))
                                                   (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                                      (rule "hideAuxiliaryEq" (formula "25"))
                                                      (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "24"))
                                                      (rule "hideAuxiliaryEq" (formula "24"))
                                                      (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "23"))
                                                      (rule "hideAuxiliaryEq" (formula "23"))
                                                      (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEqReverse" (formula "99") (term "0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "90"))
                                                      (rule "true_left" (formula "90"))
                                                      (rule "ex_pull_out3" (formula "50") (term "0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "51") (term "0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "38") (inst "t=i_3_0"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "38") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "38"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                                      (rule "hideAuxiliaryEq" (formula "21"))
                                                      (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "100"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                                      (rule "hideAuxiliaryEq" (formula "24"))
                                                      (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "99"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "99"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "99"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "99"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_right" (formula "92") (term "1") (ifseqformula "98"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "ex_pull_out3" (formula "52") (term "0"))
                                                      (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "53") (term "0"))
                                                      (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                      (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "40") (inst "t=i_3_0"))
                                                      (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "40"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "74"))
                                                   (rule "replace_known_left" (formula "101") (term "1,0") (ifseqformula "74"))
                                                    (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "102")))
                                                   (rule "true_left" (formula "101"))
                                                   (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "56") (term "0,0"))
                                                   (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                                   (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "62") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or_2" (formula "41") (term "0"))
                                                   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                                                   (rule "true_left" (formula "95"))
                                                   (rule "lenNonNegative" (formula "90") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "90"))
                                                   (rule "commute_or" (formula "48") (term "0,0"))
                                                   (rule "commute_or_2" (formula "48") (term "0"))
                                                   (rule "commute_or" (formula "43") (term "0,0"))
                                                   (rule "commute_or_2" (formula "43") (term "0"))
                                                   (rule "commute_or" (formula "49") (term "0,0"))
                                                   (rule "commute_or_2" (formula "49") (term "0"))
                                                   (rule "commute_or_2" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0,0"))
                                                   (rule "seqGetAlphaCast" (formula "92") (term "0"))
                                                   (rule "castedGetAny" (formula "92") (term "0"))
                                                    (builtin "One Step Simplification" (formula "92"))
                                                   (rule "true_left" (formula "92"))
                                                   (rule "commute_or" (formula "40") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0,0"))
                                                   (rule "commute_or_2" (formula "40") (term "0"))
                                                   (rule "commute_or" (formula "41") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0,0"))
                                                   (rule "commute_or_2" (formula "41") (term "0"))
                                                   (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                                   (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                                   (rule "ifthenelse_split" (formula "21") (term "0"))
                                                   (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                                      (rule "hideAuxiliaryEq" (formula "23"))
                                                      (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "25"))
                                                      (rule "hideAuxiliaryEq" (formula "25"))
                                                      (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "23"))
                                                      (rule "hideAuxiliaryEq" (formula "23"))
                                                      (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "90"))
                                                      (rule "true_left" (formula "90"))
                                                      (rule "ex_pull_out3" (formula "50") (term "0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "51") (term "0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "38") (inst "t=i_3_0"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "38") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "38") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "38"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                                      (rule "hideAuxiliaryEq" (formula "21"))
                                                      (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "100"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "replace_known_right" (formula "25") (term "1,0,0") (ifseqformula "100"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "100"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "100"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                      (rule "hideAuxiliaryEq" (formula "22"))
                                                      (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "99"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                                      (rule "hideAuxiliaryEq" (formula "23"))
                                                      (rule "replace_known_right" (formula "92") (term "1") (ifseqformula "98"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "ex_pull_out3" (formula "52") (term "0"))
                                                      (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "53") (term "0"))
                                                      (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                      (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                      (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                      (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                      (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                      (rule "allLeft" (formula "40") (inst "t=i_3_0"))
                                                      (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "40") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "40") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "40"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                             (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                                (rule "referencedObjectIsCreatedRight" (formula "104") (ifseqformula "115"))
                                                (rule "close" (formula "104") (ifseqformula "31"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "instEx" (formula "71") (term "1,0") (ifseqformula "144") (userinteraction))
                                       (rule "castedGetAny" (formula "107") (term "0,1"))
                                       (rule "castedGetAny" (formula "145") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "92"))
                                       (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "92") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "93"))
                                       (rule "mul_literals" (formula "93") (term "1,0,0"))
                                       (rule "add_literals" (formula "93") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "73") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "70"))
                                       (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "70") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "145") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "145") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "54"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "84"))
                                       (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "84") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "61") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "107") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "107") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "78"))
                                       (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "78") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "107") (term "0,0"))
                                       (rule "replace_known_left" (formula "107") (term "0,0") (ifseqformula "69"))
                                        (builtin "One Step Simplification" (formula "107"))
                                       (rule "inEqSimp_commuteLeq" (formula "145") (term "0,0,0"))
                                       (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "44"))
                                       (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "applyEq" (formula "99") (term "4") (ifseqformula "98"))
                                       (rule "applyEq" (formula "89") (term "4") (ifseqformula "88"))
                                       (rule "applyEq" (formula "81") (term "5") (ifseqformula "80"))
                                       (rule "applyEq" (formula "123") (term "0") (ifseqformula "43"))
                                       (rule "applyEq" (formula "67") (term "3") (ifseqformula "66"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "90"))
                                       (rule "polySimp_mulLiterals" (formula "90") (term "0"))
                                       (rule "polySimp_elimOne" (formula "90") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                                       (rule "mul_literals" (formula "91") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                       (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                       (rule "polySimp_elimOne" (formula "71") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                                       (rule "polySimp_elimOne" (formula "68") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "143") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "143") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "143") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "143") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "143") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                                       (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                                       (rule "polySimp_elimOne" (formula "82") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                                       (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                       (rule "polySimp_elimOne" (formula "76") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "105") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "105") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "105") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "pullOutSelect" (formula "143") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
                                       (rule "applyEq" (formula "106") (term "1,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "replaceKnownSelect_taclet0_3" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "106") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "144") (term "1,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "143") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
                                       (rule "applyEq" (formula "106") (term "1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "144") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "106") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")) (ifInst ""  (formula "33")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                                       (rule "applyEqReverse" (formula "106") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "144") (term "1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "144") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "106") (term "1,0,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "105") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                       (rule "applyEq" (formula "144") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "144") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "106") (term "0,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")) (ifInst ""  (formula "18")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "129")))
                                       (rule "applyEqReverse" (formula "106") (term "0,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "144") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "144") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "106") (term "0,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_left" (formula "105") (term "0") (ifseqformula "68"))
                                        (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "69")))
                                       (rule "closeTrue" (formula "105"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "144") (inst "sk=i_1_0"))
                                    (rule "impRight" (formula "144"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "146"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "73") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "76"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "76") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "87"))
                                    (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "87") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "81"))
                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "81") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "95"))
                                    (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "95") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "96"))
                                    (rule "mul_literals" (formula "96") (term "1,0,0"))
                                    (rule "add_literals" (formula "96") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "46"))
                                    (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "applyEq" (formula "101") (term "4") (ifseqformula "100"))
                                    (rule "applyEq" (formula "91") (term "4") (ifseqformula "90"))
                                    (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                    (rule "applyEq" (formula "69") (term "3") (ifseqformula "68"))
                                    (rule "applyEq" (formula "124") (term "0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "42"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                    (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                    (rule "polySimp_elimOne" (formula "85") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                                    (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                                    (rule "polySimp_elimOne" (formula "79") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                                    (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                                    (rule "polySimp_elimOne" (formula "93") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "94"))
                                    (rule "mul_literals" (formula "94") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "90"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "68"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "98"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "91"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "69"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")) (ifInst ""  (formula "37")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "133"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "133")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "68"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "133")) (ifInst ""  (formula "13")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "133")))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                    (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_and_subsumption3" (formula "44") (term "0,0,0"))
                                    (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "nnf_imp2or" (formula "46") (term "0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0"))
                                    (rule "nnf_imp2or" (formula "65") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "52") (term "0"))
                                    (rule "nnf_imp2or" (formula "58") (term "0"))
                                    (rule "nnf_imp2or" (formula "59") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "65") (term "0"))
                                    (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
                                    (rule "andLeft" (formula "99"))
                                    (rule "notLeft" (formula "99"))
                                    (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                                    (rule "applyEq" (formula "109") (term "0") (ifseqformula "99"))
                                    (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "96"))
                                     (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "118")))
                                    (rule "replaceKnownSelect_taclet0000_53" (formula "99") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0") (ifseqformula "89"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0") (ifseqformula "67"))
                                    (rule "ifthenelse_negated" (formula "99") (term "0"))
                                    (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "98"))
                                    (rule "true_left" (formula "98"))
                                    (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "105"))
                                    (rule "true_left" (formula "105"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                    (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                    (rule "commute_or" (formula "97") (term "0,0"))
                                    (rule "commute_or" (formula "104") (term "0,0"))
                                    (rule "commute_or" (formula "23") (term "0,0,0"))
                                    (rule "commute_or" (formula "29") (term "0,0,0"))
                                    (rule "commute_or" (formula "26") (term "0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "ifthenelse_split" (formula "24") (term "0"))
                                    (branch "result_50.<created>@heap_Before_BLOCK = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_left" (formula "28") (term "1,0,0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "applyEqReverse" (formula "110") (term "0") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                       (rule "hideAuxiliaryEq" (formula "21"))
                                       (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "21"))
                                       (rule "hideAuxiliaryEq" (formula "21"))
                                       (rule "replace_known_left" (formula "89") (term "1,0,0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "true_left" (formula "89"))
                                       (rule "ifthenelse_split" (formula "94") (term "0"))
                                       (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "96") (term "1,0") (ifseqformula "95"))
                                          (rule "hideAuxiliaryEq" (formula "95"))
                                          (rule "replace_known_left" (formula "95") (term "1,0,0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "95"))
                                          (rule "applyEqReverse" (formula "99") (term "0") (ifseqformula "95"))
                                          (rule "applyEqReverse" (formula "89") (term "1,0") (ifseqformula "95"))
                                          (rule "hideAuxiliaryEq" (formula "95"))
                                          (rule "replace_known_left" (formula "89") (term "0,0,0,0") (ifseqformula "94"))
                                           (builtin "One Step Simplification" (formula "89"))
                                          (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "89"))
                                          (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "89"))
                                          (rule "hideAuxiliaryEq" (formula "89"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_or" (formula "50") (term "0,0"))
                                          (rule "cut_direct" (formula "69") (term "1"))
                                          (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "70"))
                                             (rule "true_left" (formula "70"))
                                             (rule "replace_known_left" (formula "95") (term "1") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "95"))
                                             (rule "true_left" (formula "95"))
                                             (rule "commute_or" (formula "51") (term "0,0"))
                                             (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "commute_or" (formula "57") (term "0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                                             (rule "true_left" (formula "89"))
                                             (rule "commute_or" (formula "38") (term "0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or" (formula "44") (term "0,0"))
                                             (rule "commute_or_2" (formula "44") (term "0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0"))
                                             (rule "lenNonNegative" (formula "85") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "85"))
                                             (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                             (rule "castedGetAny" (formula "87") (term "0"))
                                              (builtin "One Step Simplification" (formula "87"))
                                             (rule "true_left" (formula "87"))
                                             (rule "commute_or" (formula "35") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "commute_or" (formula "36") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "43") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "43") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "3"))
                                             (rule "andLeft" (formula "43"))
                                             (rule "inEqSimp_homoInEq1" (formula "43"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0"))
                                             (rule "add_literals" (formula "43") (term "0"))
                                             (rule "leq_literals" (formula "43"))
                                             (rule "closeFalse" (formula "43"))
                                          )
                                          (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "69"))
                                             (rule "replace_known_left" (formula "95") (term "1,0") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "96")))
                                             (rule "true_left" (formula "95"))
                                             (rule "commute_or" (formula "51") (term "0,0"))
                                             (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "57") (term "0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                                             (rule "true_left" (formula "89"))
                                             (rule "commute_or" (formula "38") (term "0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or" (formula "44") (term "0,0"))
                                             (rule "commute_or_2" (formula "44") (term "0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0"))
                                             (rule "lenNonNegative" (formula "85") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "85"))
                                             (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                             (rule "castedGetAny" (formula "87") (term "0"))
                                              (builtin "One Step Simplification" (formula "87"))
                                             (rule "true_left" (formula "87"))
                                             (rule "commute_or" (formula "35") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "commute_or" (formula "36") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "43") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "43") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "43"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "98") (ifseqformula "108"))
                                          (rule "close" (formula "98") (ifseqformula "26"))
                                       )
                                    )
                                    (branch "result_50.<created>@heap_Before_BLOCK = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "106"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "106"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "105"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                       (rule "hideAuxiliaryEq" (formula "21"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "replace_known_right" (formula "26") (term "1,0,0,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "25") (term "1,0,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "94") (term "1,0,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "94"))
                                       (rule "ifthenelse_split" (formula "100") (term "0"))
                                       (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "102") (term "1,0") (ifseqformula "101"))
                                          (rule "hideAuxiliaryEq" (formula "101"))
                                          (rule "replace_known_left" (formula "95") (term "0,0,0,0") (ifseqformula "100"))
                                           (builtin "One Step Simplification" (formula "95"))
                                          (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "95"))
                                          (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "95"))
                                          (rule "hideAuxiliaryEq" (formula "95"))
                                          (rule "replace_known_left" (formula "100") (term "1,0,0") (ifseqformula "99"))
                                           (builtin "One Step Simplification" (formula "100"))
                                          (rule "applyEqReverse" (formula "95") (term "1") (ifseqformula "100"))
                                          (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "100"))
                                          (rule "hideAuxiliaryEq" (formula "100"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or_2" (formula "49") (term "0"))
                                          (rule "commute_or" (formula "55") (term "0,0"))
                                          (rule "cut_direct" (formula "101") (term "1"))
                                          (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "102"))
                                             (rule "true_left" (formula "102"))
                                             (rule "replace_known_left" (formula "74") (term "1") (ifseqformula "101"))
                                              (builtin "One Step Simplification" (formula "74"))
                                             (rule "true_left" (formula "74"))
                                             (rule "commute_or" (formula "56") (term "0,0"))
                                             (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "commute_or" (formula "62") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "94"))
                                             (rule "true_left" (formula "94"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or" (formula "48") (term "0,0"))
                                             (rule "commute_or_2" (formula "48") (term "0"))
                                             (rule "commute_or" (formula "49") (term "0,0"))
                                             (rule "commute_or_2" (formula "49") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "lenNonNegative" (formula "89") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "89"))
                                             (rule "seqGetAlphaCast" (formula "91") (term "0"))
                                             (rule "castedGetAny" (formula "91") (term "0"))
                                              (builtin "One Step Simplification" (formula "91"))
                                             (rule "true_left" (formula "91"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "commute_or" (formula "41") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "ifthenelse_split" (formula "21") (term "0"))
                                             (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                (rule "hideAuxiliaryEq" (formula "22"))
                                                (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "23"))
                                                (rule "hideAuxiliaryEq" (formula "23"))
                                                (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "22"))
                                                (rule "hideAuxiliaryEq" (formula "22"))
                                                (rule "replace_known_left" (formula "89") (term "1") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "89"))
                                                (rule "true_left" (formula "89"))
                                                (rule "ex_pull_out3" (formula "50") (term "0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "51") (term "0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "43") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "43") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "43"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_literals" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                                (rule "hideAuxiliaryEq" (formula "21"))
                                                (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_right" (formula "25") (term "1,0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "99"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                (rule "hideAuxiliaryEq" (formula "22"))
                                                (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "replace_known_right" (formula "91") (term "1") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "91"))
                                                (rule "ex_pull_out3" (formula "52") (term "0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "53") (term "0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "45") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "45") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "45"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "101"))
                                             (rule "replace_known_right" (formula "74") (term "1") (ifseqformula "102"))
                                              (builtin "One Step Simplification" (formula "74"))
                                             (rule "replace_known_left" (formula "101") (term "1") (ifseqformula "74"))
                                              (builtin "One Step Simplification" (formula "101"))
                                             (rule "true_left" (formula "101"))
                                             (rule "commute_or" (formula "56") (term "0,0"))
                                             (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "commute_or" (formula "62") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                                             (rule "true_left" (formula "95"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or" (formula "48") (term "0,0"))
                                             (rule "commute_or" (formula "49") (term "0,0"))
                                             (rule "commute_or_2" (formula "48") (term "0"))
                                             (rule "commute_or_2" (formula "49") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "lenNonNegative" (formula "90") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "90"))
                                             (rule "seqGetAlphaCast" (formula "92") (term "0"))
                                             (rule "castedGetAny" (formula "92") (term "0"))
                                              (builtin "One Step Simplification" (formula "92"))
                                             (rule "true_left" (formula "92"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0,0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "commute_or" (formula "41") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                             (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                             (rule "ifthenelse_split" (formula "21") (term "0"))
                                             (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                (rule "hideAuxiliaryEq" (formula "22"))
                                                (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "22"))
                                                (rule "hideAuxiliaryEq" (formula "22"))
                                                (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "23"))
                                                (rule "hideAuxiliaryEq" (formula "23"))
                                                (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "22"))
                                                (rule "hideAuxiliaryEq" (formula "22"))
                                                (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "90"))
                                                (rule "true_left" (formula "90"))
                                                (rule "ex_pull_out3" (formula "50") (term "0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "51") (term "0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "43") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "43") (term "0,0,1"))
                                                (rule "leq_literals" (formula "43") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "43") (term "0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "closeFalse" (formula "43"))
                                             )
                                             (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                                (rule "hideAuxiliaryEq" (formula "21"))
                                                (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "replace_known_right" (formula "25") (term "1,0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "99"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "99"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                                (rule "hideAuxiliaryEq" (formula "22"))
                                                (rule "replace_known_right" (formula "92") (term "1") (ifseqformula "98"))
                                                 (builtin "One Step Simplification" (formula "92"))
                                                (rule "ex_pull_out3" (formula "52") (term "0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "53") (term "0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                                (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                                (rule "allLeft" (formula "45") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "45") (term "0,0,1"))
                                                (rule "leq_literals" (formula "45") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "45"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                       (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "104") (ifseqformula "115"))
                                          (rule "close" (formula "104") (ifseqformula "31"))
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "144") (inst "sk=i_0_0"))
                                 (rule "impRight" (formula "144"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "146"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "67") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "67") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "67") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "64") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "73"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "73") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "76"))
                                 (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "76") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "87"))
                                 (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "87") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "51"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "57") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "81"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "81") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "95"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "95") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "96"))
                                 (rule "mul_literals" (formula "96") (term "1,0,0"))
                                 (rule "add_literals" (formula "96") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "47"))
                                 (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "applyEq" (formula "125") (term "0") (ifseqformula "46"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                 (rule "applyEq" (formula "69") (term "3") (ifseqformula "68"))
                                 (rule "applyEq" (formula "91") (term "4") (ifseqformula "90"))
                                 (rule "applyEq" (formula "83") (term "5") (ifseqformula "82"))
                                 (rule "applyEq" (formula "101") (term "4") (ifseqformula "100"))
                                 (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "42"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                                 (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                                 (rule "polySimp_elimOne" (formula "93") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "94"))
                                 (rule "mul_literals" (formula "94") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                 (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "90"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "68"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "68"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")) (ifInst ""  (formula "36")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                 (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "97"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "132")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "90"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "68"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "132")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "68"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "68"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "132")) (ifInst ""  (formula "8")))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "132")))
                                 (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_and_subsumption3" (formula "43") (term "0,0,0"))
                                 (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_and_subsumption3" (formula "44") (term "0,0,0"))
                                 (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "nnf_imp2or" (formula "65") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "51") (term "0"))
                                 (rule "nnf_imp2or" (formula "46") (term "0"))
                                 (rule "nnf_imp2or" (formula "58") (term "0"))
                                 (rule "nnf_imp2or" (formula "59") (term "0"))
                                 (rule "nnf_imp2or" (formula "52") (term "0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_imp2or" (formula "44") (term "0"))
                                 (rule "nnf_imp2or" (formula "65") (term "0"))
                                 (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
                                 (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "58") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "52") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "52") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "65") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
                                 (rule "mul_literals" (formula "65") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "65") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "65") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
                                 (rule "andLeft" (formula "99"))
                                 (rule "notLeft" (formula "99"))
                                 (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
                                 (rule "applyEq" (formula "109") (term "0") (ifseqformula "99"))
                                 (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "96"))
                                  (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "118")))
                                 (rule "replaceKnownSelect_taclet0000_53" (formula "99") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0") (ifseqformula "89"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0") (ifseqformula "67"))
                                 (rule "ifthenelse_negated" (formula "99") (term "0"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "98"))
                                 (rule "true_left" (formula "98"))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "105"))
                                 (rule "true_left" (formula "105"))
                                 (rule "commute_or" (formula "104") (term "0,0"))
                                 (rule "commute_or" (formula "97") (term "0,0"))
                                 (rule "commute_or" (formula "26") (term "0,0,0"))
                                 (rule "commute_or" (formula "23") (term "0,0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "24") (term "0"))
                                 (branch "result_50.<created>@heap_Before_BLOCK = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_left" (formula "26") (term "1,0,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "applyEqReverse" (formula "110") (term "0") (ifseqformula "26"))
                                    (rule "hideAuxiliaryEq" (formula "26"))
                                    (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "replace_known_left" (formula "89") (term "1,0,0") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "89"))
                                    (rule "true_left" (formula "89"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "ifthenelse_split" (formula "94") (term "0"))
                                    (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "96") (term "1,0") (ifseqformula "95"))
                                       (rule "hideAuxiliaryEq" (formula "95"))
                                       (rule "replace_known_left" (formula "89") (term "0,0,0,0") (ifseqformula "94"))
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "89"))
                                       (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "89"))
                                       (rule "hideAuxiliaryEq" (formula "89"))
                                       (rule "replace_known_left" (formula "94") (term "1,0,0") (ifseqformula "93"))
                                        (builtin "One Step Simplification" (formula "94"))
                                       (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "94"))
                                       (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "94"))
                                       (rule "hideAuxiliaryEq" (formula "94"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "50") (term "0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "commute_or" (formula "51") (term "0,0"))
                                       (rule "commute_and" (formula "50") (term "0,0,1,0"))
                                       (rule "cut_direct" (formula "69") (term "1"))
                                       (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "true_left" (formula "70"))
                                          (rule "replace_known_left" (formula "95") (term "1") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "95"))
                                          (rule "true_left" (formula "95"))
                                          (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                          (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "57") (term "0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                                          (rule "true_left" (formula "89"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or" (formula "38") (term "0,0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "lenNonNegative" (formula "85") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "85"))
                                          (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                          (rule "castedGetAny" (formula "87") (term "0"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "true_left" (formula "87"))
                                          (rule "commute_or" (formula "35") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "50") (term "0"))
                                          (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "51") (term "0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                          (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                          (rule "allLeft" (formula "44") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "44") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "44"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "replace_known_right" (formula "95") (term "1") (ifseqformula "96"))
                                           (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "69")))
                                          (rule "true_left" (formula "95"))
                                          (rule "commute_and" (formula "51") (term "0,0,1,0"))
                                          (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "57") (term "0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
                                          (rule "true_left" (formula "89"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or" (formula "38") (term "0,0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "lenNonNegative" (formula "85") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "85"))
                                          (rule "seqGetAlphaCast" (formula "87") (term "0"))
                                          (rule "castedGetAny" (formula "87") (term "0"))
                                           (builtin "One Step Simplification" (formula "87"))
                                          (rule "true_left" (formula "87"))
                                          (rule "commute_or" (formula "35") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0"))
                                          (rule "commute_and_2" (formula "50") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "51") (term "0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_and" (formula "57") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "57") (term "0,1,1,0"))
                                          (rule "ex_pull_out3" (formula "50") (term "0"))
                                          (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "51") (term "0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                          (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                          (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                          (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                          (rule "allLeft" (formula "44") (inst "t=i_0_0"))
                                          (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                          (rule "leq_literals" (formula "44") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "44") (term "0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "closeFalse" (formula "44"))
                                       )
                                    )
                                    (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "98") (ifseqformula "108"))
                                       (rule "close" (formula "98") (ifseqformula "26"))
                                    )
                                 )
                                 (branch "result_50.<created>@heap_Before_BLOCK = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "105"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "replace_known_right" (formula "94") (term "1,0,0") (ifseqformula "104"))
                                     (builtin "One Step Simplification" (formula "94"))
                                    (rule "commute_or_2" (formula "48") (term "0"))
                                    (rule "ifthenelse_split" (formula "100") (term "0"))
                                    (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "102") (term "1,0") (ifseqformula "101"))
                                       (rule "hideAuxiliaryEq" (formula "101"))
                                       (rule "replace_known_left" (formula "101") (term "1,0,0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "101"))
                                       (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "101"))
                                       (rule "applyEqReverse" (formula "95") (term "1,0") (ifseqformula "101"))
                                       (rule "hideAuxiliaryEq" (formula "101"))
                                       (rule "replace_known_left" (formula "95") (term "0,0,0,0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "95"))
                                       (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "95"))
                                       (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "95"))
                                       (rule "hideAuxiliaryEq" (formula "95"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or" (formula "56") (term "0,0"))
                                       (rule "commute_and" (formula "55") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "56") (term "0,0,1,0"))
                                       (rule "cut_direct" (formula "74") (term "1"))
                                       (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "75"))
                                          (rule "true_left" (formula "75"))
                                          (rule "replace_known_left" (formula "101") (term "1") (ifseqformula "74"))
                                           (builtin "One Step Simplification" (formula "101"))
                                          (rule "true_left" (formula "101"))
                                          (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "62") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                                          (rule "true_left" (formula "95"))
                                          (rule "commute_or" (formula "48") (term "0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or" (formula "49") (term "0,0"))
                                          (rule "commute_or_2" (formula "49") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "lenNonNegative" (formula "90") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "90"))
                                          (rule "seqGetAlphaCast" (formula "92") (term "0"))
                                          (rule "castedGetAny" (formula "92") (term "0"))
                                           (builtin "One Step Simplification" (formula "92"))
                                          (rule "true_left" (formula "92"))
                                          (rule "commute_or" (formula "40") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "41") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                          (rule "ifthenelse_split" (formula "23") (term "0"))
                                          (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "99") (term "0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "90"))
                                             (rule "true_left" (formula "90"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "44") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                             (rule "leq_literals" (formula "44") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "44"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "100"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "100"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "99"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "92") (term "1") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "92"))
                                             (rule "ex_pull_out3" (formula "52") (term "0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                             (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "53") (term "0"))
                                             (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                             (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                             (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "46") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "46") (term "0,0,1"))
                                             (rule "leq_literals" (formula "46") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "46"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "replace_known_left" (formula "101") (term "1,0") (ifseqformula "74"))
                                           (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "102")))
                                          (rule "true_left" (formula "101"))
                                          (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "62") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "95"))
                                          (rule "true_left" (formula "95"))
                                          (rule "commute_or" (formula "48") (term "0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or" (formula "49") (term "0,0"))
                                          (rule "commute_or_2" (formula "49") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "lenNonNegative" (formula "90") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "90"))
                                          (rule "seqGetAlphaCast" (formula "92") (term "0"))
                                          (rule "castedGetAny" (formula "92") (term "0"))
                                           (builtin "One Step Simplification" (formula "92"))
                                          (rule "true_left" (formula "92"))
                                          (rule "commute_or" (formula "40") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "41") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_and_2" (formula "55") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "56") (term "0,1,0"))
                                          (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_and" (formula "62") (term "0,0,1,1,0"))
                                          (rule "commute_and_2" (formula "62") (term "0,1,1,0"))
                                          (rule "ifthenelse_split" (formula "23") (term "0"))
                                          (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "99") (term "0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "90"))
                                             (rule "true_left" (formula "90"))
                                             (rule "ex_pull_out3" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "50") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "51") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "57") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "57") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "57") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "44") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "44") (term "0,0,1"))
                                             (rule "leq_literals" (formula "44") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "44"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch " result_50.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "100"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "99"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "99"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "99"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "92") (term "1") (ifseqformula "98"))
                                              (builtin "One Step Simplification" (formula "92"))
                                             (rule "ex_pull_out3" (formula "52") (term "0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0,0"))
                                             (rule "shift_paren_or" (formula "52") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "52") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "52") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "52") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "53") (term "0"))
                                             (rule "cnf_rightDist" (formula "53") (term "0,0"))
                                             (rule "shift_paren_or" (formula "53") (term "1,0,0"))
                                             (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "53") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "53") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "53") (term "0,0,0,0,0"))
                                             (rule "ex_pull_out3" (formula "59") (term "1,0"))
                                             (rule "cnf_rightDist" (formula "59") (term "0,1,0"))
                                             (rule "commute_or" (formula "59") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "59") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "59") (term "1,0,0,1,0"))
                                             (rule "allLeft" (formula "46") (inst "t=i_0_0"))
                                             (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "46") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_contradInEq1" (formula "46") (ifseqformula "3"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "inEqSimp_homoInEq1" (formula "46"))
                                             (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0"))
                                             (rule "add_literals" (formula "46") (term "0"))
                                             (rule "leq_literals" (formula "46"))
                                             (rule "closeFalse" (formula "46"))
                                          )
                                       )
                                    )
                                    (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "104") (ifseqformula "115"))
                                       (rule "close" (formula "104") (ifseqformula "31"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "instEx" (formula "74") (term "1,0") (ifseqformula "144") (userinteraction))
                              (rule "castedGetAny" (formula "107") (term "0,1"))
                              (rule "castedGetAny" (formula "145") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "92"))
                              (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "92") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "93"))
                              (rule "mul_literals" (formula "93") (term "1,0,0"))
                              (rule "add_literals" (formula "93") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "48"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "73"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "73") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "70"))
                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "70") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "145") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "145") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "64") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "64") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "54"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "54") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "84"))
                              (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "84") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "61"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "61") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "107") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "107") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "78"))
                              (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "78") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "107") (term "0,0"))
                              (rule "replace_known_left" (formula "107") (term "0,0") (ifseqformula "72"))
                               (builtin "One Step Simplification" (formula "107"))
                              (rule "inEqSimp_commuteLeq" (formula "145") (term "0,0,0"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "44"))
                              (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "applyEq" (formula "99") (term "4") (ifseqformula "98"))
                              (rule "applyEq" (formula "89") (term "4") (ifseqformula "88"))
                              (rule "applyEq" (formula "81") (term "5") (ifseqformula "80"))
                              (rule "applyEq" (formula "123") (term "0") (ifseqformula "43"))
                              (rule "applyEq" (formula "67") (term "3") (ifseqformula "66"))
                              (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                              (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "90"))
                              (rule "polySimp_mulLiterals" (formula "90") (term "0"))
                              (rule "polySimp_elimOne" (formula "90") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                              (rule "mul_literals" (formula "91") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                              (rule "polySimp_elimOne" (formula "46") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                              (rule "polySimp_elimOne" (formula "71") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                              (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                              (rule "polySimp_elimOne" (formula "68") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "143") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "143") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "143") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "143") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "143") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "62") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                              (rule "polySimp_elimOne" (formula "52") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                              (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                              (rule "polySimp_elimOne" (formula "82") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "59"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                              (rule "polySimp_elimOne" (formula "76") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "105") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "105") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "105") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "143") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
                              (rule "applyEq" (formula "106") (term "1,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                              (rule "replaceKnownSelect_taclet0_3" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "106") (term "1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "144") (term "1,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "143") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                              (rule "applyEq" (formula "106") (term "1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "144") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "106") (term "1,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")) (ifInst ""  (formula "33")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "145")))
                              (rule "applyEqReverse" (formula "106") (term "1,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "144") (term "1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "144") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "106") (term "1,0,0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "105") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "applyEq" (formula "144") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "144") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "106") (term "0,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "94"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "87"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "87"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "65"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")) (ifInst ""  (formula "10")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "131")))
                              (rule "applyEqReverse" (formula "106") (term "0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "144") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "144") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "106") (term "0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "105") (term "0") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "72")))
                              (rule "closeTrue" (formula "105"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "144") (inst "sk=j_1") (userinteraction))
                           (rule "instAll" (formula "144") (term "1,0,0") (ifseqformula "57") (userinteraction))
                           (rule "impRight" (formula "145") (userinteraction))
                           (rule "impLeft" (formula "2") (userinteraction))
                           (branch "Case 1"
                              (rule "andLeft" (formula "1"))
                              (rule "castedGetAny" (formula "147") (term "0,1,0"))
                              (rule "castedGetAny" (formula "147") (term "1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "109") (term "0"))
                              (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "109") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "50") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "63"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "63") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "94"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "94") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "66") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "66") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "80"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "80") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "72"))
                              (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "72") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "86"))
                              (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "86") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "95"))
                              (rule "mul_literals" (formula "95") (term "1,0,0"))
                              (rule "add_literals" (formula "95") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "75"))
                              (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "75") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "147") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "replace_known_left" (formula "109") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "109"))
                              (rule "inEqSimp_leqRight" (formula "109"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                              (rule "applyEq" (formula "84") (term "5") (ifseqformula "83"))
                              (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "46"))
                              (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "applyEq" (formula "101") (term "4") (ifseqformula "100"))
                              (rule "applyEq" (formula "124") (term "0") (ifseqformula "45"))
                              (rule "applyEq" (formula "91") (term "4") (ifseqformula "90"))
                              (rule "applyEq" (formula "69") (term "3") (ifseqformula "68"))
                              (rule "applyEq" (formula "44") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "42"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                              (rule "polySimp_elimOne" (formula "49") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "62"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                              (rule "polySimp_elimOne" (formula "62") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                              (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                              (rule "polySimp_elimOne" (formula "93") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "145") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "145") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "145") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "145") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "145") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "65") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                              (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                              (rule "polySimp_elimOne" (formula "79") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                              (rule "polySimp_elimOne" (formula "71") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                              (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                              (rule "polySimp_elimOne" (formula "85") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                              (rule "polySimp_elimOne" (formula "55") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "94"))
                              (rule "mul_literals" (formula "94") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                              (rule "polySimp_elimOne" (formula "74") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "145") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                              (rule "applyEq" (formula "146") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "90"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "68"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                              (rule "replaceKnownSelect_taclet00_6" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "68"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "146") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "146") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "145") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "90"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "68"))
                              (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "58") (term "0,0"))
                              (rule "add_zero_left" (formula "58") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                              (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "91"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "69"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")) (ifInst ""  (formula "37")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "148")))
                              (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "132"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "90"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "132")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "68"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "68"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "132")) (ifInst ""  (formula "8")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "132")))
                              (rule "applyEqReverse" (formula "146") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "exLeft" (formula "2") (inst "sk=i_5") (userinteraction))
                              (rule "instEx" (formula "2") (term "0,0,0") (ifseqformula "146") (userinteraction))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "eqSymm" (formula "112") (term "1"))
                              (rule "castedGetAny" (formula "150") (term "1,1,0"))
                              (rule "castedGetAny" (formula "150") (term "0,1,0"))
                              (rule "castedGetAny" (formula "112") (term "1,1"))
                              (rule "castedGetAny" (formula "112") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "112") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "66"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "66") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "98"))
                              (rule "mul_literals" (formula "98") (term "1,0,0"))
                              (rule "add_literals" (formula "98") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "150") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "150") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "69") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "69") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "89"))
                              (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "89") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "75"))
                              (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "75") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "97"))
                              (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "97") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "53"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "53") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "78"))
                              (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "78") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "83"))
                              (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "83") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "59"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "150") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "112") (term "0,0"))
                              (rule "replace_known_left" (formula "112") (term "0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "112"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "applyEq" (formula "95") (term "4") (ifseqformula "94"))
                              (rule "applyEq" (formula "105") (term "4") (ifseqformula "104"))
                              (rule "applyEq" (formula "73") (term "3") (ifseqformula "72"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "49"))
                              (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "applyEq" (formula "86") (term "5") (ifseqformula "85"))
                              (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                              (rule "applyEq" (formula "127") (term "0") (ifseqformula "47"))
                              (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "44"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "64"))
                              (rule "polySimp_mulLiterals" (formula "64") (term "0"))
                              (rule "polySimp_elimOne" (formula "64") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "96"))
                              (rule "mul_literals" (formula "96") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "148") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "148") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "148") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "148") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "148") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "148") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "87"))
                              (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                              (rule "polySimp_elimOne" (formula "87") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                              (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                              (rule "polySimp_elimOne" (formula "73") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "95"))
                              (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                              (rule "polySimp_elimOne" (formula "95") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                              (rule "polySimp_elimOne" (formula "51") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                              (rule "polySimp_elimOne" (formula "76") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "81"))
                              (rule "polySimp_mulLiterals" (formula "81") (term "0"))
                              (rule "polySimp_elimOne" (formula "81") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                              (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                              (rule "polySimp_elimOne" (formula "57") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "110") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "110") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "110") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "148") (term "0,1,1,0") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "111") (term "0,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "92"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "70"))
                              (rule "eqSymm" (formula "111") (term "1"))
                              (rule "pullOutSelect" (formula "149") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                              (rule "applyEq" (formula "112") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "112") (term "0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "150") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "100"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "93"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "152")))
                              (rule "replaceKnownSelect_taclet00_6" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "71"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "112") (term "0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "150") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "150") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "112") (term "0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "111"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "71"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                              (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "152")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "94"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0,0") (ifseqformula "72"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0,0") (ifseqformula "40"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "94"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "152")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "72"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "40"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "72"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "152")) (ifInst ""  (formula "40")))
                              (rule "elementOfSingleton" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "152")))
                              (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "136"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "150") (term "0,1,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "112") (term "0,1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "135"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")) (ifInst ""  (formula "10")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "135")))
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "149") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "111") (term "0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "110"))
                              (rule "close" (formula "110") (ifseqformula "4"))
                           )
                        )
                     )
                  )
               )
               (branch
                  (rule "andRight" (formula "144"))
                  (branch
                     (rule "andRight" (formula "144"))
                     (branch
                        (rule "wellFormedAnonEQ" (formula "144") (ifseqformula "95"))
                        (rule "wellFormedAnonEQ" (formula "144") (term "0") (ifseqformula "88"))
                        (rule "wellFormedAnonEQ" (formula "144") (term "0,0") (ifseqformula "66"))
                        (rule "replace_known_left" (formula "144") (term "1,0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "144") (ifInst ""  (formula "31")) (ifInst ""  (formula "65")) (ifInst ""  (formula "94")))
                        (rule "closeTrue" (formula "144"))
                     )
                     (branch
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (ifseqformula "95"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "0") (ifseqformula "88"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "0,0") (ifseqformula "66"))
                        (rule "orRight" (formula "144"))
                        (rule "orRight" (formula "144"))
                        (rule "orRight" (formula "144"))
                        (rule "close" (formula "144") (ifseqformula "35"))
                     )
                  )
                  (branch
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (ifseqformula "95"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "0") (ifseqformula "88"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "144") (term "0,0") (ifseqformula "66"))
                     (rule "orRight" (formula "144"))
                     (rule "orRight" (formula "144"))
                     (rule "orRight" (formula "144"))
                     (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "144"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "143"))
                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "145")) (ifInst ""  (formula "144")))
                     (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "143"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "142")))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "141"))
                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "142")))
                     (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "140"))
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "141")))
                     (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                     (rule "hideAuxiliaryEq" (formula "19"))
                     (rule "replace_known_right" (formula "21") (term "1,0,0,0") (ifseqformula "141"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "139")) (ifInst ""  (formula "140")))
                     (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "replace_known_right" (formula "19") (term "0,0,0,0") (ifseqformula "138"))
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "140")) (ifInst ""  (formula "139")))
                     (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "19"))
                     (rule "hideAuxiliaryEq" (formula "19"))
                     (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "137"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "hideAuxiliaryEq" (formula "18"))
                     (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "136"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "hideAuxiliaryEq" (formula "18"))
                     (rule "replace_known_right" (formula "87") (term "0,0,0") (ifseqformula "135"))
                      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "137")) (ifInst ""  (formula "138")) (ifInst ""  (formula "136")))
                     (rule "closeFalse" (formula "87"))
                  )
               )
            )
         )
         (branch "Exceptional Post (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "68"))
             (builtin "One Step Simplification" (formula "101"))
            (rule "andLeft" (formula "68"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,0") (ifseqformula "68"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,0") (ifseqformula "61"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,1,0") (ifseqformula "39"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "71"))
            (rule "notLeft" (formula "69"))
            (rule "close" (formula "72") (ifseqformula "71"))
         )
         (branch "Pre (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "67")) (ifInst ""  (formula "103")) (ifInst ""  (formula "67")) (ifInst ""  (formula "103")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "1,1") (ifseqformula "61"))
            (rule "wellFormedAnonEQ" (formula "99") (term "0,0,1") (ifseqformula "61"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "1,0,1") (ifseqformula "61"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,1") (ifseqformula "39"))
            (rule "wellFormedAnonEQ" (formula "99") (term "0,0,0,1") (ifseqformula "39"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,0,1") (ifseqformula "39"))
            (rule "replace_known_left" (formula "99") (term "0,0,1,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "5")) (ifInst ""  (formula "38")) (ifInst ""  (formula "60")))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "65"))
            (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "65") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "51"))
            (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "51") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "66"))
            (rule "mul_literals" (formula "66") (term "1,0,0"))
            (rule "add_literals" (formula "66") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "46"))
            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "46") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "43"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "43") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "57"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "57") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "34"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "27"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "37") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "37") (term "0,0,0,0,0,1,1,0"))
            (rule "applyEq" (formula "41") (term "3") (ifseqformula "40"))
            (rule "applyEq" (formula "63") (term "4") (ifseqformula "62"))
            (rule "applyEq" (formula "78") (term "0") (ifseqformula "17"))
            (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
            (rule "applyEq" (formula "54") (term "5") (ifseqformula "53"))
            (rule "applyEq" (formula "15") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "13"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "64"))
            (rule "polySimp_mulLiterals" (formula "64") (term "0"))
            (rule "polySimp_elimOne" (formula "64") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "50"))
            (rule "polySimp_mulLiterals" (formula "50") (term "0"))
            (rule "polySimp_elimOne" (formula "50") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "65"))
            (rule "mul_literals" (formula "65") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "45"))
            (rule "polySimp_mulLiterals" (formula "45") (term "0"))
            (rule "polySimp_elimOne" (formula "45") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "42"))
            (rule "polySimp_mulLiterals" (formula "42") (term "0"))
            (rule "polySimp_elimOne" (formula "42") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "56"))
            (rule "polySimp_mulLiterals" (formula "56") (term "0"))
            (rule "polySimp_elimOne" (formula "56") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "26"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
            (rule "polySimp_elimOne" (formula "26") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_and_subsumption3" (formula "14") (term "0,0,0"))
            (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_and_subsumption3" (formula "15") (term "0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "23") (term "0"))
            (rule "nnf_imp2or" (formula "30") (term "0"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_imp2or" (formula "29") (term "0"))
            (rule "nnf_imp2or" (formula "36") (term "0"))
            (rule "nnf_imp2or" (formula "14") (term "0"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "23") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "30") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "mul_literals" (formula "30") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
            (rule "mul_literals" (formula "29") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "36") (term "1,0"))
            (rule "nnf_notAnd" (formula "36") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "14") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
            (rule "mul_literals" (formula "14") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "98") (term "1,1,0"))
            (rule "pullOutSelect" (formula "98") (term "0,0,0,0,0,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
            (rule "applyEq" (formula "99") (term "1,1,0,1,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "99") (term "1,1,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "99") (term "0,0,0,0,0,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "98") (term "0,0,0,0,1,1,0") (ifseqformula "95"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "pullOutSelect" (formula "98") (term "0,0,0,0,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
            (rule "applyEq" (formula "99") (term "1,1,1,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "99") (term "0,0,0,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "99") (term "1,1,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "98") (term "0,0,0,1,1,0") (ifseqformula "96"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
            (rule "mul_literals" (formula "14") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
            (rule "commute_or_2" (formula "17") (term "0"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commute_or" (formula "30") (term "0,0"))
            (rule "commute_and" (formula "30") (term "0,0,1,0"))
            (rule "commute_or" (formula "29") (term "0,0"))
            (rule "commute_and" (formula "29") (term "0,0,1,0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "98") (term "0,0"))
            (rule "insert_constant_string_value" (formula "98") (term "0,0,0,0,0,0") (ifseqformula "47"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "castDel" (formula "98") (term "0,0,0,0,0,0,0"))
            (rule "replace_known_right" (formula "98") (term "0,0,0,0,0") (ifseqformula "93"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "pullOutSelect" (formula "98") (term "0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "99") (term "0,0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "98") (term "0,1,0,0") (ifseqformula "94"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "pullOutSelect" (formula "98") (term "0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "99") (term "0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "98") (term "0,0,0") (ifseqformula "92"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "commute_or" (formula "36") (term "0,0"))
            (rule "commute_or_2" (formula "14") (term "0"))
            (rule "seqGetAlphaCast" (formula "51") (term "0"))
            (rule "castedGetAny" (formula "51") (term "0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "true_left" (formula "51"))
            (rule "seqGetAlphaCast" (formula "57") (term "0"))
            (rule "castedGetAny" (formula "57") (term "0"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "true_left" (formula "57"))
            (rule "seqGetAlphaCast" (formula "52") (term "0"))
            (rule "castedGetAny" (formula "52") (term "0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "true_left" (formula "52"))
            (rule "cut_direct" (formula "48") (term "1"))
            (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE TRUE"
                (builtin "One Step Simplification" (formula "49"))
               (rule "true_left" (formula "49"))
               (rule "replace_known_left" (formula "98") (term "0,0,1") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "98"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "commute_and_2" (formula "36") (term "0,1,1,0"))
               (rule "commute_or" (formula "17") (term "0,0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "22") (term "0,0"))
               (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "98") (term "0"))
               (rule "pullOutSelect" (formula "98") (term "0,1,0") (inst "selectSK=java_math_BigInteger_value_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
               (rule "pullOutSelect" (formula "99") (term "0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
               (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "100") (term "0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "98"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "98")) (ifInst ""  (formula "12")))
               (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "98"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "98")))
               (rule "applyEqReverse" (formula "99") (term "0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_left" (formula "98") (term "0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "98"))
               (rule "commute_or_2" (formula "14") (term "0,0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or_2" (formula "23") (term "0"))
               (rule "commute_or_2" (formula "22") (term "0"))
               (rule "lenNonNegative" (formula "64") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "64"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "99") (term "0"))
               (rule "pullOutSelect" (formula "99") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
               (rule "applyEq" (formula "100") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")) (ifInst ""  (formula "5")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "applyEqReverse" (formula "100") (term "1,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "100") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "99") (term "0,0,0,0") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "pullOutSelect" (formula "99") (term "1,1,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
               (rule "applyEq" (formula "100") (term "0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")) (ifInst ""  (formula "5")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "applyEqReverse" (formula "100") (term "1,1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "100") (term "0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_and_2" (formula "30") (term "0,1,0"))
               (rule "commute_and_2" (formula "29") (term "0,1,0"))
               (rule "seqGetAlphaCast" (formula "66") (term "0"))
               (rule "castedGetAny" (formula "66") (term "0"))
                (builtin "One Step Simplification" (formula "66"))
               (rule "true_left" (formula "66"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99") (term "1,0"))
               (rule "pullOutSelect" (formula "99") (term "0,0,0,1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
               (rule "applyEq" (formula "100") (term "1,1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "101") (term "1"))
                (builtin "One Step Simplification" (formula "101"))
               (rule "commute_or" (formula "16") (term "0,0,0"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "101") (term "0"))
                (builtin "One Step Simplification" (formula "101"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "101") (term "1"))
                (builtin "One Step Simplification" (formula "101"))
               (rule "notRight" (formula "101"))
               (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
               (rule "ifEqualsNull" (formula "3"))
               (rule "commute_or" (formula "18") (term "0,0,0"))
               (rule "commute_and" (formula "39") (term "0,0,1,1,0"))
               (rule "commute_or_2" (formula "17") (term "0,0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or" (formula "3") (term "0,0"))
               (rule "commute_or_2" (formula "18") (term "0,0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_or" (formula "3") (term "0,0,1"))
               (rule "commute_and" (formula "3") (term "0"))
               (rule "orLeft" (formula "3"))
               (branch " org_bouncycastle_jce_spec_ECParameterSpec_generator_1«selectSK» = null ∧ ( (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap_Before_BLOCK).<created>@anon_heap_printStatus«anonHeapFunction» = TRUE ∨ de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE)"
                  (rule "andLeft" (formula "3"))
                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                  (rule "ifEqualsNull" (formula "2"))
                  (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "73"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "referencedObjectIsCreatedRight" (formula "71") (ifseqformula "75"))
                  (rule "close" (formula "71") (ifseqformula "9"))
               )
               (branch " ¬( (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap_Before_BLOCK).<created>@anon_heap_printStatus«anonHeapFunction» = TRUE ∨ de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE) ∧ (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap_Before_BLOCK).generator@anon_heap_exitIfIdInvalid«anonHeapFunction» = null"
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "orRight" (formula "70"))
                  (rule "referencedObjectIsCreatedRight" (formula "71") (ifseqformula "75"))
                  (rule "close" (formula "71") (ifseqformula "8"))
               )
            )
            (branch "CUT: result_49.<created>@heap_Before_BLOCK = TRUE FALSE"
                (builtin "One Step Simplification" (formula "48"))
               (rule "replace_known_right" (formula "99") (term "0,0,1") (ifseqformula "66"))
                (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "48")))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "commute_and_2" (formula "36") (term "0,1,1,0"))
               (rule "commute_or" (formula "17") (term "0,0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "22") (term "0,0"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "99") (term "0,1"))
               (rule "pullOutSelect" (formula "99") (term "0,0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
               (rule "applyEq" (formula "100") (term "1,0,1,0,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")) (ifInst ""  (formula "5")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "applyEqReverse" (formula "100") (term "0,0,0,0,0,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "100") (term "1,0,1,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "99") (term "0,0,0,0,1") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "pullOutSelect" (formula "99") (term "0,0,0,0,1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
               (rule "applyEq" (formula "100") (term "1,1,1,0,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")) (ifInst ""  (formula "5")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
               (rule "applyEqReverse" (formula "100") (term "0,0,0,0,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "100") (term "1,1,1,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "99") (term "0,0,0,1") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or_2" (formula "23") (term "0"))
               (rule "commute_or_2" (formula "14") (term "0,0"))
               (rule "commute_or_2" (formula "22") (term "0"))
               (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "99") (term "0"))
               (rule "pullOutSelect" (formula "99") (term "0,0,0,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
               (rule "applyEq" (formula "100") (term "1,0,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "100") (term "1,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "100") (term "0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "98"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "pullOutSelect" (formula "99") (term "0,0") (inst "selectSK=java_math_BigInteger_value_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")) (ifInst ""  (formula "12")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "99")))
               (rule "applyEqReverse" (formula "100") (term "0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_left" (formula "99") (term "0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "99"))
               (rule "lenNonNegative" (formula "64") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "64"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_and_2" (formula "30") (term "0,1,0"))
               (rule "commute_and_2" (formula "29") (term "0,1,0"))
               (rule "seqGetAlphaCast" (formula "66") (term "0"))
               (rule "castedGetAny" (formula "66") (term "0"))
                (builtin "One Step Simplification" (formula "66"))
               (rule "true_left" (formula "66"))
               (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "100") (term "1"))
                (builtin "One Step Simplification" (formula "100"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "100") (term "1"))
               (rule "pullOutSelect" (formula "100") (term "0,0,0,1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
               (rule "applyEq" (formula "101") (term "1,1,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "39"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "102") (term "0"))
                (builtin "One Step Simplification" (formula "102"))
               (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "102") (term "1"))
                (builtin "One Step Simplification" (formula "102"))
               (rule "notRight" (formula "102"))
               (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
               (rule "ifEqualsNull" (formula "3"))
               (rule "commute_or" (formula "17") (term "0,0,0"))
               (rule "commute_or" (formula "18") (term "0,0,0"))
               (rule "commute_or" (formula "3") (term "0,0"))
               (rule "commute_and" (formula "39") (term "0,0,1,1,0"))
               (rule "commute_or_2" (formula "17") (term "0,0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or_2" (formula "18") (term "0,0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_or" (formula "3") (term "0,0,1"))
               (rule "commute_and" (formula "3") (term "0"))
               (rule "orLeft" (formula "3"))
               (branch " org_bouncycastle_jce_spec_ECParameterSpec_generator_1«selectSK» = null ∧ ( (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap_Before_BLOCK).<created>@anon_heap_printStatus«anonHeapFunction» = TRUE ∨ de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE)"
                  (rule "andLeft" (formula "3"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                  (rule "ifEqualsNull" (formula "2"))
                  (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "referencedObjectIsCreatedRight" (formula "71") (ifseqformula "76"))
                  (rule "close" (formula "71") (ifseqformula "9"))
               )
               (branch " ¬( (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap_Before_BLOCK).<created>@anon_heap_printStatus«anonHeapFunction» = TRUE ∨ de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heap_Before_BLOCK = TRUE) ∧ (de.polyas.core3.open.cred.CredentialGenerator.GROUP.group@heap_Before_BLOCK).generator@anon_heap_exitIfIdInvalid«anonHeapFunction» = null"
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "orRight" (formula "70"))
                  (rule "referencedObjectIsCreatedRight" (formula "71") (ifseqformula "76"))
                  (rule "close" (formula "71") (ifseqformula "8"))
               )
            )
         )
      )
      (branch "Exceptional Post (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "89"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "andLeft" (formula "56"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0") (ifseqformula "56"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,0") (ifseqformula "33"))
         (rule "andLeft" (formula "57"))
         (rule "andLeft" (formula "57"))
         (rule "notLeft" (formula "57"))
         (rule "close" (formula "59") (ifseqformula "58"))
      )
      (branch "Pre (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "55")) (ifInst ""  (formula "53")) (ifInst ""  (formula "55")))
         (rule "andRight" (formula "87"))
         (branch "Case 1"
            (rule "applyEqReverse" (formula "87") (term "0,0,0,0,1,0") (ifseqformula "47") (userinteraction))
            (rule "instAll" (formula "47") (term "1,0") (ifseqformula "31") (userinteraction))
            (rule "doubleImpLeft" (formula "47") (userinteraction))
            (branch "Case 1"
               (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
               (rule "closeTrue" (formula "55"))
            )
            (branch "Case 2"
               (rule "close" (formula "55") (ifseqformula "46"))
            )
            (branch "Case 3"
               (rule "exLeft" (formula "47") (inst "sk=j_0") (userinteraction))
               (rule "instEx" (formula "47") (term "0,1") (ifseqformula "88") (userinteraction))
               (rule "andLeft" (formula "47"))
               (rule "andLeft" (formula "47"))
               (rule "castedGetAny" (formula "58") (term "0,1"))
               (rule "castedGetAny" (formula "91") (term "0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "54"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "16"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "31") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "40"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "40") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "58") (term "0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "91") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "47"))
               (rule "mul_literals" (formula "47") (term "1,0,0"))
               (rule "add_literals" (formula "47") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "48"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "48") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "58") (term "1"))
               (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
               (rule "inEqSimp_gtToGeq" (formula "91") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0"))
               (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "49"))
                (builtin "One Step Simplification" (formula "58"))
               (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "50"))
               (rule "applyEq" (formula "91") (term "0,0,1,0,1,0") (ifseqformula "50"))
               (rule "applyEq" (formula "48") (term "0,0,0,1,0") (ifseqformula "50"))
               (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "58"))
               (rule "inEqSimp_geqRight" (formula "58"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "applyEq" (formula "36") (term "3") (ifseqformula "35"))
               (rule "applyEq" (formula "70") (term "0") (ifseqformula "13"))
               (rule "applyEq" (formula "53") (term "5") (ifseqformula "52"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
               (rule "applyEq" (formula "11") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "9"))
               (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "50"))
               (rule "inEqSimp_sepNegMonomial0" (formula "54"))
               (rule "polySimp_mulLiterals" (formula "54") (term "0"))
               (rule "polySimp_elimOne" (formula "54") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "45"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0"))
               (rule "polySimp_elimOne" (formula "45") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0"))
               (rule "polySimp_elimOne" (formula "16") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "polySimp_elimOne" (formula "37") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0"))
               (rule "polySimp_elimOne" (formula "29") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
               (rule "mul_literals" (formula "31") (term "1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "40"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0"))
               (rule "polySimp_elimOne" (formula "40") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "90") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "90") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "90") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "90") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
               (rule "polySimp_elimOne" (formula "22") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "47"))
               (rule "mul_literals" (formula "47") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "90") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "90") (term "1,1,0"))
               (rule "mul_literals" (formula "90") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "90") (term "1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "48"))
               (rule "polySimp_mulLiterals" (formula "48") (term "0"))
               (rule "polySimp_elimOne" (formula "48") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "1"))
               (rule "mul_literals" (formula "47") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "47"))
               (rule "mul_literals" (formula "47") (term "1"))
               (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
               (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_and_subsumption3" (formula "11") (term "0,0,0"))
               (rule "leq_literals" (formula "11") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_ex2all" (formula "91"))
               (rule "nnf_imp2or" (formula "19") (term "0"))
               (rule "nnf_imp2or" (formula "14") (term "0"))
               (rule "nnf_imp2or" (formula "20") (term "0"))
               (rule "nnf_imp2or" (formula "26") (term "0"))
               (rule "nnf_imp2or" (formula "32") (term "0"))
               (rule "nnf_imp2or" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
               (rule "mul_literals" (formula "19") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "14") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "26") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
               (rule "mul_literals" (formula "26") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "32") (term "1,0"))
               (rule "nnf_notAnd" (formula "32") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
               (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "32") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
               (rule "mul_literals" (formula "32") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
               (rule "commute_or_2" (formula "19") (term "0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "commute_or_2" (formula "14") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_and" (formula "27") (term "0,0,1,0"))
               (rule "commute_and" (formula "26") (term "0,0,1,0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "charLiteral_to_int" (formula "2") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "2"))
               (rule "qeq_literals" (formula "49") (term "0"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "closeFalse" (formula "49"))
            )
         )
         (branch
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (ifseqformula "33"))
            (rule "orRight" (formula "87"))
            (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "87")))
            (rule "closeFalse" (formula "43"))
         )
      )
   )
   (branch "Exceptional Post (get)"
       (builtin "One Step Simplification" (formula "40"))
       (builtin "One Step Simplification" (formula "72"))
      (rule "insert_constant_string_value" (formula "49") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "insert_constant_string_value" (formula "67") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "67"))
      (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "50"))
      (rule "insert_constant_string_value" (formula "48") (term "0") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "48"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "30"))
      (rule "castDel" (formula "49") (term "0,0"))
      (rule "castDel" (formula "67") (term "0,0"))
      (rule "castDel" (formula "50") (term "0,0"))
      (rule "castDel" (formula "48") (term "0,0"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "42"))
      (rule "notLeft" (formula "40"))
      (rule "close" (formula "43") (ifseqformula "42"))
   )
   (branch "Pre (get)"
       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
      (rule "wellFormedAnonEQ" (formula "70") (term "0,1") (ifseqformula "30"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1,1") (ifseqformula "30"))
      (rule "replace_known_left" (formula "70") (term "1,0,1") (ifseqformula "29"))
       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "1")))
      (rule "castedGetAny" (formula "70") (term "0,1,0,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "37"))
      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "37") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "26"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "26") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "34"))
      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "34") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,0,0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "applyEq" (formula "31") (term "3") (ifseqformula "30"))
      (rule "applyEq" (formula "48") (term "0") (ifseqformula "11"))
      (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "8"))
      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "36"))
      (rule "polySimp_mulLiterals" (formula "36") (term "0"))
      (rule "polySimp_elimOne" (formula "36") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
      (rule "polySimp_elimOne" (formula "25") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "33"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
      (rule "polySimp_elimOne" (formula "33") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "polySimp_elimOne" (formula "14") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "pullOutSelect" (formula "69") (term "0,0,1,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "6")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
      (rule "applyEqReverse" (formula "70") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "70") (term "0,0,1,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "inEqSimp_and_subsumption3" (formula "9") (term "0,0,0"))
      (rule "leq_literals" (formula "9") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_and_subsumption3" (formula "10") (term "0,0,0"))
      (rule "leq_literals" (formula "10") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "nnf_imp2or" (formula "22") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "27") (term "1,0"))
      (rule "nnf_imp2or" (formula "21") (term "0"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_imp2or" (formula "27") (term "0"))
      (rule "nnf_notAnd" (formula "22") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
      (rule "mul_literals" (formula "22") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
      (rule "mul_literals" (formula "21") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "27") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
      (rule "mul_literals" (formula "27") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "69") (term "1,0") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet20_5" (formula "69") (term "0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet20_5" (formula "69") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet20_5" (formula "69") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "expand_inInt" (formula "69") (term "1,0,0,1,1,0"))
      (rule "expand_inInt" (formula "69") (term "1,0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "69") (term "0,1,1,0,0,1,1,0"))
      (rule "replace_int_MAX" (formula "69") (term "1,0,1,0,0,1,1,0"))
      (rule "replace_int_MIN" (formula "69") (term "0,1,1,0,0,1,0,1,0"))
      (rule "replace_int_MAX" (formula "69") (term "1,0,1,0,0,1,0,1,0"))
      (rule "castedGetAny" (formula "69") (term "0,0,1,0,1,1,0"))
      (rule "castedGetAny" (formula "69") (term "0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,1,0,1,0"))
      (rule "pullOutSelect" (formula "69") (term "0,1,0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "applyEq" (formula "70") (term "0,0,0,1,0,1,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,0,1,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "6")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
      (rule "applyEqReverse" (formula "70") (term "0,1,1,1,0,0,0,1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "70") (term "0,0,0,1,0,1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "70") (term "0,1,0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "69") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "69") (term "0,0,1,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "69"))
      (rule "applyEq" (formula "69") (term "1,1,1,0,0,0,1,1,0") (ifseqformula "8"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
      (rule "nnf_imp2or" (formula "69") (term "0,0,1,0"))
      (rule "nnf_imp2or" (formula "69") (term "0,1,1,0"))
      (rule "nnf_notAnd" (formula "69") (term "0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "69") (term "0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "69") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "69") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "69") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "69") (term "0,0,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "69") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "69") (term "0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,1,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "69") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,0,1,1,0"))
      (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,0,1,1,0"))
      (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "69") (term "1,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "69") (term "0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,1,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "69") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "add_literals" (formula "69") (term "0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "69") (term "1,1,1,0,0,1,1,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or" (formula "22") (term "0,0"))
      (rule "commute_or_2" (formula "16") (term "0"))
      (rule "commute_or_2" (formula "17") (term "0"))
      (rule "commute_or" (formula "21") (term "0,0"))
      (rule "commute_and" (formula "22") (term "0,0,1,0"))
      (rule "commute_and" (formula "21") (term "0,0,1,0"))
      (rule "commute_and_2" (formula "27") (term "0,1,1,0"))
      (rule "commute_or" (formula "27") (term "0,0"))
      (rule "commute_or" (formula "69") (term "1"))
      (rule "seqGetAlphaCast" (formula "34") (term "0"))
      (rule "castedGetAny" (formula "34") (term "0"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "true_left" (formula "34"))
      (rule "seqGetAlphaCast" (formula "20") (term "0"))
      (rule "castedGetAny" (formula "20") (term "0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "true_left" (formula "20"))
      (rule "seqGetAlphaCast" (formula "37") (term "0"))
      (rule "castedGetAny" (formula "37") (term "0"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "true_left" (formula "37"))
      (rule "seqGetAlphaCast" (formula "15") (term "0"))
      (rule "castedGetAny" (formula "15") (term "0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "lenNonNegative" (formula "36") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "36"))
      (rule "commute_or" (formula "12") (term "0,0"))
      (rule "commute_or" (formula "16") (term "0,0"))
      (rule "commute_or" (formula "17") (term "0,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "16") (term "0"))
      (rule "commute_or_2" (formula "17") (term "0"))
      (rule "commute_or_2" (formula "9") (term "0,0"))
      (rule "lenNonNegative" (formula "33") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "33"))
      (rule "commute_or_2" (formula "10") (term "0,0"))
      (rule "commute_or" (formula "9") (term "0,0,0"))
      (rule "commute_or_2" (formula "9") (term "0,0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or" (formula "10") (term "0,0,0"))
      (rule "commute_or_2" (formula "10") (term "0,0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_and_2" (formula "22") (term "0,1,0"))
      (rule "commute_and_2" (formula "21") (term "0,1,0"))
      (rule "commute_and" (formula "27") (term "0,0,1,1,0"))
      (rule "commute_and_2" (formula "27") (term "0,1,1,0"))
      (rule "ex_pull_out3" (formula "22") (term "0"))
      (rule "cnf_rightDist" (formula "22") (term "0,0"))
      (rule "shift_paren_or" (formula "22") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "22") (term "1,0,0,0"))
      (rule "commute_or" (formula "22") (term "0,0,0,0,0"))
      (rule "ex_pull_out3" (formula "21") (term "0"))
      (rule "cnf_rightDist" (formula "21") (term "0,0"))
      (rule "shift_paren_or" (formula "21") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "21") (term "1,0,0,0"))
      (rule "commute_or" (formula "21") (term "0,0,0,0,0"))
      (rule "ex_pull_out3" (formula "27") (term "1,0"))
      (rule "cnf_rightDist" (formula "27") (term "0,1,0"))
      (rule "commute_or" (formula "27") (term "1,0,1,0"))
      (rule "cnf_rightDist" (formula "27") (term "0,0,1,0"))
      (rule "commute_or" (formula "27") (term "1,0,0,1,0"))
      (rule "ex_pull_out3" (formula "27") (term "0"))
      (rule "cnf_rightDist" (formula "27") (term "0,0"))
      (rule "commute_or_2" (formula "27") (term "1,0,0"))
      (rule "shift_paren_or" (formula "27") (term "0,1,0,0"))
      (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
      (rule "commute_or_2" (formula "27") (term "1,0,0,0"))
      (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
      (rule "shift_paren_or" (formula "27") (term "0,1,0,0,0"))
      (rule "commute_or" (formula "27") (term "0,0,0,0,0,0"))
      (rule "andRight" (formula "71"))
      (branch
         (rule "andRight" (formula "71"))
         (branch
            (rule "nnf_ex2all" (formula "71"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0"))
            (rule "commute_or" (formula "1") (term "0,0"))
            (rule "commute_and" (formula "23") (term "0,0,0"))
            (rule "commute_and_2" (formula "28") (term "0,0"))
            (rule "commute_and" (formula "22") (term "0,0,0"))
            (rule "allLeft" (formula "17") (inst "t=i_1"))
            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
            (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "22"))
            (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "allLeft" (formula "17") (inst "t=i_2"))
            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
            (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "41"))
            (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "allLeft" (formula "13") (inst "t=i_2_1"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "37"))
            (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "allLeft" (formula "13") (inst "t=i_2_0"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "17"))
            (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "commute_and_2" (formula "23") (term "0,0"))
            (rule "commute_and_2" (formula "22") (term "0,0"))
            (rule "allLeft" (formula "1") (inst "t=i_0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "27"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "leq_literals" (formula "1") (term "0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
            (rule "qeq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch
            (rule "andRight" (formula "71"))
            (branch
               (rule "allRight" (formula "71") (inst "sk=i_0_0"))
               (rule "orRight" (formula "71"))
               (rule "orRight" (formula "71"))
               (rule "notRight" (formula "73"))
               (rule "orRight" (formula "72"))
               (rule "orRight" (formula "74"))
               (rule "inEqSimp_leqRight" (formula "72"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "73"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "75"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "75"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "commute_and" (formula "26") (term "0,0,0"))
               (rule "commute_and_2" (formula "31") (term "0,0"))
               (rule "commute_and" (formula "25") (term "0,0,0"))
               (rule "allLeft" (formula "13") (inst "t=i_0_0"))
               (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "13") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_contradInEq0" (formula "13") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "13") (term "0,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "allRight" (formula "71") (inst "sk=i_3"))
               (rule "orRight" (formula "71"))
               (rule "orRight" (formula "71"))
               (rule "notRight" (formula "73"))
               (rule "orRight" (formula "72"))
               (rule "orRight" (formula "74"))
               (rule "inEqSimp_leqRight" (formula "72"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "73"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "75"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "75"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "commute_and" (formula "26") (term "0,0,0"))
               (rule "commute_and_2" (formula "31") (term "0,0"))
               (rule "commute_and" (formula "25") (term "0,0,0"))
               (rule "allLeft" (formula "14") (inst "t=i_3"))
               (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "14") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_contradInEq0" (formula "14") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "14") (term "0,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "14"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
      )
      (branch
         (rule "orRight" (formula "71"))
         (rule "referencedObjectIsCreatedRight" (formula "72") (ifseqformula "54"))
         (rule "close" (formula "72") (ifseqformula "1"))
      )
   )
   (branch "Null reference (var = null)"
       (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "72")))
      (rule "closeTrue" (formula "70"))
   )
)
(branch "Exceptional Post (printStatus)"
    (builtin "One Step Simplification" (formula "59"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
   (rule "andLeft" (formula "29"))
   (rule "andLeft" (formula "29"))
   (rule "andLeft" (formula "31"))
   (rule "notLeft" (formula "29"))
   (rule "close" (formula "32") (ifseqformula "31"))
)
(branch "Pre (printStatus)"
    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "1")))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0"))
   (rule "inEqSimp_gtToGeq" (formula "26") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "19") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "24"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "24") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
   (rule "applyEq" (formula "36") (term "0") (ifseqformula "11"))
   (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0") (ifseqformula "8"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "19"))
   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
   (rule "polySimp_elimOne" (formula "19") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "24"))
   (rule "polySimp_mulLiterals" (formula "24") (term "0"))
   (rule "polySimp_elimOne" (formula "24") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
   (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
   (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "14"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
   (rule "polySimp_elimOne" (formula "14") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0"))
   (rule "nnf_imp2or" (formula "9") (term "0"))
   (rule "nnf_imp2or" (formula "17") (term "0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_imp2or" (formula "22") (term "0"))
   (rule "nnf_imp2or" (formula "21") (term "0"))
   (rule "nnf_imp2or" (formula "26") (term "0"))
   (rule "nnf_imp2or" (formula "12") (term "0"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "22") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
   (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
   (rule "mul_literals" (formula "22") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "21") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
   (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
   (rule "mul_literals" (formula "21") (term "1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "26") (term "1,0"))
   (rule "nnf_notAnd" (formula "26") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
   (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
   (rule "mul_literals" (formula "26") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "12") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
   (rule "mul_literals" (formula "12") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "9") (term "1,0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
   (rule "nnf_notAnd" (formula "10") (term "1,0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
   (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "57") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
   (rule "castedGetAny" (formula "57") (term "0,0,1,0,1,0"))
   (rule "castedGetAny" (formula "57") (term "0,1,0,1"))
   (rule "castedGetAny" (formula "57") (term "0,0,1,0,1,0,0,0,0"))
   (rule "castedGetAny" (formula "57") (term "0,1,0,1,0,0,0"))
   (rule "castedGetAny" (formula "57") (term "0,0,1,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,1,0,0,0"))
   (rule "applyEq" (formula "57") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
   (rule "replace_known_right" (formula "57") (term "0,0,0,0,0,0") (ifseqformula "36"))
    (builtin "One Step Simplification" (formula "57"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,1"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,1,0,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,1,0,0"))
   (rule "nnf_imp2or" (formula "57") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "57") (term "0,1,0,0"))
   (rule "nnf_notAnd" (formula "57") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "57") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0"))
   (rule "nnf_imp2or" (formula "57") (term "0,0,0,0,0"))
   (rule "nnf_notAnd" (formula "57") (term "0,0,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,1,0,0"))
   (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,1,0,0"))
   (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,1,0,0"))
   (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,1,0,0"))
   (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0,1,0,0"))
   (rule "add_literals" (formula "57") (term "0,0,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,1,0,0"))
   (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0"))
   (rule "nnf_notAnd" (formula "57") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "57") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "57") (term "0,0,0,1,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "57") (term "0,0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "57") (term "0,0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0,0,0,0,0"))
   (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "57") (term "1,0,0,0,0,0,0,0"))
   (rule "commute_or_2" (formula "17") (term "0"))
   (rule "commute_or_2" (formula "16") (term "0"))
   (rule "commute_or" (formula "22") (term "0,0"))
   (rule "commute_or" (formula "21") (term "0,0"))
   (rule "commute_or_2" (formula "12") (term "0"))
   (rule "commute_and" (formula "22") (term "0,0,1,0"))
   (rule "commute_or" (formula "26") (term "0,0"))
   (rule "commute_and" (formula "21") (term "0,0,1,0"))
   (rule "commute_or" (formula "9") (term "0,0,0"))
   (rule "commute_and_2" (formula "26") (term "0,1,1,0"))
   (rule "commute_or" (formula "10") (term "0,0,0"))
   (rule "lenNonNegative" (formula "8") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "seqGetAlphaCast" (formula "16") (term "0"))
   (rule "castedGetAny" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "lenNonNegative" (formula "9") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "9"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
   (rule "seqGetAlphaCast" (formula "26") (term "0"))
   (rule "castedGetAny" (formula "26") (term "0"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "seqGetAlphaCast" (formula "21") (term "0"))
   (rule "castedGetAny" (formula "21") (term "0"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "true_left" (formula "21"))
   (rule "commute_or" (formula "18") (term "0,0"))
   (rule "commute_or" (formula "17") (term "0,0"))
   (rule "commute_or" (formula "13") (term "0,0"))
   (rule "lenNonNegative" (formula "20") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "20"))
   (rule "commute_or_2" (formula "18") (term "0"))
   (rule "commute_or_2" (formula "10") (term "0,0"))
   (rule "commute_or_2" (formula "17") (term "0"))
   (rule "commute_or_2" (formula "13") (term "0"))
   (rule "commute_or_2" (formula "11") (term "0,0"))
   (rule "lenNonNegative" (formula "15") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "andRight" (formula "60"))
   (branch
      (rule "commute_and_2" (formula "25") (term "0,1,0"))
      (rule "commute_and_2" (formula "24") (term "0,1,0"))
      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or_2" (formula "10") (term "0,0"))
      (rule "commute_or_2" (formula "10") (term "0,0,0"))
      (rule "shift_paren_or" (formula "11") (term "0,0,0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0,0"))
      (rule "commute_or_2" (formula "11") (term "0,0,0"))
      (rule "commute_or" (formula "10") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_or_subsumption1" (formula "10") (term "0,0,0"))
      (rule "qeq_literals" (formula "10") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "commute_or" (formula "11") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_or_subsumption1" (formula "11") (term "0,0,0"))
      (rule "qeq_literals" (formula "11") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "andRight" (formula "60"))
      (branch
         (rule "andRight" (formula "60"))
         (branch
            (rule "andRight" (formula "60"))
            (branch
               (rule "allRight" (formula "60") (inst "sk=i_3_0"))
               (rule "orRight" (formula "60"))
               (rule "notRight" (formula "61"))
               (rule "orRight" (formula "61"))
               (rule "inEqSimp_leqRight" (formula "61"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "62"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "charLiteral_to_int" (formula "32") (term "1,1,1,0,1,1,0"))
               (rule "add_literals" (formula "32") (term "1,1,0,1,1,0"))
               (rule "ex_pull_out3" (formula "28") (term "0"))
               (rule "cnf_rightDist" (formula "28") (term "0,0"))
               (rule "shift_paren_or" (formula "28") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
               (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
               (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
               (rule "ex_pull_out3" (formula "27") (term "0"))
               (rule "cnf_rightDist" (formula "27") (term "0,0"))
               (rule "shift_paren_or" (formula "27") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
               (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
               (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "16") (inst "t=i_3_0"))
               (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
               (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "16") (term "0,0,1"))
               (rule "leq_literals" (formula "16") (term "0,1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "16"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "nnf_ex2all" (formula "60"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "1") (term "0"))
               (rule "commute_or" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "30") (term "1,1,1,0,1,1,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,1,1,0"))
               (rule "ex_pull_out3" (formula "26") (term "0"))
               (rule "cnf_rightDist" (formula "26") (term "0,0"))
               (rule "shift_paren_or" (formula "26") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
               (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
               (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
               (rule "ex_pull_out3" (formula "25") (term "0"))
               (rule "cnf_rightDist" (formula "25") (term "0,0"))
               (rule "shift_paren_or" (formula "25") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
               (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
               (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
               (rule "ex_pull_out3" (formula "30") (term "1,0"))
               (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
               (rule "commute_or" (formula "30") (term "1,0,1,0"))
               (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
               (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
               (rule "ex_pull_out3" (formula "30") (term "0"))
               (rule "cnf_rightDist" (formula "30") (term "0,0"))
               (rule "commute_or_2" (formula "30") (term "1,0,0"))
               (rule "shift_paren_or" (formula "30") (term "0,1,0,0"))
               (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
               (rule "commute_or_2" (formula "30") (term "1,0,0,0"))
               (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
               (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0"))
               (rule "commute_or" (formula "30") (term "0,0,0,0,0,0"))
               (rule "allLeft" (formula "1") (inst "t=i_2_0"))
               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "16"))
               (rule "qeq_literals" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
               (rule "andLeft" (formula "18"))
               (rule "inEqSimp_homoInEq1" (formula "18"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "times_zero_1" (formula "18") (term "1,0"))
               (rule "add_zero_right" (formula "18") (term "0"))
               (rule "leq_literals" (formula "18"))
               (rule "closeFalse" (formula "18"))
            )
         )
         (branch
            (rule "allRight" (formula "60") (inst "sk=i_1_0"))
            (rule "orRight" (formula "60"))
            (rule "notRight" (formula "61"))
            (rule "orRight" (formula "61"))
            (rule "inEqSimp_leqRight" (formula "61"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "62"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "charLiteral_to_int" (formula "32") (term "1,1,1,0,1,1,0"))
            (rule "add_literals" (formula "32") (term "1,1,0,1,1,0"))
            (rule "ex_pull_out3" (formula "28") (term "0"))
            (rule "cnf_rightDist" (formula "28") (term "0,0"))
            (rule "shift_paren_or" (formula "28") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
            (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
            (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
            (rule "ex_pull_out3" (formula "27") (term "0"))
            (rule "cnf_rightDist" (formula "27") (term "0,0"))
            (rule "shift_paren_or" (formula "27") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
            (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
            (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
            (rule "allLeft" (formula "21") (inst "t=i_1_0"))
            (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
            (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "21") (term "0,0,1"))
            (rule "leq_literals" (formula "21") (term "0,1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "21"))
            (rule "qeq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
      (branch
         (rule "allRight" (formula "60") (inst "sk=i_0_0"))
         (rule "orRight" (formula "60"))
         (rule "notRight" (formula "61"))
         (rule "orRight" (formula "61"))
         (rule "inEqSimp_geqRight" (formula "62"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "62"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "charLiteral_to_int" (formula "32") (term "1,1,1,0,1,1,0"))
         (rule "add_literals" (formula "32") (term "1,1,0,1,1,0"))
         (rule "ex_pull_out3" (formula "28") (term "0"))
         (rule "cnf_rightDist" (formula "28") (term "0,0"))
         (rule "shift_paren_or" (formula "28") (term "1,0,0"))
         (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
         (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "28") (term "1,0,0,0"))
         (rule "commute_or" (formula "28") (term "0,0,0,0,0"))
         (rule "ex_pull_out3" (formula "27") (term "0"))
         (rule "cnf_rightDist" (formula "27") (term "0,0"))
         (rule "shift_paren_or" (formula "27") (term "1,0,0"))
         (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
         (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
         (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
         (rule "allLeft" (formula "22") (inst "t=i_0_0"))
         (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
         (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "0,0,1"))
         (rule "leq_literals" (formula "22") (term "0,1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
         (rule "qeq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch
      (rule "nnf_ex2all" (formula "60"))
      (rule "nnf_notAnd" (formula "1") (term "0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "1") (term "0"))
      (rule "commute_or" (formula "1") (term "0,0"))
      (rule "commute_and_2" (formula "26") (term "0,1,0"))
      (rule "commute_and_2" (formula "25") (term "0,1,0"))
      (rule "shift_paren_or" (formula "11") (term "0,0,0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0,0"))
      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "12") (term "0,0"))
      (rule "commute_or_2" (formula "11") (term "0,0,0"))
      (rule "commute_or_2" (formula "12") (term "0,0,0"))
      (rule "commute_or" (formula "11") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_or_subsumption1" (formula "11") (term "0,0,0"))
      (rule "qeq_literals" (formula "11") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "commute_or" (formula "12") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_or_subsumption1" (formula "12") (term "0,0,0"))
      (rule "qeq_literals" (formula "12") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "charLiteral_to_int" (formula "30") (term "1,1,1,0,1,1,0"))
      (rule "add_literals" (formula "30") (term "1,1,0,1,1,0"))
      (rule "ex_pull_out3" (formula "26") (term "0"))
      (rule "cnf_rightDist" (formula "26") (term "0,0"))
      (rule "shift_paren_or" (formula "26") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
      (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
      (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
      (rule "ex_pull_out3" (formula "25") (term "0"))
      (rule "cnf_rightDist" (formula "25") (term "0,0"))
      (rule "shift_paren_or" (formula "25") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
      (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
      (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
      (rule "ex_pull_out3" (formula "30") (term "1,0"))
      (rule "cnf_rightDist" (formula "30") (term "0,1,0"))
      (rule "commute_or" (formula "30") (term "1,0,1,0"))
      (rule "cnf_rightDist" (formula "30") (term "0,0,1,0"))
      (rule "commute_or" (formula "30") (term "1,0,0,1,0"))
      (rule "allLeft" (formula "1") (inst "t=i_1"))
      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
      (rule "qeq_literals" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
