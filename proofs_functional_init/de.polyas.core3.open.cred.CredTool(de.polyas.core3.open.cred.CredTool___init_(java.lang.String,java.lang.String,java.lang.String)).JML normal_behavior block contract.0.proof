\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Feb 09 23:35:42 CET 2020
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../../../home/flo/git/polyas-core3-open-cred/boot";

\javaSource "../../../../../../home/flo/git/polyas-core3-open-cred/src";

\proofObligation "#Proof Obligation Settings
#Sun Feb 09 23:35:42 CET 2020
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:<init>(java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior block contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:<init>(java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior block contract.0
class=de.uka.ilkd.key.proof.init.FunctionalBlockContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))

(autoModeTime "35742")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self_1464,anonOut_heap,heap_Before_METHOD,savedHeap_Before_METHOD,exc#1,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f,anonIn_heap"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "exc#1_1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "activeUseStaticFieldWriteAccess" (formula "9") (term "1") (inst "#v0=s"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "s"))
(rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "compound_addition_2" (formula "9") (term "1") (inst "#v1=l") (inst "#v0=s_1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "s_1"))
(rule "stringAssignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
 (builtin "One Step Simplification" (formula "1"))
 (builtin "One Step Simplification" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "l"))
(rule "assignment_read_attribute_this" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "replaceKnownSelect_taclet_0" (formula "11") (term "0,1,0"))
(rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "11") (term "0,1,0"))
(rule "stringConcatObjectRight" (formula "11") (term "1") (inst "sk=sk_0"))
(branch "l not null"
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
   (rule "false_right" (formula "11"))
   (rule "compound_addition_2" (formula "11") (term "1") (inst "#v1=s_3") (inst "#v0=s_2"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "s_2"))
   (rule "assignment" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "s_3"))
    (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_toString,result_1407,exc_1855,heapAfter_toString,anon_heap_toString") (contract "java.util.LinkedList[java.util.LinkedList::toString()].JML normal_behavior operation contract.0"))
   (branch "Post (toString)"
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "13"))
      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "stringConcat" (formula "17") (term "1") (inst "sk=sk_1"))
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
      (rule "assignment_write_static_attribute" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "eqSeqConcat" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "lenOfSeqConcat" (formula "2") (term "2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "lenOfSeqConcat" (formula "1") (term "0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "2,0"))
      (rule "add_literals" (formula "2") (term "0,2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "add_literals" (formula "3") (term "1,1,0"))
      (rule "add_literals" (formula "3") (term "1,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,2,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "add_literals" (formula "2") (term "1,2,0"))
      (rule "add_literals" (formula "2") (term "2,0"))
      (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "add_literals" (formula "1") (term "1,0,1"))
      (rule "add_literals" (formula "1") (term "0,1"))
      (rule "lenOfSeqSubEQ" (formula "1") (term "1,1") (ifseqformula "3"))
      (rule "polySimp_homoEq" (formula "1"))
      (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
      (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
      (rule "polySimp_sepPosMonomial" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_homoEq" (formula "1") (term "1"))
      (rule "times_zero_2" (formula "1") (term "1,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,1"))
      (rule "polySimp_sepPosMonomial" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0"))
      (rule "eqSeqConcat" (formula "2"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "lenOfSeqSub" (formula "4") (term "2,0"))
      (rule "sub_literals" (formula "4") (term "1,2,0"))
      (rule "less_literals" (formula "4") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,1"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "1"))
      (rule "add_literals" (formula "2") (term "0,1"))
      (rule "eqSeqSingleton" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "lenOfSeqSub" (formula "2") (term "0"))
      (rule "less_literals" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "sub_literals" (formula "2") (term "0"))
      (rule "polySimp_homoEq" (formula "2"))
      (rule "mul_literals" (formula "2") (term "1,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqSub" (formula "3") (term "0"))
      (rule "sub_literals" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "equal_literals" (formula "3") (term "1"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "less_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "2") (term "1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "add_literals" (formula "2") (term "1,0"))
      (rule "add_literals" (formula "2") (term "0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "getOfSeqSub" (formula "2") (term "0"))
      (rule "castDel" (formula "2") (term "2,0"))
      (rule "sub_literals" (formula "2") (term "1,1,0,0"))
      (rule "leq_literals" (formula "2") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "add_zero_left" (formula "2") (term "1,1,0"))
      (rule "less_literals" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "eqSeqConcat" (formula "3"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "lenOfSeqSub" (formula "5") (term "2,0"))
      (rule "sub_literals" (formula "5") (term "1,2,0"))
      (rule "less_literals" (formula "5") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "lenOfSeqSub" (formula "3") (term "0"))
      (rule "less_literals" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "sub_literals" (formula "3") (term "0"))
      (rule "polySimp_homoEq" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "eqSeqSingleton" (formula "4"))
      (rule "andLeft" (formula "4"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqSub" (formula "4") (term "0"))
      (rule "sub_literals" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "less_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "3") (term "1,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "add_literals" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "getOfSeqSub" (formula "2") (term "0"))
      (rule "castDel" (formula "2") (term "2,0"))
      (rule "add_zero_left" (formula "2") (term "1,1,0"))
      (rule "leq_literals" (formula "2") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "sub_literals" (formula "2") (term "1,0,0"))
      (rule "less_literals" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "getOfSeqSub" (formula "3") (term "0"))
      (rule "castDel" (formula "3") (term "2,0"))
      (rule "sub_literals" (formula "3") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "3") (term "1,1,0"))
      (rule "leq_literals" (formula "3") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "less_literals" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "eqSeqConcat" (formula "4"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "andLeft" (formula "4"))
      (rule "andLeft" (formula "4"))
      (rule "lenOfSeqSub" (formula "6") (term "2,0"))
      (rule "less_literals" (formula "6") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "sub_literals" (formula "6") (term "2,0"))
      (rule "eqSeqSingleton" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "lenOfSeqSub" (formula "4") (term "0"))
      (rule "less_literals" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "sub_literals" (formula "4") (term "0"))
      (rule "polySimp_homoEq" (formula "4"))
      (rule "mul_literals" (formula "4") (term "1,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqSub" (formula "5") (term "0"))
      (rule "less_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "sub_literals" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "4") (term "1,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "add_literals" (formula "4") (term "1,0"))
      (rule "add_literals" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "getOfSeqSub" (formula "3") (term "0"))
      (rule "castDel" (formula "3") (term "2,0"))
      (rule "add_zero_left" (formula "3") (term "1,1,0"))
      (rule "sub_literals" (formula "3") (term "1,1,0,0"))
      (rule "leq_literals" (formula "3") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "less_literals" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "getOfSeqSub" (formula "4") (term "0"))
      (rule "castDel" (formula "4") (term "2,0"))
      (rule "leq_literals" (formula "4") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "add_zero_left" (formula "4") (term "1,1,0"))
      (rule "sub_literals" (formula "4") (term "1,0,0"))
      (rule "less_literals" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "eqSeqConcat" (formula "5"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "lenOfSeqSub" (formula "7") (term "2,0"))
      (rule "less_literals" (formula "7") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "sub_literals" (formula "7") (term "2,0"))
      (rule "lenOfSeqSub" (formula "5") (term "0"))
      (rule "sub_literals" (formula "5") (term "1,0"))
      (rule "less_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_homoEq" (formula "5"))
      (rule "mul_literals" (formula "5") (term "1,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "eqSeqSingleton" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqSub" (formula "6") (term "0"))
      (rule "sub_literals" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "less_literals" (formula "6") (term "0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "5") (term "1,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "add_literals" (formula "5") (term "1,0"))
      (rule "add_literals" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "getOfSeqSub" (formula "3") (term "0"))
      (rule "castDel" (formula "3") (term "2,0"))
      (rule "add_zero_right" (formula "3") (term "1,1,0"))
      (rule "sub_literals" (formula "3") (term "1,1,0,0"))
      (rule "leq_literals" (formula "3") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "less_literals" (formula "3") (term "0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "getOfSeqSub" (formula "4") (term "0"))
      (rule "castDel" (formula "4") (term "2,0"))
      (rule "sub_literals" (formula "4") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "4") (term "1,1,0"))
      (rule "leq_literals" (formula "4") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "less_literals" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "getOfSeqSub" (formula "5") (term "0"))
      (rule "castDel" (formula "5") (term "2,0"))
      (rule "leq_literals" (formula "5") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "add_zero_left" (formula "5") (term "1,1,0"))
      (rule "sub_literals" (formula "5") (term "1,0,0"))
      (rule "less_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "eqSeqConcat" (formula "6"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "lenOfSeqSub" (formula "8") (term "2,0"))
      (rule "sub_literals" (formula "8") (term "1,2,0"))
      (rule "less_literals" (formula "8") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,1"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "1"))
      (rule "add_literals" (formula "6") (term "0,1"))
      (rule "eqSeqSingleton" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "lenOfSeqSub" (formula "6") (term "0"))
      (rule "less_literals" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "sub_literals" (formula "6") (term "0"))
      (rule "polySimp_homoEq" (formula "6"))
      (rule "mul_literals" (formula "6") (term "1,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqSub" (formula "7") (term "0"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "sub_literals" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "6") (term "1,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "add_literals" (formula "6") (term "1,0"))
      (rule "add_literals" (formula "6") (term "0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "getOfSeqSub" (formula "4") (term "0"))
      (rule "castDel" (formula "4") (term "2,0"))
      (rule "sub_literals" (formula "4") (term "1,1,0,0"))
      (rule "leq_literals" (formula "4") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "add_literals" (formula "4") (term "1,1,0"))
      (rule "less_literals" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "getOfSeqSub" (formula "5") (term "0"))
      (rule "castDel" (formula "5") (term "2,0"))
      (rule "add_zero_left" (formula "5") (term "1,1,0"))
      (rule "leq_literals" (formula "5") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "sub_literals" (formula "5") (term "1,0,0"))
      (rule "less_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "getOfSeqSub" (formula "6") (term "0"))
      (rule "castDel" (formula "6") (term "2,0"))
      (rule "add_zero_left" (formula "6") (term "1,1,0"))
      (rule "sub_literals" (formula "6") (term "1,1,0,0"))
      (rule "leq_literals" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "less_literals" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "eqSeqConcat" (formula "7"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "lenOfSeqSub" (formula "9") (term "2,0"))
      (rule "less_literals" (formula "9") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "2,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "1"))
      (rule "add_literals" (formula "7") (term "0,1"))
      (rule "eqSeqSingleton" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "lenOfSeqSub" (formula "7") (term "0"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "sub_literals" (formula "7") (term "0"))
      (rule "polySimp_homoEq" (formula "7"))
      (rule "mul_literals" (formula "7") (term "1,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqSub" (formula "8") (term "0"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "sub_literals" (formula "8") (term "0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "add_literals" (formula "7") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "7") (term "1,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "add_literals" (formula "7") (term "1,0"))
      (rule "add_literals" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "getOfSeqSub" (formula "4") (term "0"))
      (rule "castDel" (formula "4") (term "2,0"))
      (rule "sub_literals" (formula "4") (term "1,1,0,0"))
      (rule "leq_literals" (formula "4") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "add_zero_right" (formula "4") (term "1,1,0"))
      (rule "less_literals" (formula "4") (term "0,0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "getOfSeqSub" (formula "5") (term "0"))
      (rule "castDel" (formula "5") (term "2,0"))
      (rule "leq_literals" (formula "5") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "add_literals" (formula "5") (term "1,1,0"))
      (rule "sub_literals" (formula "5") (term "1,0,0"))
      (rule "less_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "getOfSeqSub" (formula "6") (term "0"))
      (rule "castDel" (formula "6") (term "2,0"))
      (rule "leq_literals" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "add_zero_left" (formula "6") (term "1,1,0"))
      (rule "sub_literals" (formula "6") (term "1,0,0"))
      (rule "less_literals" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "getOfSeqSub" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "sub_literals" (formula "7") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "7") (term "1,1,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "eqSeqConcat" (formula "8"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "lenOfSeqSub" (formula "10") (term "2,0"))
      (rule "less_literals" (formula "10") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "sub_literals" (formula "10") (term "2,0"))
      (rule "lenOfSeqSub" (formula "8") (term "0"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "sub_literals" (formula "8") (term "0"))
      (rule "polySimp_homoEq" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "eqSeqSingleton" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqSub" (formula "9") (term "0"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "8") (term "1,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "add_literals" (formula "8") (term "1,0"))
      (rule "add_literals" (formula "8") (term "0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "getOfSeqSub" (formula "5") (term "0"))
      (rule "castDel" (formula "5") (term "2,0"))
      (rule "add_literals" (formula "5") (term "1,1,0"))
      (rule "sub_literals" (formula "5") (term "1,1,0,0"))
      (rule "leq_literals" (formula "5") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "less_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "getOfSeqSub" (formula "6") (term "0"))
      (rule "castDel" (formula "6") (term "2,0"))
      (rule "add_literals" (formula "6") (term "1,1,0"))
      (rule "sub_literals" (formula "6") (term "1,1,0,0"))
      (rule "leq_literals" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "less_literals" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "getOfSeqSub" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "add_zero_left" (formula "7") (term "1,1,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "sub_literals" (formula "7") (term "1,0,0"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "add_zero_left" (formula "8") (term "1,1,0"))
      (rule "sub_literals" (formula "8") (term "1,1,0,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "eqSeqConcat" (formula "9"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "lenOfSeqSub" (formula "11") (term "2,0"))
      (rule "less_literals" (formula "11") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "2,0"))
      (rule "lenOfSeqSub" (formula "9") (term "0"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "0"))
      (rule "polySimp_homoEq" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "eqSeqSingleton" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqSub" (formula "10") (term "0"))
      (rule "sub_literals" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "add_literals" (formula "9") (term "1,0"))
      (rule "add_literals" (formula "9") (term "0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "getOfSeqSub" (formula "5") (term "0"))
      (rule "castDel" (formula "5") (term "2,0"))
      (rule "sub_literals" (formula "5") (term "1,1,0,0"))
      (rule "add_zero_right" (formula "5") (term "1,1,0"))
      (rule "leq_literals" (formula "5") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "less_literals" (formula "5") (term "0,0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "getOfSeqSub" (formula "6") (term "0"))
      (rule "castDel" (formula "6") (term "2,0"))
      (rule "leq_literals" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "add_literals" (formula "6") (term "1,1,0"))
      (rule "sub_literals" (formula "6") (term "1,0,0"))
      (rule "less_literals" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "getOfSeqSub" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "sub_literals" (formula "7") (term "1,1,0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "add_zero_left" (formula "8") (term "1,1,0"))
      (rule "sub_literals" (formula "8") (term "1,1,0,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "add_zero_left" (formula "9") (term "1,1,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "eqSeqConcat" (formula "10"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "lenOfSeqSub" (formula "12") (term "2,0"))
      (rule "sub_literals" (formula "12") (term "1,2,0"))
      (rule "less_literals" (formula "12") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "lenOfSeqSub" (formula "10") (term "0"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "sub_literals" (formula "10") (term "0"))
      (rule "polySimp_homoEq" (formula "10"))
      (rule "mul_literals" (formula "10") (term "1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "eqSeqSingleton" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqSub" (formula "11") (term "0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "10") (term "1,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "add_literals" (formula "10") (term "1,0"))
      (rule "add_literals" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "getOfSeqSub" (formula "6") (term "0"))
      (rule "castDel" (formula "6") (term "2,0"))
      (rule "add_literals" (formula "6") (term "1,1,0"))
      (rule "leq_literals" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "sub_literals" (formula "6") (term "1,0,0"))
      (rule "less_literals" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "getOfSeqSub" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "sub_literals" (formula "7") (term "1,1,0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "add_literals" (formula "8") (term "1,1,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "sub_literals" (formula "8") (term "1,0,0"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "add_zero_left" (formula "9") (term "1,0"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "add_zero_left" (formula "10") (term "1,1,0"))
      (rule "sub_literals" (formula "10") (term "1,0,0"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "eqSeqConcat" (formula "11"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "lenOfSeqSub" (formula "13") (term "2,0"))
      (rule "less_literals" (formula "13") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "2,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "1"))
      (rule "add_literals" (formula "11") (term "0,1"))
      (rule "eqSeqSingleton" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "lenOfSeqSub" (formula "11") (term "0"))
      (rule "sub_literals" (formula "11") (term "1,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_homoEq" (formula "11"))
      (rule "mul_literals" (formula "11") (term "1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqSub" (formula "12") (term "0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "11") (term "1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_literals" (formula "11") (term "1,0"))
      (rule "add_literals" (formula "11") (term "0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "getOfSeqSub" (formula "6") (term "0"))
      (rule "castDel" (formula "6") (term "2,0"))
      (rule "sub_literals" (formula "6") (term "1,1,0,0"))
      (rule "add_zero_right" (formula "6") (term "1,1,0"))
      (rule "leq_literals" (formula "6") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "less_literals" (formula "6") (term "0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "getOfSeqSub" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "sub_literals" (formula "7") (term "1,1,0,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "add_literals" (formula "7") (term "1,0"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "add_literals" (formula "8") (term "1,1,0"))
      (rule "sub_literals" (formula "8") (term "1,1,0,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "add_literals" (formula "9") (term "1,0"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "sub_literals" (formula "10") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "1,1,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "sub_literals" (formula "11") (term "1,1,0,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_zero_left" (formula "11") (term "1,1,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "eqSeqConcat" (formula "12"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "lenOfSeqSub" (formula "14") (term "2,0"))
      (rule "less_literals" (formula "14") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "sub_literals" (formula "14") (term "2,0"))
      (rule "eqSeqSingleton" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "lenOfSeqSub" (formula "12") (term "0"))
      (rule "sub_literals" (formula "12") (term "1,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_homoEq" (formula "12"))
      (rule "mul_literals" (formula "12") (term "1,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqSub" (formula "13") (term "0"))
      (rule "sub_literals" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "less_literals" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "polySimp_addAssoc" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "12") (term "1,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_literals" (formula "12") (term "1,0"))
      (rule "add_literals" (formula "12") (term "0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "getOfSeqSub" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "sub_literals" (formula "7") (term "1,1,0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "sub_literals" (formula "8") (term "1,1,0,0"))
      (rule "add_literals" (formula "8") (term "1,1,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "add_literals" (formula "9") (term "1,1,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "add_literals" (formula "10") (term "1,1,0"))
      (rule "sub_literals" (formula "10") (term "1,0,0"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_zero_left" (formula "11") (term "1,1,0"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "sub_literals" (formula "12") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "1,1,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "tryEmpty" (formula "31") (term "1"))
      (rule "blockEmptyLabel" (formula "31") (term "1"))
      (rule "blockEmpty" (formula "31") (term "1"))
      (rule "getOfSeqSub" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "add_zero_right" (formula "7") (term "1,1,0"))
      (rule "sub_literals" (formula "7") (term "1,1,0,0"))
      (rule "leq_literals" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "less_literals" (formula "7") (term "0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "eqSeqConcat" (formula "13"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "lenOfSeqSub" (formula "15") (term "2,0"))
      (rule "sub_literals" (formula "15") (term "1,2,0"))
      (rule "less_literals" (formula "15") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "lenOfSeqSub" (formula "13") (term "0"))
      (rule "sub_literals" (formula "13") (term "1,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_homoEq" (formula "13"))
      (rule "mul_literals" (formula "13") (term "1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "eqSeqSingleton" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqSub" (formula "14") (term "0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "sub_literals" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "13") (term "1,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,0"))
      (rule "add_literals" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "sub_literals" (formula "8") (term "1,1,0,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "add_literals" (formula "8") (term "1,1,0"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "sub_literals" (formula "10") (term "1,1,0,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "add_literals" (formula "10") (term "1,0"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "sub_literals" (formula "12") (term "1,1,0,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_zero_left" (formula "12") (term "1,1,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "sub_literals" (formula "13") (term "1,1,0,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_zero_left" (formula "13") (term "1,1,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "add_literals" (formula "8") (term "1,1,0"))
      (rule "sub_literals" (formula "8") (term "1,1,0,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "add_literals" (formula "9") (term "1,1,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "1,0,0"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "eqSeqConcat" (formula "14"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "lenOfSeqSub" (formula "16") (term "2,0"))
      (rule "sub_literals" (formula "16") (term "1,2,0"))
      (rule "less_literals" (formula "16") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "eqSeqSingleton" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "1"))
      (rule "add_literals" (formula "14") (term "0,1"))
      (rule "lenOfSeqSub" (formula "15") (term "0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "sub_literals" (formula "15") (term "0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "lenOfSeqSub" (formula "14") (term "0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "sub_literals" (formula "14") (term "0"))
      (rule "polySimp_homoEq" (formula "14"))
      (rule "mul_literals" (formula "14") (term "1,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "14") (term "0"))
      (rule "add_literals" (formula "14") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "14") (term "1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_literals" (formula "14") (term "1,0"))
      (rule "add_literals" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "add_literals" (formula "10") (term "1,1,0"))
      (rule "sub_literals" (formula "10") (term "1,0,0"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "1,0,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "add_zero_left" (formula "13") (term "1,1,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "8") (term "0"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "add_zero_right" (formula "8") (term "1,1,0"))
      (rule "sub_literals" (formula "8") (term "1,1,0,0"))
      (rule "leq_literals" (formula "8") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "less_literals" (formula "8") (term "0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "add_literals" (formula "9") (term "1,1,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "commute_or" (formula "1"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "14") (term "1,1,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "sub_literals" (formula "10") (term "1,1,0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "eqSeqConcat" (formula "15"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "lenOfSeqSub" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,2,0"))
      (rule "less_literals" (formula "17") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "lenOfSeqSub" (formula "15") (term "0"))
      (rule "sub_literals" (formula "15") (term "1,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_homoEq" (formula "15"))
      (rule "mul_literals" (formula "15") (term "1,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "eqSeqSingleton" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqSub" (formula "16") (term "0"))
      (rule "sub_literals" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "less_literals" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "15") (term "1,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "add_literals" (formula "15") (term "1,0"))
      (rule "add_literals" (formula "15") (term "0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "sub_literals" (formula "12") (term "1,1,0,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "add_literals" (formula "9") (term "1,1,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_zero_left" (formula "14") (term "1,1,0"))
      (rule "sub_literals" (formula "14") (term "1,0,0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "add_literals" (formula "10") (term "1,1,0"))
      (rule "sub_literals" (formula "10") (term "1,1,0,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "add_zero_left" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "sub_literals" (formula "15") (term "1,0,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "sub_literals" (formula "12") (term "1,1,0,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "sub_literals" (formula "9") (term "1,1,0,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0"))
      (rule "leq_literals" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "less_literals" (formula "9") (term "0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "eqSeqConcat" (formula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "lenOfSeqSub" (formula "18") (term "2,0"))
      (rule "less_literals" (formula "18") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "2,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "1"))
      (rule "add_literals" (formula "16") (term "0,1"))
      (rule "eqSeqSingleton" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "lenOfSeqSub" (formula "16") (term "0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "sub_literals" (formula "16") (term "0"))
      (rule "polySimp_homoEq" (formula "16"))
      (rule "mul_literals" (formula "16") (term "1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqSub" (formula "17") (term "0"))
      (rule "sub_literals" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_literals" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_addAssoc" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "16") (term "1,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,0"))
      (rule "add_literals" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "sub_literals" (formula "14") (term "1,0,0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "add_literals" (formula "10") (term "1,1,0"))
      (rule "sub_literals" (formula "10") (term "1,1,0,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "sub_literals" (formula "12") (term "1,0,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "lenNonNegative" (formula "18") (term "2,0"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
      (rule "andLeft" (formula "19"))
      (rule "lenOfSeqSub" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "20") (term "1,1,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "20") (term "1,1,1,0,0"))
      (rule "lenOfSeqSub" (formula "19") (term "0"))
      (rule "polySimp_elimSub" (formula "19") (term "1,0"))
      (rule "mul_literals" (formula "19") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "1,0"))
      (rule "lenOfSeqSubEQ" (formula "19") (term "1") (ifseqformula "21"))
      (rule "eqSymm" (formula "19"))
      (rule "polySimp_elimSub" (formula "19") (term "1,0"))
      (rule "mul_literals" (formula "19") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_zero_left" (formula "16") (term "1,1,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_literals" (formula "14") (term "1,0"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "sub_literals" (formula "10") (term "1,1,0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "sub_literals" (formula "11") (term "1,1,0,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "eqSeqConcat" (formula "17"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "lenOfSeqSub" (formula "19") (term "2,0"))
      (rule "less_literals" (formula "19") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "2,0"))
      (rule "eqSeqSingleton" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "1"))
      (rule "add_literals" (formula "17") (term "0,1"))
      (rule "lenOfSeqSub" (formula "18") (term "0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "true_left" (formula "18"))
      (rule "lenOfSeqSub" (formula "17") (term "0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "sub_literals" (formula "17") (term "0"))
      (rule "polySimp_homoEq" (formula "17"))
      (rule "mul_literals" (formula "17") (term "1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "17") (term "1,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,0"))
      (rule "add_literals" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "sub_literals" (formula "15") (term "1,0,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "charLiteral_to_int" (formula "2") (term "1"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "sub_literals" (formula "12") (term "1,0,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "sub_literals" (formula "13") (term "1,1,0,0"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_zero_left" (formula "16") (term "1,0"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,0"))
      (rule "sub_literals" (formula "10") (term "1,1,0,0"))
      (rule "leq_literals" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "less_literals" (formula "10") (term "0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "sub_literals" (formula "11") (term "1,1,0,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_literals" (formula "11") (term "1,0"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_zero_left" (formula "17") (term "1,1,0"))
      (rule "sub_literals" (formula "17") (term "1,0,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "add_literals" (formula "15") (term "1,0"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "sub_literals" (formula "12") (term "1,1,0,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "eqSeqConcat" (formula "18"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "lenOfSeqSub" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,2,0"))
      (rule "less_literals" (formula "20") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "lenOfSeqSub" (formula "18") (term "0"))
      (rule "sub_literals" (formula "18") (term "1,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_homoEq" (formula "18"))
      (rule "mul_literals" (formula "18") (term "1,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "eqSeqSingleton" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqSub" (formula "19") (term "0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "polySimp_addAssoc" (formula "18") (term "0"))
      (rule "add_literals" (formula "18") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "18") (term "1,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,0"))
      (rule "add_literals" (formula "18") (term "0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "true_left" (formula "18"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "sub_literals" (formula "14") (term "1,0,0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "seqGetAlphaCast" (formula "2") (term "0"))
      (rule "castDel" (formula "2") (term "0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_zero_left" (formula "17") (term "1,0"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "sub_literals" (formula "15") (term "1,0,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "sub_literals" (formula "12") (term "1,0,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "add_zero_left" (formula "18") (term "1,1,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "charLiteral_to_int" (formula "3") (term "1"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "2,0"))
      (rule "leq_literals" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "add_zero_right" (formula "11") (term "1,1,0"))
      (rule "sub_literals" (formula "11") (term "1,0,0"))
      (rule "less_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "eqSeqConcat" (formula "19"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "lenOfSeqSub" (formula "21") (term "2,0"))
      (rule "less_literals" (formula "21") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "2,0"))
      (rule "eqSeqSingleton" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "lenOfSeqSub" (formula "19") (term "0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "0"))
      (rule "polySimp_homoEq" (formula "19"))
      (rule "mul_literals" (formula "19") (term "1,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqSub" (formula "20") (term "0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "sub_literals" (formula "20") (term "0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "true_left" (formula "20"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "add_literals" (formula "19") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "19") (term "1,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_literals" (formula "19") (term "1,0"))
      (rule "add_literals" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "sub_literals" (formula "12") (term "1,0,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,1,0,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "add_zero_left" (formula "18") (term "1,1,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "add_zero_left" (formula "19") (term "1,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "seqGetAlphaCast" (formula "3") (term "0"))
      (rule "castDel" (formula "3") (term "0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "add_literals" (formula "12") (term "1,1,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "1,0,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "eqSeqConcat" (formula "20"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "lenOfSeqSub" (formula "22") (term "2,0"))
      (rule "sub_literals" (formula "22") (term "1,2,0"))
      (rule "less_literals" (formula "22") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "1"))
      (rule "add_literals" (formula "20") (term "0,1"))
      (rule "eqSeqSingleton" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "lenOfSeqSub" (formula "20") (term "0"))
      (rule "sub_literals" (formula "20") (term "1,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_homoEq" (formula "20"))
      (rule "mul_literals" (formula "20") (term "1,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqSub" (formula "21") (term "0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "20") (term "1,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "add_literals" (formula "20") (term "1,0"))
      (rule "add_literals" (formula "20") (term "0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "true_left" (formula "20"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,0"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "sub_literals" (formula "15") (term "1,0,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_zero_left" (formula "19") (term "1,1,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "charLiteral_to_int" (formula "4") (term "1"))
      (rule "getOfSeqSub" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "2,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "add_zero_right" (formula "12") (term "1,1,0"))
      (rule "sub_literals" (formula "12") (term "1,0,0"))
      (rule "less_literals" (formula "12") (term "0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "sub_literals" (formula "13") (term "1,1,0,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "sub_literals" (formula "18") (term "1,1,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,0"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_or_weaken1" (formula "1"))
      (rule "add_literals" (formula "1") (term "1,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
      (rule "leq_literals" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_zero_left" (formula "20") (term "1,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "sub_literals" (formula "20") (term "1,0,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "sub_literals" (formula "17") (term "1,0,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "sub_literals" (formula "15") (term "1,0,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,0,0"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "eqSeqConcat" (formula "21"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "lenOfSeqSub" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,2,0"))
      (rule "less_literals" (formula "23") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "1"))
      (rule "add_literals" (formula "21") (term "0,1"))
      (rule "eqSeqSingleton" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "lenOfSeqSub" (formula "21") (term "0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "0"))
      (rule "polySimp_homoEq" (formula "21"))
      (rule "mul_literals" (formula "21") (term "1,0"))
      (rule "polySimp_addComm1" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "0,0"))
      (rule "lenOfSeqSub" (formula "22") (term "0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "sub_literals" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "21") (term "1,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,0"))
      (rule "add_literals" (formula "21") (term "0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "sub_literals" (formula "18") (term "1,1,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,0"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_literals" (formula "14") (term "1,0"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_zero_left" (formula "20") (term "1,1,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,0"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "seqGetAlphaCast" (formula "4") (term "0"))
      (rule "castDel" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "getOfSeqSub" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "2,0"))
      (rule "add_zero_right" (formula "13") (term "1,1,0"))
      (rule "sub_literals" (formula "13") (term "1,1,0,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "less_literals" (formula "13") (term "0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_zero_left" (formula "21") (term "1,1,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "1,0,0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "charLiteral_to_int" (formula "5") (term "1"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "sub_literals" (formula "20") (term "1,0,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "sub_literals" (formula "17") (term "1,0,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "sub_literals" (formula "15") (term "1,0,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "eqSeqConcat" (formula "22"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "lenOfSeqSub" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,2,0"))
      (rule "less_literals" (formula "24") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "eqSeqSingleton" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "lenOfSeqConcat" (formula "22") (term "1,1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "polySimp_addAssoc" (formula "22") (term "1"))
      (rule "add_literals" (formula "22") (term "0,1"))
      (rule "lenOfSeqSub" (formula "23") (term "0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "sub_literals" (formula "23") (term "0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "lenOfSeqSub" (formula "22") (term "0"))
      (rule "sub_literals" (formula "22") (term "1,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "polySimp_homoEq" (formula "22"))
      (rule "mul_literals" (formula "22") (term "1,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "polySimp_addAssoc" (formula "22") (term "0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "polySimp_addAssoc" (formula "22") (term "0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "polySimp_addAssoc" (formula "22") (term "0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "polySimp_addAssoc" (formula "22") (term "0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "polySimp_addAssoc" (formula "22") (term "0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "22") (term "1,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_literals" (formula "22") (term "1,0"))
      (rule "add_literals" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_zero_left" (formula "21") (term "1,1,0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_literals" (formula "14") (term "1,1,0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "sub_literals" (formula "17") (term "1,0,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "sub_literals" (formula "15") (term "1,0,0"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_zero_left" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,0,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "1,0,0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "seqGetAlphaCast" (formula "5") (term "0"))
      (rule "castDel" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "getOfSeqSub" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "2,0"))
      (rule "sub_literals" (formula "14") (term "1,1,0,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "add_zero_right" (formula "14") (term "1,1,0"))
      (rule "less_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "eqSeqConcat" (formula "23"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "lenOfSeqSub" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,2,0"))
      (rule "less_literals" (formula "25") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "eqSeqSingleton" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "lenOfSeqConcat" (formula "23") (term "1,1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "polySimp_addAssoc" (formula "23") (term "1"))
      (rule "add_literals" (formula "23") (term "0,1"))
      (rule "lenOfSeqSub" (formula "24") (term "0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "sub_literals" (formula "24") (term "0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "lenOfSeqSub" (formula "23") (term "0"))
      (rule "sub_literals" (formula "23") (term "1,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "polySimp_homoEq" (formula "23"))
      (rule "mul_literals" (formula "23") (term "1,0"))
      (rule "polySimp_addComm1" (formula "23") (term "0"))
      (rule "add_literals" (formula "23") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "polySimp_addAssoc" (formula "23") (term "0"))
      (rule "add_literals" (formula "23") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "polySimp_addAssoc" (formula "23") (term "0"))
      (rule "add_literals" (formula "23") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "polySimp_addAssoc" (formula "23") (term "0"))
      (rule "add_literals" (formula "23") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "polySimp_addAssoc" (formula "23") (term "0"))
      (rule "add_literals" (formula "23") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "23") (term "1,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "add_literals" (formula "23") (term "1,0"))
      (rule "add_literals" (formula "23") (term "0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "sub_literals" (formula "17") (term "1,0,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_zero_left" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "charLiteral_to_int" (formula "6") (term "1"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "sub_literals" (formula "20") (term "1,0,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "add_zero_left" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,0,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "sub_literals" (formula "17") (term "1,0,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "add_literals" (formula "15") (term "1,1,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_literals" (formula "22") (term "1,0"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,0"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "eqSeqConcat" (formula "24"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "lenOfSeqSub" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,2,0"))
      (rule "less_literals" (formula "26") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "lenOfSeqConcat" (formula "24") (term "1,1"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "polySimp_addAssoc" (formula "24") (term "1"))
      (rule "add_literals" (formula "24") (term "0,1"))
      (rule "eqSeqSingleton" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "lenOfSeqSub" (formula "24") (term "0"))
      (rule "sub_literals" (formula "24") (term "1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "polySimp_homoEq" (formula "24"))
      (rule "mul_literals" (formula "24") (term "1,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0"))
      (rule "add_literals" (formula "24") (term "0,0"))
      (rule "lenOfSeqSub" (formula "25") (term "0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "sub_literals" (formula "25") (term "0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "polySimp_addAssoc" (formula "24") (term "0"))
      (rule "add_literals" (formula "24") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "polySimp_addAssoc" (formula "24") (term "0"))
      (rule "add_literals" (formula "24") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "polySimp_addAssoc" (formula "24") (term "0"))
      (rule "add_literals" (formula "24") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,0"))
      (rule "add_literals" (formula "24") (term "0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "add_zero_left" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,0,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "2,0"))
      (rule "sub_literals" (formula "15") (term "1,1,0,0"))
      (rule "add_zero_right" (formula "15") (term "1,1,0"))
      (rule "leq_literals" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_literals" (formula "15") (term "0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,0,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_literals" (formula "19") (term "1,0"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "1,0,0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "sub_literals" (formula "18") (term "1,1,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "methodCallEmpty" (formula "43") (term "1"))
      (rule "charLiteral_to_int" (formula "7") (term "1"))
      (rule "seqGetAlphaCast" (formula "6") (term "0"))
      (rule "castDel" (formula "6") (term "0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "24") (term "1,1,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "sub_literals" (formula "21") (term "1,0,0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "eqSeqConcat" (formula "25"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "lenOfSeqSub" (formula "27") (term "2,0"))
      (rule "less_literals" (formula "27") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "2,0"))
      (rule "lenOfSeqSub" (formula "25") (term "0"))
      (rule "sub_literals" (formula "25") (term "1,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_homoEq" (formula "25"))
      (rule "mul_literals" (formula "25") (term "1,0"))
      (rule "polySimp_addComm1" (formula "25") (term "0"))
      (rule "add_literals" (formula "25") (term "0,0"))
      (rule "eqSeqSingleton" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_addAssoc" (formula "25") (term "0"))
      (rule "add_literals" (formula "25") (term "0,0"))
      (rule "lenOfSeqSub" (formula "26") (term "0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "sub_literals" (formula "26") (term "0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "true_left" (formula "26"))
      (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_addAssoc" (formula "25") (term "0"))
      (rule "add_literals" (formula "25") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_addAssoc" (formula "25") (term "0"))
      (rule "add_literals" (formula "25") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "25") (term "1,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,0"))
      (rule "add_literals" (formula "25") (term "0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_literals" (formula "16") (term "1,1,0"))
      (rule "sub_literals" (formula "16") (term "1,0,0"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_zero_left" (formula "24") (term "1,1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "add_literals" (formula "20") (term "1,0"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "sub_literals" (formula "17") (term "1,1,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,0,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,0"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_zero_left" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "seqGetAlphaCast" (formula "7") (term "0"))
      (rule "castDel" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "getOfSeqSub" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "2,0"))
      (rule "sub_literals" (formula "16") (term "1,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "less_literals" (formula "16") (term "0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "add_zero_right" (formula "16") (term "1,0"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "add_literals" (formula "23") (term "1,0"))
      (rule "getOfSeqSub" (formula "17") (term "0"))
      (rule "castDel" (formula "17") (term "2,0"))
      (rule "leq_literals" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "add_literals" (formula "17") (term "1,1,0"))
      (rule "sub_literals" (formula "17") (term "1,0,0"))
      (rule "less_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "charLiteral_to_int" (formula "8") (term "1"))
      (rule "eqSeqConcat" (formula "26"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "lenOfSeqSub" (formula "28") (term "2,0"))
      (rule "less_literals" (formula "28") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "sub_literals" (formula "28") (term "2,0"))
      (rule "lenOfSeqConcat" (formula "26") (term "1,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "polySimp_addAssoc" (formula "26") (term "1"))
      (rule "add_literals" (formula "26") (term "0,1"))
      (rule "eqSeqSingleton" (formula "27"))
      (rule "andLeft" (formula "27"))
      (rule "lenOfSeqSub" (formula "26") (term "0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "sub_literals" (formula "26") (term "0"))
      (rule "polySimp_homoEq" (formula "26"))
      (rule "mul_literals" (formula "26") (term "1,0"))
      (rule "polySimp_addComm1" (formula "26") (term "0"))
      (rule "add_literals" (formula "26") (term "0,0"))
      (rule "lenOfSeqSub" (formula "27") (term "0"))
      (rule "sub_literals" (formula "27") (term "1,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "true_left" (formula "27"))
      (rule "lenOfSeqConcat" (formula "26") (term "1,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "polySimp_addAssoc" (formula "26") (term "0"))
      (rule "add_literals" (formula "26") (term "0,0"))
      (rule "lenOfSeqConcat" (formula "26") (term "1,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,0"))
      (rule "add_literals" (formula "26") (term "0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "true_left" (formula "26"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "add_zero_left" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "35"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "add_literals" (formula "18") (term "1,1,0"))
      (rule "sub_literals" (formula "18") (term "1,1,0,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "add_zero_left" (formula "27") (term "1,1,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "sub_literals" (formula "22") (term "1,0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,0"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "18") (term "0"))
      (rule "castDel" (formula "18") (term "2,0"))
      (rule "leq_literals" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "1,0,0"))
      (rule "add_zero_right" (formula "18") (term "1,1,0"))
      (rule "less_literals" (formula "18") (term "0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,0,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "eqSeqConcat" (formula "28"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "28"))
      (rule "lenOfSeqSub" (formula "30") (term "2,0"))
      (rule "sub_literals" (formula "30") (term "1,2,0"))
      (rule "less_literals" (formula "30") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "lenOfSeqConcat" (formula "28") (term "1,1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "polySimp_addAssoc" (formula "28") (term "1"))
      (rule "add_literals" (formula "28") (term "0,1"))
      (rule "eqSeqSingleton" (formula "29"))
      (rule "andLeft" (formula "29"))
      (rule "lenOfSeqSub" (formula "28") (term "0"))
      (rule "sub_literals" (formula "28") (term "1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "polySimp_homoEq" (formula "28"))
      (rule "mul_literals" (formula "28") (term "1,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0"))
      (rule "add_literals" (formula "28") (term "0,0"))
      (rule "lenOfSeqSub" (formula "29") (term "0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "lenOfSeqConcat" (formula "28") (term "1,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,0"))
      (rule "add_literals" (formula "28") (term "0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "true_left" (formula "28"))
      (rule "charLiteral_to_int" (formula "10") (term "1"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "seqGetAlphaCast" (formula "9") (term "0"))
      (rule "castDel" (formula "9") (term "0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "add_zero_left" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "sub_literals" (formula "22") (term "1,0,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "sub_literals" (formula "26") (term "1,0,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "1,0,0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_zero_left" (formula "28") (term "1,1,0"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_literals" (formula "19") (term "1,1,0"))
      (rule "sub_literals" (formula "19") (term "1,0,0"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "eqSeqConcat" (formula "29"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "andLeft" (formula "29"))
      (rule "andLeft" (formula "29"))
      (rule "lenOfSeqSub" (formula "31") (term "2,0"))
      (rule "less_literals" (formula "31") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "sub_literals" (formula "31") (term "2,0"))
      (rule "lenOfSeqConcat" (formula "29") (term "1,1"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "add_literals" (formula "29") (term "1,1"))
      (rule "add_literals" (formula "29") (term "1"))
      (rule "eqSeqSingleton" (formula "30"))
      (rule "andLeft" (formula "30"))
      (rule "lenOfSeqSub" (formula "29") (term "0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "lenOfSeqSub" (formula "29") (term "0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_zero_left" (formula "28") (term "1,0"))
      (rule "seqGetAlphaCast" (formula "10") (term "0"))
      (rule "castDel" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "add_literals" (formula "20") (term "1,0"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,0"))
      (rule "getOfSeqSub" (formula "19") (term "0"))
      (rule "castDel" (formula "19") (term "2,0"))
      (rule "sub_literals" (formula "19") (term "1,1,0,0"))
      (rule "leq_literals" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "less_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "add_zero_right" (formula "19") (term "1,0"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "add_zero_left" (formula "29") (term "1,1,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "charLiteral_to_int" (formula "11") (term "1"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,0"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "eqSeqConcat" (formula "30"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "add_literals" (formula "30") (term "1,0,0"))
      (rule "andLeft" (formula "30"))
      (rule "andLeft" (formula "30"))
      (rule "lenOfSeqSub" (formula "32") (term "2,0"))
      (rule "sub_literals" (formula "32") (term "1,2,0"))
      (rule "less_literals" (formula "32") (term "0,2,0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "eqSeqSingleton" (formula "31"))
      (rule "andLeft" (formula "31"))
      (rule "lenOfSeqSub" (formula "30") (term "0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "true_left" (formula "30"))
      (rule "eqSeqSingleton" (formula "32"))
      (rule "andLeft" (formula "32"))
      (rule "lenOfSeqSub" (formula "30") (term "0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "true_left" (formula "30"))
      (rule "lenOfSeqSub" (formula "31") (term "0"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "sub_literals" (formula "31") (term "0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_zero_left" (formula "29") (term "1,1,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "sub_literals" (formula "23") (term "1,0,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "sub_literals" (formula "20") (term "1,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_zero_left" (formula "30") (term "1,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "20") (term "0"))
      (rule "castDel" (formula "20") (term "2,0"))
      (rule "sub_literals" (formula "20") (term "1,1,0,0"))
      (rule "add_zero_right" (formula "20") (term "1,1,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "less_literals" (formula "20") (term "0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "seqGetAlphaCast" (formula "11") (term "0"))
      (rule "castDel" (formula "11") (term "0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "charLiteral_to_int" (formula "12") (term "1"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,0,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,0"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "add_zero_left" (formula "30") (term "1,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "sub_literals" (formula "26") (term "1,0,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "sub_literals" (formula "21") (term "1,0,0"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "sub_literals" (formula "23") (term "1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "seqGetAlphaCast" (formula "12") (term "0"))
      (rule "castDel" (formula "12") (term "0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,0,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "sub_literals" (formula "26") (term "1,0,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,0"))
      (rule "getOfSeqSub" (formula "21") (term "0"))
      (rule "castDel" (formula "21") (term "2,0"))
      (rule "add_literals" (formula "21") (term "1,1,0"))
      (rule "sub_literals" (formula "21") (term "1,1,0,0"))
      (rule "leq_literals" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "21") (term "0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "charLiteral_to_int" (formula "13") (term "1"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,0"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,0"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "sub_literals" (formula "23") (term "1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "add_literals" (formula "22") (term "1,1,0"))
      (rule "sub_literals" (formula "22") (term "1,1,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,0,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "22") (term "0"))
      (rule "castDel" (formula "22") (term "2,0"))
      (rule "leq_literals" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "sub_literals" (formula "22") (term "1,0,0"))
      (rule "add_zero_right" (formula "22") (term "1,1,0"))
      (rule "less_literals" (formula "22") (term "0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "seqGetAlphaCast" (formula "13") (term "0"))
      (rule "castDel" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "charLiteral_to_int" (formula "14") (term "1"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "add_literals" (formula "23") (term "1,1,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,0"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "23") (term "0"))
      (rule "castDel" (formula "23") (term "2,0"))
      (rule "add_zero_right" (formula "23") (term "1,1,0"))
      (rule "sub_literals" (formula "23") (term "1,1,0,0"))
      (rule "leq_literals" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "less_literals" (formula "23") (term "0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,0"))
      (rule "seqGetAlphaCast" (formula "14") (term "0"))
      (rule "castDel" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,0,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "add_literals" (formula "30") (term "1,0"))
      (rule "charLiteral_to_int" (formula "15") (term "1"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "sub_literals" (formula "31") (term "1,0,0"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,1,0"))
      (rule "sub_literals" (formula "24") (term "1,0,0"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "add_literals" (formula "24") (term "1,0"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "24") (term "0"))
      (rule "castDel" (formula "24") (term "2,0"))
      (rule "sub_literals" (formula "24") (term "1,1,0,0"))
      (rule "add_zero_right" (formula "24") (term "1,1,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "less_literals" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "seqGetAlphaCast" (formula "15") (term "0"))
      (rule "castDel" (formula "15") (term "0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "add_literals" (formula "29") (term "1,0"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,0"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_literals" (formula "25") (term "1,1,0"))
      (rule "sub_literals" (formula "25") (term "1,0,0"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "charLiteral_to_int" (formula "16") (term "1"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,0"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "emptyModality" (formula "49") (term "1"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "eqSymm" (formula "49") (term "1,0,0,1"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "25") (term "0"))
      (rule "castDel" (formula "25") (term "2,0"))
      (rule "sub_literals" (formula "25") (term "1,1,0,0"))
      (rule "leq_literals" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "less_literals" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "add_zero_right" (formula "25") (term "1,0"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "add_literals" (formula "31") (term "1,0"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "add_literals" (formula "27") (term "1,0"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_literals" (formula "26") (term "1,1,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "sub_literals" (formula "26") (term "1,0,0"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "pullOutSelect" (formula "49") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
      (rule "simplifySelectOfStore" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "48"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "allRight" (formula "49") (inst "sk=f_0"))
      (rule "allRight" (formula "49") (inst "sk=o_0"))
      (rule "orRight" (formula "49"))
      (rule "orRight" (formula "49"))
      (rule "seqGetAlphaCast" (formula "16") (term "0"))
      (rule "castDel" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "26") (term "0"))
      (rule "castDel" (formula "26") (term "2,0"))
      (rule "add_zero_right" (formula "26") (term "1,1,0"))
      (rule "sub_literals" (formula "26") (term "1,1,0,0"))
      (rule "leq_literals" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "less_literals" (formula "26") (term "0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "sub_literals" (formula "31") (term "1,0,0"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "charLiteral_to_int" (formula "17") (term "1"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "sub_literals" (formula "27") (term "1,1,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "sub_literals" (formula "30") (term "1,1,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "sub_literals" (formula "29") (term "1,0,0"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "sub_literals" (formula "28") (term "1,0,0"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "getOfSeqSub" (formula "27") (term "0"))
      (rule "castDel" (formula "27") (term "2,0"))
      (rule "add_literals" (formula "27") (term "1,1,0"))
      (rule "leq_literals" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "sub_literals" (formula "27") (term "1,0,0"))
      (rule "less_literals" (formula "27") (term "0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "getOfSeqSub" (formula "30") (term "0"))
      (rule "castDel" (formula "30") (term "2,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "sub_literals" (formula "30") (term "1,0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0"))
      (rule "less_literals" (formula "30") (term "0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "getOfSeqSub" (formula "31") (term "0"))
      (rule "castDel" (formula "31") (term "2,0"))
      (rule "sub_literals" (formula "31") (term "1,1,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "less_literals" (formula "31") (term "0,0"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "add_literals" (formula "31") (term "1,0"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_literals" (formula "29") (term "1,1,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "28") (term "0"))
      (rule "castDel" (formula "28") (term "2,0"))
      (rule "sub_literals" (formula "28") (term "1,1,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0"))
      (rule "leq_literals" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "less_literals" (formula "28") (term "0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "pullOutSelect" (formula "51") (term "1") (inst "selectSK=f_0_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=f_0_1"))
      (rule "simplifySelectOfStore" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "51"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "50"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqSub" (formula "29") (term "0"))
      (rule "castDel" (formula "29") (term "2,0"))
      (rule "add_zero_right" (formula "29") (term "1,1,0"))
      (rule "sub_literals" (formula "29") (term "1,1,0,0"))
      (rule "leq_literals" (formula "29") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "less_literals" (formula "29") (term "0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "getOfSeqSub" (formula "32") (term "0"))
      (rule "castDel" (formula "32") (term "2,0"))
      (rule "add_literals" (formula "32") (term "1,1,0"))
      (rule "sub_literals" (formula "32") (term "1,1,0,0"))
      (rule "leq_literals" (formula "32") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "less_literals" (formula "32") (term "0,0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "getOfSeqSub" (formula "33") (term "0"))
      (rule "castDel" (formula "33") (term "2,0"))
      (rule "sub_literals" (formula "33") (term "1,1,0,0"))
      (rule "leq_literals" (formula "33") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "less_literals" (formula "33") (term "0,0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "add_literals" (formula "33") (term "1,0"))
      (rule "cut_direct" (formula "38") (term "1"))
      (branch "CUT: self_1464.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
          (builtin "One Step Simplification" (formula "39"))
         (rule "true_left" (formula "39"))
         (rule "getOfSeqSub" (formula "31") (term "0"))
         (rule "castDel" (formula "31") (term "2,0"))
         (rule "add_literals" (formula "31") (term "1,1,0"))
         (rule "sub_literals" (formula "31") (term "1,1,0,0"))
         (rule "leq_literals" (formula "31") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "less_literals" (formula "31") (term "0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "getOfSeqSub" (formula "30") (term "0"))
         (rule "castDel" (formula "30") (term "2,0"))
         (rule "add_literals" (formula "30") (term "1,1,0"))
         (rule "leq_literals" (formula "30") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "sub_literals" (formula "30") (term "1,0,0"))
         (rule "less_literals" (formula "30") (term "0,0"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "cut_direct" (formula "35") (term "1"))
         (branch "CUT: strPool( 〈'H'〉 ∘ ( 〈'e'〉 ∘ ( 〈'a'〉 ∘ ( 〈'd'〉 ∘ ( 〈'e'〉 ∘ ( 〈'r'〉 ∘ ( 〈's'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'o'〉 ∘ ( 〈'u'〉 ∘ ( 〈'n'〉 ∘ ( 〈'd'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈'p'〉 ∘ ( 〈'u'〉 ∘ ( 〈't'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'i'〉 ∘ ( 〈'l'〉 ∘ ( 〈'e'〉 ∘ ( 〈':'〉 ∘ 〈' '〉)))))))))))))))))))))))))))).<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
             (builtin "One Step Simplification" (formula "36"))
            (rule "true_left" (formula "36"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "seqGetAlphaCast" (formula "19") (term "0"))
            (rule "castDel" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "add_literals" (formula "31") (term "1,0"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "charLiteral_to_int" (formula "20") (term "1"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "sub_literals" (formula "31") (term "1,0,0"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "add_zero_right" (formula "30") (term "1,1,0"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "cut_direct" (formula "45") (term "1"))
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE TRUE"
                (builtin "One Step Simplification" (formula "46"))
               (rule "true_left" (formula "46"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,0"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "add_zero_right" (formula "32") (term "1,1,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "51"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "52") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "false_right" (formula "53"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "closeTrue" (formula "53"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "notRight" (formula "53"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "false_right" (formula "52"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "seqGetAlphaCast" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "53"))
                     (rule "seqGetAlphaCast" (formula "33") (term "0"))
                     (rule "castDel" (formula "33") (term "0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "true_left" (formula "33"))
                     (rule "seqGetAlphaCast" (formula "34") (term "0"))
                     (rule "castDel" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "54") (ifseqformula "1"))
                        (rule "closeTrue" (formula "54"))
                     )
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                        (rule "close" (formula "54") (ifseqformula "2"))
                     )
                  )
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                     (rule "orRight" (formula "47"))
                     (rule "notRight" (formula "48"))
                     (rule "notRight" (formula "48"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "eqSymm" (formula "54"))
                     (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "41"))
                     (rule "eqSymm" (formula "53"))
                     (rule "applyEqRigid" (formula "3") (term "2,2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                     (rule "applyEq" (formula "53") (term "1") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "53"))
                     (rule "closeTrue" (formula "53"))
                  )
               )
            )
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE FALSE"
                (builtin "One Step Simplification" (formula "45"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,0"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,0"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "52"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "53") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "false_right" (formula "54"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "closeTrue" (formula "54"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "notRight" (formula "54"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "false_right" (formula "53"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "cut_direct" (formula "46") (term "0"))
                  (branch "CUT: result_1407.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "54"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "2"))
                           (rule "castTrueImpliesOriginalTrue" (formula "55") (ifseqformula "1"))
                           (rule "closeTrue" (formula "55"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "55") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "55"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "54"))
                        (rule "applyEqRigid" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "54") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "closeTrue" (formula "54"))
                     )
                  )
                  (branch "CUT: result_1407.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "55"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                           (rule "castTrueImpliesOriginalTrue" (formula "56") (ifseqformula "1"))
                           (rule "closeTrue" (formula "56"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "56") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "56"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEqRigid" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "55"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "eqSymm" (formula "54"))
                        (rule "close" (formula "54") (ifseqformula "1"))
                     )
                  )
               )
            )
         )
         (branch "CUT: strPool( 〈'H'〉 ∘ ( 〈'e'〉 ∘ ( 〈'a'〉 ∘ ( 〈'd'〉 ∘ ( 〈'e'〉 ∘ ( 〈'r'〉 ∘ ( 〈's'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'o'〉 ∘ ( 〈'u'〉 ∘ ( 〈'n'〉 ∘ ( 〈'd'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈'p'〉 ∘ ( 〈'u'〉 ∘ ( 〈't'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'i'〉 ∘ ( 〈'l'〉 ∘ ( 〈'e'〉 ∘ ( 〈':'〉 ∘ 〈' '〉)))))))))))))))))))))))))))).<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
             (builtin "One Step Simplification" (formula "35"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "seqGetAlphaCast" (formula "19") (term "0"))
            (rule "castDel" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "sub_literals" (formula "30") (term "1,0,0"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "charLiteral_to_int" (formula "20") (term "1"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "sub_literals" (formula "31") (term "1,0,0"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "1,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "cut_direct" (formula "45") (term "1"))
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE TRUE"
                (builtin "One Step Simplification" (formula "46"))
               (rule "true_left" (formula "46"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,0"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,0"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "52"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "53") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "false_right" (formula "54"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "applyEq" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "closeTrue" (formula "54"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "notRight" (formula "54"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "false_right" (formula "53"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "seqGetAlphaCast" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "54"))
                     (rule "seqGetAlphaCast" (formula "33") (term "0"))
                     (rule "castDel" (formula "33") (term "0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "true_left" (formula "33"))
                     (rule "seqGetAlphaCast" (formula "34") (term "0"))
                     (rule "castDel" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "55") (ifseqformula "1"))
                        (rule "closeTrue" (formula "55"))
                     )
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                        (rule "close" (formula "55") (ifseqformula "2"))
                     )
                  )
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                     (rule "orRight" (formula "47"))
                     (rule "notRight" (formula "47"))
                     (rule "notRight" (formula "48"))
                     (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "eqSymm" (formula "55"))
                     (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "41"))
                     (rule "eqSymm" (formula "54"))
                     (rule "applyEqRigid" (formula "3") (term "2,2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "eqSymm" (formula "53"))
                     (rule "close" (formula "53") (ifseqformula "1"))
                  )
               )
            )
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE FALSE"
                (builtin "One Step Simplification" (formula "45"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,0"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "53"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "54") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "false_right" (formula "55"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "closeTrue" (formula "55"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "notRight" (formula "55"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "false_right" (formula "54"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "cut_direct" (formula "46") (term "0"))
                  (branch "CUT: result_1407.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "55"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                           (rule "castTrueImpliesOriginalTrue" (formula "56") (ifseqformula "1"))
                           (rule "closeTrue" (formula "56"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "56") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "56"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "55"))
                        (rule "applyEq" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "55") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "closeTrue" (formula "55"))
                     )
                  )
                  (branch "CUT: result_1407.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "56"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "56") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "42"))
                           (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "56") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "57") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "57"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "56"))
                        (rule "applyEq" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "eqSymm" (formula "55"))
                        (rule "close" (formula "55") (ifseqformula "1"))
                     )
                  )
               )
            )
         )
      )
      (branch "CUT: self_1464.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
          (builtin "One Step Simplification" (formula "38"))
         (rule "getOfSeqSub" (formula "31") (term "0"))
         (rule "castDel" (formula "31") (term "2,0"))
         (rule "sub_literals" (formula "31") (term "1,1,0,0"))
         (rule "leq_literals" (formula "31") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "add_literals" (formula "31") (term "1,1,0"))
         (rule "less_literals" (formula "31") (term "0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "getOfSeqSub" (formula "30") (term "0"))
         (rule "castDel" (formula "30") (term "2,0"))
         (rule "add_literals" (formula "30") (term "1,1,0"))
         (rule "sub_literals" (formula "30") (term "1,1,0,0"))
         (rule "leq_literals" (formula "30") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "less_literals" (formula "30") (term "0,0"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "cut_direct" (formula "35") (term "1"))
         (branch "CUT: strPool( 〈'H'〉 ∘ ( 〈'e'〉 ∘ ( 〈'a'〉 ∘ ( 〈'd'〉 ∘ ( 〈'e'〉 ∘ ( 〈'r'〉 ∘ ( 〈's'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'o'〉 ∘ ( 〈'u'〉 ∘ ( 〈'n'〉 ∘ ( 〈'd'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈'p'〉 ∘ ( 〈'u'〉 ∘ ( 〈't'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'i'〉 ∘ ( 〈'l'〉 ∘ ( 〈'e'〉 ∘ ( 〈':'〉 ∘ 〈' '〉)))))))))))))))))))))))))))).<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
             (builtin "One Step Simplification" (formula "36"))
            (rule "true_left" (formula "36"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "sub_literals" (formula "33") (term "1,1,0,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "seqGetAlphaCast" (formula "19") (term "0"))
            (rule "castDel" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "add_literals" (formula "31") (term "1,0"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "add_literals" (formula "32") (term "1,0"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "charLiteral_to_int" (formula "20") (term "1"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "add_zero_right" (formula "30") (term "1,1,0"))
            (rule "sub_literals" (formula "30") (term "1,0,0"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "cut_direct" (formula "45") (term "1"))
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE TRUE"
                (builtin "One Step Simplification" (formula "46"))
               (rule "true_left" (formula "46"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,0"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,0"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "52"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "53") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "false_right" (formula "54"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "closeTrue" (formula "54"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "notRight" (formula "54"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "false_right" (formula "53"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "seqGetAlphaCast" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "54"))
                     (rule "seqGetAlphaCast" (formula "33") (term "0"))
                     (rule "castDel" (formula "33") (term "0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "true_left" (formula "33"))
                     (rule "seqGetAlphaCast" (formula "34") (term "0"))
                     (rule "castDel" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "54") (ifseqformula "1"))
                        (rule "closeTrue" (formula "54"))
                     )
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                        (rule "close" (formula "55") (ifseqformula "2"))
                     )
                  )
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                     (rule "orRight" (formula "47"))
                     (rule "notRight" (formula "48"))
                     (rule "notRight" (formula "48"))
                     (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "eqSymm" (formula "55"))
                     (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "3") (term "2,2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                     (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "41"))
                     (rule "eqSymm" (formula "54"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "eqSymm" (formula "53"))
                     (rule "close" (formula "53") (ifseqformula "2"))
                  )
               )
            )
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE FALSE"
                (builtin "One Step Simplification" (formula "45"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_literals" (formula "31") (term "1,0"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,0"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,0"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "53"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "54") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "false_right" (formula "55"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "closeTrue" (formula "55"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "notRight" (formula "55"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "false_right" (formula "54"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "cut_direct" (formula "46") (term "0"))
                  (branch "CUT: result_1407.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "55"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "42"))
                           (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "55") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "56") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "56"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "55"))
                        (rule "applyEq" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "55") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "closeTrue" (formula "55"))
                     )
                  )
                  (branch "CUT: result_1407.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "56"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "42"))
                           (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "56") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "56") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "57") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "57"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEqRigid" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "56"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "eqSymm" (formula "55"))
                        (rule "close" (formula "55") (ifseqformula "1"))
                     )
                  )
               )
            )
         )
         (branch "CUT: strPool( 〈'H'〉 ∘ ( 〈'e'〉 ∘ ( 〈'a'〉 ∘ ( 〈'd'〉 ∘ ( 〈'e'〉 ∘ ( 〈'r'〉 ∘ ( 〈's'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'o'〉 ∘ ( 〈'u'〉 ∘ ( 〈'n'〉 ∘ ( 〈'd'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈' '〉 ∘ ( 〈'i'〉 ∘ ( 〈'n'〉 ∘ ( 〈'p'〉 ∘ ( 〈'u'〉 ∘ ( 〈't'〉 ∘ ( 〈' '〉 ∘ ( 〈'f'〉 ∘ ( 〈'i'〉 ∘ ( 〈'l'〉 ∘ ( 〈'e'〉 ∘ ( 〈':'〉 ∘ 〈' '〉)))))))))))))))))))))))))))).<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
             (builtin "One Step Simplification" (formula "35"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "sub_literals" (formula "32") (term "1,0,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "seqGetAlphaCast" (formula "19") (term "0"))
            (rule "castDel" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "getOfSeqSub" (formula "33") (term "0"))
            (rule "castDel" (formula "33") (term "2,0"))
            (rule "leq_literals" (formula "33") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "sub_literals" (formula "33") (term "1,0,0"))
            (rule "add_literals" (formula "33") (term "1,1,0"))
            (rule "less_literals" (formula "33") (term "0,0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "charLiteral_to_int" (formula "20") (term "1"))
            (rule "getOfSeqSub" (formula "31") (term "0"))
            (rule "castDel" (formula "31") (term "2,0"))
            (rule "sub_literals" (formula "31") (term "1,1,0,0"))
            (rule "add_literals" (formula "31") (term "1,1,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "less_literals" (formula "31") (term "0,0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "getOfSeqSub" (formula "30") (term "0"))
            (rule "castDel" (formula "30") (term "2,0"))
            (rule "sub_literals" (formula "30") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "1,1,0"))
            (rule "leq_literals" (formula "30") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "less_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "getOfSeqSub" (formula "32") (term "0"))
            (rule "castDel" (formula "32") (term "2,0"))
            (rule "add_literals" (formula "32") (term "1,1,0"))
            (rule "sub_literals" (formula "32") (term "1,1,0,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "less_literals" (formula "32") (term "0,0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "cut_direct" (formula "45") (term "1"))
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE TRUE"
                (builtin "One Step Simplification" (formula "46"))
               (rule "true_left" (formula "46"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,0"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,1,0,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "53"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "54") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "false_right" (formula "55"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "closeTrue" (formula "55"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "notRight" (formula "55"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "false_right" (formula "54"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "seqGetAlphaCast" (formula "32") (term "0"))
                  (rule "castDel" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "55"))
                     (rule "seqGetAlphaCast" (formula "33") (term "0"))
                     (rule "castDel" (formula "33") (term "0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "true_left" (formula "33"))
                     (rule "seqGetAlphaCast" (formula "34") (term "0"))
                     (rule "castDel" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "42"))
                        (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "55") (ifseqformula "1"))
                     )
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                        (rule "close" (formula "56") (ifseqformula "2"))
                     )
                  )
                  (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                     (rule "orRight" (formula "47"))
                     (rule "notRight" (formula "47"))
                     (rule "notRight" (formula "48"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "eqSymm" (formula "56"))
                     (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "41"))
                     (rule "eqSymm" (formula "55"))
                     (rule "applyEq" (formula "3") (term "2,2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                     (rule "applyEq" (formula "55") (term "1") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "closeTrue" (formula "55"))
                  )
               )
            )
            (branch "CUT: result_1407.<created>@anon_heap_toString«anonHeapFunction» = TRUE FALSE"
                (builtin "One Step Simplification" (formula "45"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
               (rule "replaceKnownSelect_taclet00_4" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,0"))
               (rule "getOfSeqSub" (formula "31") (term "0"))
               (rule "castDel" (formula "31") (term "2,0"))
               (rule "leq_literals" (formula "31") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "add_zero_right" (formula "31") (term "1,1,0"))
               (rule "sub_literals" (formula "31") (term "1,0,0"))
               (rule "less_literals" (formula "31") (term "0,0"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "sub_literals" (formula "32") (term "1,1,0,0"))
               (rule "add_literals" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "sub_literals" (formula "33") (term "1,1,0,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "add_literals" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "getOfSeqSub" (formula "32") (term "0"))
               (rule "castDel" (formula "32") (term "2,0"))
               (rule "add_zero_right" (formula "32") (term "1,1,0"))
               (rule "leq_literals" (formula "32") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "sub_literals" (formula "32") (term "1,0,0"))
               (rule "less_literals" (formula "32") (term "0,0"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "getOfSeqSub" (formula "33") (term "0"))
               (rule "castDel" (formula "33") (term "2,0"))
               (rule "leq_literals" (formula "33") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "sub_literals" (formula "33") (term "1,0,0"))
               (rule "add_zero_right" (formula "33") (term "1,1,0"))
               (rule "less_literals" (formula "33") (term "0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "seqGetAlphaCast" (formula "20") (term "0"))
               (rule "castDel" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "charLiteral_to_int" (formula "21") (term "1"))
               (rule "seqGetAlphaCast" (formula "21") (term "0"))
               (rule "castDel" (formula "21") (term "0"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "charLiteral_to_int" (formula "22") (term "1"))
               (rule "seqGetAlphaCast" (formula "22") (term "0"))
               (rule "castDel" (formula "22") (term "0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "charLiteral_to_int" (formula "23") (term "1"))
               (rule "seqGetAlphaCast" (formula "23") (term "0"))
               (rule "castDel" (formula "23") (term "0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "charLiteral_to_int" (formula "24") (term "1"))
               (rule "seqGetAlphaCast" (formula "24") (term "0"))
               (rule "castDel" (formula "24") (term "0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "charLiteral_to_int" (formula "25") (term "1"))
               (rule "charLiteral_to_int" (formula "26") (term "1"))
               (rule "seqGetAlphaCast" (formula "25") (term "0"))
               (rule "castDel" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "charLiteral_to_int" (formula "27") (term "1"))
               (rule "commute_and" (formula "54"))
               (rule "seqGetAlphaCast" (formula "26") (term "0"))
               (rule "castDel" (formula "26") (term "0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "charLiteral_to_int" (formula "28") (term "1"))
               (rule "seqGetAlphaCast" (formula "27") (term "0"))
               (rule "castDel" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "charLiteral_to_int" (formula "29") (term "1"))
               (rule "cut_direct" (formula "55") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "false_right" (formula "56"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "applyEq" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "closeTrue" (formula "56"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "notRight" (formula "56"))
                  (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "false_right" (formula "55"))
                  (rule "seqGetAlphaCast" (formula "29") (term "0"))
                  (rule "castDel" (formula "29") (term "0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "charLiteral_to_int" (formula "31") (term "1"))
                  (rule "commute_or" (formula "3") (term "0,0"))
                  (rule "charLiteral_to_int" (formula "32") (term "1"))
                  (rule "seqGetAlphaCast" (formula "30") (term "0"))
                  (rule "castDel" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "charLiteral_to_int" (formula "33") (term "1"))
                  (rule "charLiteral_to_int" (formula "34") (term "1"))
                  (rule "seqGetAlphaCast" (formula "31") (term "0"))
                  (rule "castDel" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "cut_direct" (formula "46") (term "0"))
                  (branch "CUT: result_1407.<created> = TRUE TRUE"
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "56"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                           (rule "castTrueImpliesOriginalTrue" (formula "56") (ifseqformula "1"))
                           (rule "closeTrue" (formula "56"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "57") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "57"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "56"))
                        (rule "applyEq" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "56") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "closeTrue" (formula "56"))
                     )
                  )
                  (branch "CUT: result_1407.<created> = TRUE FALSE"
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "seqGetAlphaCast" (formula "32") (term "0"))
                     (rule "castDel" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "57"))
                        (rule "seqGetAlphaCast" (formula "33") (term "0"))
                        (rule "castDel" (formula "33") (term "0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "seqGetAlphaCast" (formula "34") (term "0"))
                        (rule "castDel" (formula "34") (term "0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "true_left" (formula "34"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "notLeft" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "2"))
                           (rule "castTrueImpliesOriginalTrue" (formula "57") (ifseqformula "1"))
                           (rule "closeTrue" (formula "57"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = sk_1 FALSE"
                           (rule "close" (formula "58") (ifseqformula "2"))
                        )
                     )
                     (branch " ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE FALSE"
                        (rule "orRight" (formula "47"))
                        (rule "notRight" (formula "47"))
                        (rule "notRight" (formula "48"))
                        (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "58"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEqRigid" (formula "3") (term "2,2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "41"))
                        (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "41"))
                        (rule "eqSymm" (formula "57"))
                        (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "eqSymm" (formula "56"))
                        (rule "close" (formula "56") (ifseqformula "1"))
                     )
                  )
               )
            )
         )
      )
   )
   (branch "Exceptional Post (toString)"
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "10"))
      (rule "close" (formula "14") (ifseqformula "13"))
   )
   (branch "Pre (toString)"
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "3")))
      (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "11"))
      (rule "closeTrue" (formula "11"))
   )
   (branch "Null reference (l = null)"
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
      (rule "closeTrue" (formula "11"))
   )
)
(branch "l null"
    (builtin "One Step Simplification" (formula "14"))
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
   (rule "closeFalse" (formula "1"))
)
)
}
