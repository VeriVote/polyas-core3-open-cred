\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Feb 09 23:38:06 CET 2020
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../../../home/flo/git/polyas-core3-open-cred/boot";

\javaSource "../../../../../../home/flo/git/polyas-core3-open-cred/src";

\proofObligation "#Proof Obligation Settings
#Sun Feb 09 23:38:06 CET 2020
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:<init>(java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior block contract.2
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:<init>(java.lang.String,java.lang.String,java.lang.String)].JML normal_behavior block contract.2
class=de.uka.ilkd.key.proof.init.FunctionalBlockContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))

(autoModeTime "26850")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self_1672,anonOut_heap,heap_Before_METHOD,savedHeap_Before_METHOD,exc#5,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f,anonIn_heap"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "eqSymm" (formula "12") (term "1,0,0,1,0,1"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0,0,1,1,0,0,1"))
(rule "castedGetAny" (formula "12") (term "0,1,0,0,1,1,1,0,0,1"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0,0,1,1,1,1,0,0,1"))
(rule "castedGetAny" (formula "12") (term "0,0,1,0,0,1,1,1,1,1,0,0,1"))
(rule "castedGetAny" (formula "12") (term "0,1,0,1,1,1,1,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,1,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,1,1,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,1,1,1,1,0,0,1"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "exc#5_1"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "eval_order_access4_this" (formula "12") (term "1") (inst "#v1=l"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "l"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,1,0,1"))
(rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_registryFilename_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "2"))
(rule "insert_constant_string_value" (formula "2") (term "0,0,1,0,0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "insert_constant_string_value" (formula "2") (term "0,0,1,0,0,0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "insert_constant_string_value" (formula "2") (term "0,0,1,0,0,0,0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "castDel" (formula "2") (term "0,0,0,1,0,0,0,0"))
(rule "castDel" (formula "2") (term "0,0,0,1,0,0"))
(rule "castDel" (formula "2") (term "0,0,0,1,0,0,0"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "2"))
(rule "pullOutSelect" (formula "2") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_0"))
(rule "simplifySelectOfAnon" (formula "2"))
 (builtin "One Step Simplification" (formula "2"))
(rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
(rule "hideAuxiliaryEq" (formula "2"))
(rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_0"))
(rule "applyEq" (formula "3") (term "0,1") (ifseqformula "2"))
(rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
(rule "simplifySelectOfAnon" (formula "2"))
 (builtin "One Step Simplification" (formula "2"))
(rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
(rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "2"))
(rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "2"))
(rule "hideAuxiliaryEq" (formula "2"))
(rule "eqSymm" (formula "2") (term "0"))
(rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_0"))
(rule "simplifySelectOfAnon" (formula "2"))
 (builtin "One Step Simplification" (formula "2"))
(rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
(rule "hideAuxiliaryEq" (formula "2"))
(rule "eqSymm" (formula "2") (term "0"))
(rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "commute_or" (formula "2"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
(rule "variableDeclarationAssign" (formula "19") (term "1"))
(rule "variableDeclaration" (formula "19") (term "1") (newnames "var"))
(rule "assignment_read_attribute_this" (formula "19") (term "1"))
 (builtin "One Step Simplification" (formula "19"))
(rule "replaceKnownSelect_taclet_2" (formula "19") (term "0,1,0"))
(rule "replaceKnownAuxiliaryConstant_taclet_3" (formula "19") (term "0,1,0"))
 (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_parseInputCols,result_1603,exc_2115,heapAfter_parseInputCols,anon_heap_parseInputCols") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::parseInputCols(java.lang.String)].JML normal_behavior operation contract.0"))
(branch "Post (parseInputCols)"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0,1,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "13"))
   (rule "exLeft" (formula "11") (inst "sk=i_0"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "castedGetAny" (formula "14") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "13") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "assignment" (formula "28") (term "1"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "blockEmpty" (formula "28") (term "1"))
   (rule "assignment_write_attribute_this" (formula "28") (term "1"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "eval_order_access4" (formula "28") (term "1") (inst "#v1=a") (inst "#v0=c"))
   (rule "variableDeclarationAssign" (formula "28") (term "1"))
   (rule "variableDeclaration" (formula "28") (term "1") (newnames "c_31"))
   (rule "assignment" (formula "28") (term "1"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "variableDeclarationAssign" (formula "28") (term "1"))
   (rule "variableDeclaration" (formula "28") (term "1") (newnames "a"))
   (rule "pullOutSelect" (formula "14") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_0"))
   (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "14"))
   (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")))
   (rule "ifthenelse_negated" (formula "14") (term "0"))
   (rule "pullOutSelect" (formula "13") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
   (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "29")) (ifInst ""  (formula "4")))
   (rule "replaceKnownSelect_taclet_0" (formula "13") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_1" (formula "13") (term "0"))
   (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
   (rule "hideAuxiliaryEq" (formula "13"))
   (rule "pullOutSelect" (formula "14") (term "1,0") (inst "selectSK=java_util_Collection_seq_1"))
   (rule "simplifySelectOfAnon" (formula "14"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
   (rule "hideAuxiliaryEq" (formula "14"))
   (rule "commute_and" (formula "15") (term "0,0"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "29") (term "1"))
   (rule "variableDeclarationAssign" (formula "29") (term "1"))
   (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_1"))
   (rule "assignment_read_attribute_this" (formula "29") (term "1"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_0"))
   (rule "simplifySelectOfStore" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "castDel" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "variableDeclarationAssign" (formula "29") (term "1"))
   (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_2"))
   (rule "assignment_read_attribute_this" (formula "29") (term "1"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "dismissNonSelectedField" (formula "29") (term "0,1,0"))
   (rule "replaceKnownSelect_taclet0_19" (formula "29") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_20" (formula "29") (term "0,1,0"))
    (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_extractInputColsForDist,result_1604,exc_2116,heapAfter_extractInputColsForDist,anon_heap_extractInputColsForDist") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::extractInputColsForDist(java.util.LinkedList,java.lang.String)].JML normal_behavior operation contract.0"))
   (branch "Post (extractInputColsForDist)"
       (builtin "One Step Simplification" (formula "31"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,1,0") (ifseqformula "18"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "23"))
      (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "castedGetAny" (formula "20") (term "0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "19") (term "0,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
      (rule "assignment" (formula "37") (term "1"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "blockEmpty" (formula "37") (term "1"))
      (rule "assignment_write_attribute" (formula "37") (term "1"))
      (branch "Normal Execution (c_31 != null)"
          (builtin "One Step Simplification" (formula "38"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "36")))
         (rule "false_right" (formula "37"))
         (rule "eval_order_access4" (formula "37") (term "1") (inst "#v1=a") (inst "#v0=c"))
         (rule "variableDeclarationAssign" (formula "37") (term "1"))
         (rule "variableDeclaration" (formula "37") (term "1") (newnames "c_32"))
         (rule "assignment" (formula "37") (term "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "variableDeclarationAssign" (formula "37") (term "1"))
         (rule "variableDeclaration" (formula "37") (term "1") (newnames "a_1"))
         (rule "pullOutSelect" (formula "20") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_2"))
         (rule "applyEq" (formula "21") (term "0,0,0,1,0") (ifseqformula "20"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")))
         (rule "dismissNonSelectedField" (formula "20") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "20") (term "0,0,0,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "ifthenelse_negated" (formula "20") (term "0"))
         (rule "pullOutSelect" (formula "20") (term "1,0") (inst "selectSK=java_util_Collection_seq_3"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")))
         (rule "ifthenelse_negated" (formula "20") (term "0"))
         (rule "pullOutSelect" (formula "20") (term "1,0") (inst "selectSK=java_util_Collection_seq_4"))
         (rule "simplifySelectOfAnon" (formula "20"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
         (rule "hideAuxiliaryEq" (formula "20"))
         (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "23"))
         (rule "insert_constant_string_value" (formula "23") (term "0,0,1,0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "insert_constant_string_value" (formula "23") (term "0,0,1,0,0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "insert_constant_string_value" (formula "23") (term "0,0,1,0,0,0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "castDel" (formula "23") (term "0,0,0,1,0,0,0,0"))
         (rule "castDel" (formula "23") (term "0,0,0,1,0,0"))
         (rule "castDel" (formula "23") (term "0,0,0,1,0,0,0"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "25"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "25"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "25"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "25"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "23"))
         (rule "notLeft" (formula "23"))
         (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_1"))
         (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "23"))
         (rule "applyEq" (formula "29") (term "0") (ifseqformula "23"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "simplifySelectOfStore" (formula "23"))
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "42")))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "replaceKnownSelect_taclet_6" (formula "23") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet_7" (formula "23") (term "0"))
         (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "23"))
         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "23"))
         (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "eqSymm" (formula "23") (term "0"))
         (rule "eqSymm" (formula "23") (term "1"))
         (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replaceKnownSelect_taclet_8" (formula "1") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet_9" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replaceKnownSelect_taclet_10" (formula "1") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet_11" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replaceKnownSelect_taclet_12" (formula "1") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet_13" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "23") (term "0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_1"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "simplifySelectOfStore" (formula "23"))
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "38")))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "replaceKnownSelect_taclet_14" (formula "23") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet_15" (formula "23") (term "0"))
         (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "eqSymm" (formula "23") (term "0"))
         (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_1"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "simplifySelectOfStore" (formula "23"))
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "38")))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "replaceKnownSelect_taclet_4" (formula "23") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet_5" (formula "23") (term "0"))
         (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "eqSymm" (formula "23") (term "1"))
         (rule "commute_or_2" (formula "19"))
         (rule "commute_and" (formula "22") (term "0,0"))
         (rule "commute_or" (formula "23"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "37") (term "1"))
         (rule "variableDeclarationAssign" (formula "37") (term "1"))
         (rule "variableDeclaration" (formula "37") (term "1") (newnames "var_3"))
         (rule "assignment_read_attribute_this" (formula "37") (term "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
         (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
         (rule "replaceKnownSelect_taclet0_23" (formula "1") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_24" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "applyEqReverse" (formula "38") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "variableDeclarationAssign" (formula "37") (term "1"))
         (rule "variableDeclaration" (formula "37") (term "1") (newnames "var_4"))
         (rule "assignment_read_attribute_this" (formula "37") (term "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
         (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
         (rule "replaceKnownSelect_taclet0_19" (formula "1") (term "1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_20" (formula "1") (term "1,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "applyEqReverse" (formula "38") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "seqGetAlphaCast" (formula "13") (term "0"))
         (rule "castedGetAny" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "lenNonNegative" (formula "12") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv"))
         (rule "andLeft" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "applyEq" (formula "16") (term "0,1,1,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
         (rule "andLeft" (formula "24"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
         (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "24"))
         (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
         (rule "andLeft" (formula "23"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
         (rule "applyEq" (formula "24") (term "0,1,1,0,0") (ifseqformula "25"))
         (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
          (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_extractInputColsForPolyas,result_1605,exc_2117,heapAfter_extractInputColsForPolyas,anon_heap_extractInputColsForPolyas") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::extractInputColsForPolyas(java.util.LinkedList,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (extractInputColsForPolyas)"
             (builtin "One Step Simplification" (formula "28"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "andLeft" (formula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0") (ifseqformula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "31"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "33"))
            (rule "notLeft" (formula "34"))
            (rule "exLeft" (formula "31") (inst "sk=i_1"))
            (rule "andLeft" (formula "31"))
            (rule "andLeft" (formula "31"))
            (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "castedGetAny" (formula "30") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "33") (term "0"))
            (rule "dismissNonSelectedField" (formula "29") (term "0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0") (ifseqformula "21"))
            (rule "dismissNonSelectedField" (formula "29") (term "0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "31"))
            (rule "assignment" (formula "51") (term "1"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "blockEmpty" (formula "51") (term "1"))
            (rule "assignment_write_attribute" (formula "51") (term "1"))
            (branch "Normal Execution (c_32 != null)"
                (builtin "One Step Simplification" (formula "52"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "50")))
               (rule "false_right" (formula "51"))
               (rule "pullOutSelect" (formula "30") (term "0,1,1,0,0") (inst "selectSK=java_util_Collection_seq_5"))
               (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "30"))
               (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "30"))
               (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "30"))
               (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "38")))
               (rule "ifthenelse_negated" (formula "30") (term "0"))
               (rule "dismissNonSelectedField" (formula "30") (term "0,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0") (ifseqformula "21"))
               (rule "dismissNonSelectedField" (formula "30") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=java_util_Collection_seq_6"))
               (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "39")))
               (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "ifthenelse_negated" (formula "30") (term "0"))
               (rule "dismissNonSelectedField" (formula "30") (term "1,0"))
               (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=java_util_Collection_seq_7"))
               (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")))
               (rule "ifthenelse_negated" (formula "30") (term "0"))
               (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=java_util_Collection_seq_8"))
               (rule "simplifySelectOfAnon" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "30"))
               (rule "hideAuxiliaryEq" (formula "30"))
               (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "37"))
               (rule "true_left" (formula "37"))
               (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "37"))
               (rule "insert_constant_string_value" (formula "37") (term "0,0,1,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "insert_constant_string_value" (formula "37") (term "0,0,1,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "insert_constant_string_value" (formula "37") (term "0,0,1,0,0,0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "castDel" (formula "37") (term "0,0,0,1,0,0,0"))
               (rule "castDel" (formula "37") (term "0,0,0,1,0,0"))
               (rule "castDel" (formula "37") (term "0,0,0,1,0,0,0,0"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "38"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "39"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "39"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "39"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "39"))
               (rule "notLeft" (formula "38"))
               (rule "notLeft" (formula "37"))
               (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_2"))
               (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "simplifySelectOfStore" (formula "37"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "57")))
               (rule "replaceKnownSelect_taclet000_45" (formula "37") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_48" (formula "37") (term "0"))
               (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
               (rule "hideAuxiliaryEq" (formula "37"))
               (rule "pullOutSelect" (formula "37") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_2"))
               (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "simplifySelectOfStore" (formula "37"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "57")))
               (rule "replaceKnownSelect_taclet000_49" (formula "37") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_52" (formula "37") (term "0"))
               (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
               (rule "hideAuxiliaryEq" (formula "37"))
               (rule "pullOutSelect" (formula "37") (term "0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_2"))
               (rule "applyEq" (formula "43") (term "0") (ifseqformula "37"))
               (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "37"))
               (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "simplifySelectOfStore" (formula "37"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "57")))
               (rule "replaceKnownSelect_taclet000_29" (formula "37") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "37") (term "0"))
               (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "37"))
               (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "37"))
               (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "37"))
               (rule "hideAuxiliaryEq" (formula "37"))
               (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
               (rule "replaceKnownSelect_taclet000_33" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_36" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
               (rule "replaceKnownSelect_taclet000_41" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_44" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
               (rule "replaceKnownSelect_taclet000_37" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_40" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_or_2" (formula "29") (term "0"))
               (rule "commute_or_2" (formula "32") (term "0,0"))
               (rule "commute_and" (formula "33") (term "0,0"))
               (rule "commute_or" (formula "37"))
               (rule "commute_or_2" (formula "29"))
               (rule "tryEmpty" (formula "52") (term "1"))
               (rule "blockEmptyLabel" (formula "52") (term "1"))
               (rule "blockEmpty" (formula "52") (term "1"))
               (rule "lenNonNegative" (formula "25") (term "1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "25"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,0") (ifseqformula "9"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,1") (ifseqformula "10"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "11"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "12"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,1") (ifseqformula "13"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "14"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "15"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "methodCallEmpty" (formula "60") (term "1"))
               (rule "emptyModality" (formula "60") (term "1"))
               (rule "andRight" (formula "60"))
               (branch
                  (rule "andRight" (formula "60"))
                  (branch
                      (builtin "One Step Simplification" (formula "60"))
                     (rule "closeTrue" (formula "60"))
                  )
                  (branch
                     (rule "andRight" (formula "60"))
                     (branch
                        (rule "andRight" (formula "60"))
                        (branch
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "notRight" (formula "60"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                           (rule "polySimp_elimOne" (formula "44") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "30"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "replaceKnownSelect_taclet000_53" (formula "1") (term "1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000_54" (formula "1") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "close" (formula "50") (ifseqformula "2"))
                        )
                        (branch
                           (rule "andRight" (formula "60"))
                           (branch
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "notRight" (formula "60"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                              (rule "polySimp_elimOne" (formula "44") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "30"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "49") (ifseqformula "2"))
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "notRight" (formula "60"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "44"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                              (rule "polySimp_elimOne" (formula "44") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "48") (ifseqformula "2"))
                           )
                        )
                     )
                     (branch
                        (rule "andRight" (formula "60"))
                        (branch
                            (builtin "One Step Simplification" (formula "60"))
                           (rule "allRight" (formula "60") (inst "sk=i_2"))
                           (rule "impRight" (formula "60"))
                           (rule "andLeft" (formula "1"))
                           (rule "notRight" (formula "62"))
                           (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_2"))
                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "replaceKnownSelect_taclet000_53" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000_54" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                           (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_9"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "32"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet0_18" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "36") (term "0"))
                           (rule "nnf_imp2or" (formula "44") (term "0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "36") (term "0"))
                           (rule "commute_or_2" (formula "44") (term "0"))
                           (rule "commute_or" (formula "28") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or" (formula "36") (term "0,0"))
                           (rule "commute_or_2" (formula "36") (term "0"))
                           (rule "commute_or" (formula "44") (term "0,0"))
                           (rule "commute_or_2" (formula "44") (term "0"))
                           (rule "ifthenelse_split" (formula "41") (term "0"))
                           (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                              (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                              (rule "hideAuxiliaryEq" (formula "42"))
                              (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "applyEqReverse" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "44") (term "0,1,1,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "43"))
                              (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "43"))
                              (rule "hideAuxiliaryEq" (formula "43"))
                              (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                              (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "42"))
                              (rule "applyEqReverse" (formula "43") (term "0,1,1,0") (ifseqformula "42"))
                              (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                              (rule "hideAuxiliaryEq" (formula "42"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "41"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "true_left" (formula "40"))
                              (rule "ifthenelse_split" (formula "33") (term "0"))
                              (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1,1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "ifthenelse_split" (formula "27") (term "0"))
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "27") (term "0,0,1"))
                                       (rule "leq_literals" (formula "27") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "27") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                       (rule "add_literals" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                 )
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                    (rule "orRight" (formula "44"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "27") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                       (rule "add_zero_right" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "27") (term "0,0,1"))
                                       (rule "leq_literals" (formula "27") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                 (rule "orRight" (formula "46"))
                                 (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "46")))
                                 (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "45")))
                                 (rule "ifthenelse_split" (formula "27") (term "0"))
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "27") (term "0,0,1"))
                                       (rule "leq_literals" (formula "27") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "27") (term "0,0,1"))
                                       (rule "leq_literals" (formula "27") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                 )
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                    (rule "orRight" (formula "45"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "44"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "27") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "27"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "allLeft" (formula "27") (inst "t=i_2"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "27") (term "0,0,1"))
                                       (rule "leq_literals" (formula "27") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                 )
                              )
                           )
                           (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                              (rule "orRight" (formula "49"))
                              (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "41"))
                              (rule "hideAuxiliaryEq" (formula "41"))
                              (rule "replace_known_right" (formula "42") (term "1,0,0,0,0") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                              (rule "replace_known_right" (formula "41") (term "1,0,0,0") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "48")))
                              (rule "replace_known_right" (formula "40") (term "0,0,0,0") (ifseqformula "48"))
                               (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "49")))
                              (rule "ifthenelse_split" (formula "33") (term "0"))
                              (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1,1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "ifthenelse_split" (formula "27") (term "0"))
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                    (rule "castedGetAny" (formula "43") (term "0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "lenNonNegative" (formula "42") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "42"))
                                       (rule "ifthenelse_split" (formula "38") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "lenNonNegative" (formula "42") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "42"))
                                       (rule "ifthenelse_split" (formula "38") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "27"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                    (rule "orRight" (formula "46"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
                                    (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                    (rule "castedGetAny" (formula "43") (term "0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "lenNonNegative" (formula "42") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "42"))
                                       (rule "ifthenelse_split" (formula "38") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "lenNonNegative" (formula "42") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "42"))
                                       (rule "ifthenelse_split" (formula "38") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                 )
                              )
                              (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                 (rule "orRight" (formula "48"))
                                 (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "48")))
                                 (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "47")))
                                 (rule "ifthenelse_split" (formula "27") (term "0"))
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                    (rule "castedGetAny" (formula "44") (term "0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "lenNonNegative" (formula "43") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43"))
                                       (rule "ifthenelse_split" (formula "39") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "27"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_right" (formula "39") (term "1,0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "lenNonNegative" (formula "43") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43"))
                                       (rule "ifthenelse_split" (formula "39") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_right" (formula "39") (term "1,0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                                 (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                    (rule "orRight" (formula "47"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "47")))
                                    (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                    (rule "castedGetAny" (formula "44") (term "0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "true_left" (formula "44"))
                                    (rule "cut_direct" (formula "16") (term "0"))
                                    (branch "CUT: self_1672.<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "lenNonNegative" (formula "43") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43"))
                                       (rule "ifthenelse_split" (formula "39") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_right" (formula "39") (term "1,0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: self_1672.<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "lenNonNegative" (formula "43") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43"))
                                       (rule "ifthenelse_split" (formula "39") (term "0"))
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_right" (formula "39") (term "1,0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "allLeft" (formula "27") (inst "t=i_2"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "60"))
                           (branch
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "dismissNonSelectedField" (formula "60") (term "1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "60") (term "1,0,1,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "60") (term "1,1,0"))
                              (rule "dismissNonSelectedField" (formula "60") (term "0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "60") (term "0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "43"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                              (rule "polySimp_elimOne" (formula "43") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "60") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "60") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "29"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                              (rule "replaceKnownSelect_taclet000_55" (formula "1") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000_56" (formula "1") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                              (rule "applyEqReverse" (formula "61") (term "1,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "60") (term "1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputCols_2"))
                              (rule "applyEq" (formula "61") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "replaceKnownSelect_taclet000_53" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000_54" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                              (rule "applyEqReverse" (formula "61") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "61") (term "1,0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "60") (term "0,1,1,1,0,0") (inst "selectSK=java_util_Collection_seq_9"))
                              (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "29"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0_18" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "61") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "61") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "nnf_imp2or" (formula "33") (term "0"))
                              (rule "nnf_imp2or" (formula "41") (term "0"))
                              (rule "nnf_imp2or" (formula "25") (term "0"))
                              (rule "nnf_ex2all" (formula "60"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                              (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "42") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                              (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "26") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "34") (term "0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or_2" (formula "26") (term "0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                              (rule "commute_or" (formula "34") (term "0,0"))
                              (rule "commute_or_2" (formula "34") (term "0"))
                              (rule "commute_or" (formula "42") (term "0,0"))
                              (rule "commute_or_2" (formula "42") (term "0"))
                              (rule "commute_or" (formula "26") (term "0,0"))
                              (rule "commute_or_2" (formula "26") (term "0"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "ifthenelse_split" (formula "39") (term "0"))
                              (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "41"))
                                 (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "41"))
                                 (rule "applyEqReverse" (formula "42") (term "0,1,1,0") (ifseqformula "41"))
                                 (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "41"))
                                 (rule "hideAuxiliaryEq" (formula "41"))
                                 (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "ifthenelse_split" (formula "31") (term "0"))
                                 (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqReverse" (formula "34") (term "0,1,1,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "ifthenelse_split" (formula "25") (term "0"))
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_literals" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "42"))
                                       (rule "applyEqReverse" (formula "26") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "42")))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_zero_right" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                    (rule "orRight" (formula "44"))
                                    (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "31"))
                                    (rule "hideAuxiliaryEq" (formula "31"))
                                    (rule "replace_known_right" (formula "31") (term "0,0,0,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "44")))
                                    (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "44")))
                                    (rule "ifthenelse_split" (formula "25") (term "0"))
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_literals" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "21"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "43"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "43")))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_literals" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                 (rule "orRight" (formula "47"))
                                 (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                 (rule "hideAuxiliaryEq" (formula "39"))
                                 (rule "replace_known_right" (formula "39") (term "0,0,0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
                                 (rule "replace_known_right" (formula "40") (term "0,0,0,0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
                                 (rule "replace_known_right" (formula "38") (term "0,0,0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "47")))
                                 (rule "ifthenelse_split" (formula "31") (term "0"))
                                 (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqReverse" (formula "34") (term "0,1,1,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0,0,0,0,0") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "ifthenelse_split" (formula "25") (term "0"))
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                          (rule "castedGetAny" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "lenNonNegative" (formula "40") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40"))
                                          (rule "ifthenelse_split" (formula "36") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,1,1,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0"))
                                             (rule "add_literals" (formula "23") (term "0"))
                                             (rule "leq_literals" (formula "23"))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
                                             (rule "hideAuxiliaryEq" (formula "36"))
                                             (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                          (rule "castedGetAny" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "lenNonNegative" (formula "40") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40"))
                                          (rule "ifthenelse_split" (formula "36") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,1,1,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
                                             (rule "hideAuxiliaryEq" (formula "36"))
                                             (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "44"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "44")))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                          (rule "castedGetAny" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "lenNonNegative" (formula "40") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40"))
                                          (rule "ifthenelse_split" (formula "36") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,1,1,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
                                             (rule "hideAuxiliaryEq" (formula "36"))
                                             (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "seqGetAlphaCast" (formula "41") (term "0"))
                                          (rule "castedGetAny" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "lenNonNegative" (formula "40") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40"))
                                          (rule "ifthenelse_split" (formula "36") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,1,1,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
                                             (rule "hideAuxiliaryEq" (formula "36"))
                                             (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                    (rule "orRight" (formula "46"))
                                    (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "31"))
                                    (rule "hideAuxiliaryEq" (formula "31"))
                                    (rule "replace_known_right" (formula "31") (term "1,0,0,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
                                    (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "46")))
                                    (rule "ifthenelse_split" (formula "25") (term "0"))
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                       (rule "castedGetAny" (formula "42") (term "0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "lenNonNegative" (formula "41") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41"))
                                          (rule "ifthenelse_split" (formula "37") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "38") (term "1,0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "23"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "lenNonNegative" (formula "41") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41"))
                                          (rule "ifthenelse_split" (formula "37") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "38") (term "1,0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "closeFalse" (formula "21"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "23"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "45"))
                                       (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "0,1,1,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "44")))
                                       (rule "cut_direct" (formula "14") (term "0"))
                                       (branch "CUT: self_1672.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                          (rule "castedGetAny" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "lenNonNegative" (formula "41") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41"))
                                          (rule "ifthenelse_split" (formula "37") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "38") (term "1,0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                       )
                                       (branch "CUT: self_1672.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "seqGetAlphaCast" (formula "42") (term "0"))
                                          (rule "castedGetAny" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "lenNonNegative" (formula "41") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41"))
                                          (rule "ifthenelse_split" (formula "37") (term "0"))
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "38") (term "1,0,0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "allLeft" (formula "1") (inst "t=i_0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "andRight" (formula "60"))
                              (branch
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "allRight" (formula "60") (inst "sk=i_2"))
                                 (rule "impRight" (formula "60"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "62"))
                                 (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_9"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "replaceKnownSelect_taclet00000_58" (formula "2") (term "2,0"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "nnf_imp2or" (formula "29") (term "0"))
                                 (rule "nnf_imp2or" (formula "45") (term "0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "commute_or_2" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "45") (term "0,0,0,1,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "45") (term "0,1,0,0,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "44"))
                                 (rule "hideAuxiliaryEq" (formula "44"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "29") (term "0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "commute_or" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "ifthenelse_split" (formula "42") (term "0"))
                                 (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "43"))
                                    (rule "hideAuxiliaryEq" (formula "43"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "44") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,1,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "ifthenelse_split" (formula "33") (term "0"))
                                    (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                       (rule "hideAuxiliaryEq" (formula "34"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                                       (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "applyEqReverse" (formula "36") (term "0,1,1,0") (ifseqformula "34"))
                                       (rule "hideAuxiliaryEq" (formula "34"))
                                       (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "ifthenelse_split" (formula "27") (term "0"))
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "cut_direct" (formula "16") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "38") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "38") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "38"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "allLeft" (formula "38") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "38") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "3"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "inEqSimp_homoInEq1" (formula "38"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0"))
                                             (rule "add_literals" (formula "38") (term "0"))
                                             (rule "leq_literals" (formula "38"))
                                             (rule "closeFalse" (formula "38"))
                                          )
                                       )
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "44"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                          (rule "hideAuxiliaryEq" (formula "27"))
                                          (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                                          (rule "cut_direct" (formula "16") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "38") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "38") (term "0,0,1"))
                                             (rule "leq_literals" (formula "38") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "38"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "allLeft" (formula "38") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "38") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "3"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "inEqSimp_homoInEq1" (formula "38"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0"))
                                             (rule "add_literals" (formula "38") (term "0"))
                                             (rule "leq_literals" (formula "38"))
                                             (rule "closeFalse" (formula "38"))
                                          )
                                       )
                                    )
                                    (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "46"))
                                       (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                       (rule "hideAuxiliaryEq" (formula "33"))
                                       (rule "replace_known_right" (formula "33") (term "1,0,0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "45")))
                                       (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "46")))
                                       (rule "ifthenelse_split" (formula "27") (term "0"))
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "cut_direct" (formula "16") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "39") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,1"))
                                             (rule "leq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "39"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "allLeft" (formula "39") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,1"))
                                             (rule "leq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "39"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "45"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                          (rule "hideAuxiliaryEq" (formula "27"))
                                          (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
                                          (rule "cut_direct" (formula "16") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "39") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "39") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "3"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "inEqSimp_homoInEq1" (formula "39"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0"))
                                             (rule "add_literals" (formula "39") (term "0"))
                                             (rule "leq_literals" (formula "39"))
                                             (rule "closeFalse" (formula "39"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "allLeft" (formula "39") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "39") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "3"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "inEqSimp_homoInEq1" (formula "39"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0"))
                                             (rule "leq_literals" (formula "39"))
                                             (rule "closeFalse" (formula "39"))
                                          )
                                       )
                                    )
                                 )
                                 (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                    (rule "orRight" (formula "49"))
                                    (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                    (rule "replace_known_right" (formula "42") (term "1,0,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                                    (rule "replace_known_right" (formula "41") (term "1,0,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "48")))
                                    (rule "ifthenelse_split" (formula "34") (term "0"))
                                    (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqReverse" (formula "37") (term "0,1,1,0") (ifseqformula "35"))
                                       (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "35"))
                                       (rule "applyEqReverse" (formula "37") (term "0,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "ifthenelse_split" (formula "28") (term "0"))
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "30") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "30") (term "0,1,1,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "29"))
                                          (rule "hideAuxiliaryEq" (formula "29"))
                                          (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "cut_direct" (formula "17") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "40") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "4"))
                                             (rule "andLeft" (formula "40"))
                                             (rule "inEqSimp_homoInEq1" (formula "40"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0"))
                                             (rule "add_zero_right" (formula "40") (term "0"))
                                             (rule "leq_literals" (formula "40"))
                                             (rule "closeFalse" (formula "40"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "allLeft" (formula "40") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                             (rule "leq_literals" (formula "40") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "40"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "46"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")))
                                          (rule "cut_direct" (formula "17") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "40") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "40") (term "0,0,1"))
                                             (rule "leq_literals" (formula "40") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "closeFalse" (formula "40"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "allLeft" (formula "40") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "40"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_literals" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                    )
                                    (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "48"))
                                       (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                       (rule "hideAuxiliaryEq" (formula "34"))
                                       (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")))
                                       (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "48")))
                                       (rule "ifthenelse_split" (formula "28") (term "0"))
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "30") (term "0,1,1,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "30") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "29"))
                                          (rule "hideAuxiliaryEq" (formula "29"))
                                          (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "cut_direct" (formula "17") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "41") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "41") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "41"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_literals" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "allLeft" (formula "41") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "41") (term "0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "closeFalse" (formula "41"))
                                          )
                                       )
                                       (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "47"))
                                          (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")))
                                          (rule "cut_direct" (formula "17") (term "0"))
                                          (branch "CUT: self_1672.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "41") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "41") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "41"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                          (branch "CUT: self_1672.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "allLeft" (formula "41") (inst "t=i_2"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "41") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (ifseqformula "4"))
                                             (rule "andLeft" (formula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "41"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0"))
                                             (rule "leq_literals" (formula "41"))
                                             (rule "closeFalse" (formula "41"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (rule "andRight" (formula "60"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "allRight" (formula "60") (inst "sk=i_2"))
                                    (rule "impRight" (formula "60"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "62"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForDist_0"))
                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_Collection_seq_9"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "replaceKnownSelect_taclet000_25" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "32"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_imp2or" (formula "37") (term "0"))
                                    (rule "nnf_imp2or" (formula "45") (term "0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                    (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "commute_or_2" (formula "1") (term "0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "commute_or" (formula "28") (term "0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "commute_or" (formula "36") (term "0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "ifthenelse_split" (formula "41") (term "0"))
                                    (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "43") (term "0,1,1,0") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "ifthenelse_split" (formula "33") (term "0"))
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "36") (term "0,1,1,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "ifthenelse_split" (formula "27") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "33") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "3"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "33"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0"))
                                                (rule "add_literals" (formula "33") (term "0"))
                                                (rule "leq_literals" (formula "33"))
                                                (rule "closeFalse" (formula "33"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "33") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "3"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "33"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0"))
                                                (rule "add_literals" (formula "33") (term "0"))
                                                (rule "leq_literals" (formula "33"))
                                                (rule "closeFalse" (formula "33"))
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "44"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "33") (term "0,0,1"))
                                                (rule "leq_literals" (formula "33") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "33") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "33"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_literals" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                       )
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "46"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "46")))
                                          (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "46")))
                                          (rule "ifthenelse_split" (formula "27") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "34") (term "0,0,1"))
                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "34") (term "0,0,1"))
                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "45"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_literals" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "49"))
                                       (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "49")))
                                       (rule "replace_known_right" (formula "42") (term "0,0,0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "49")))
                                       (rule "replace_known_right" (formula "40") (term "1,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "48")))
                                       (rule "ifthenelse_split" (formula "33") (term "0"))
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "36") (term "0,1,1,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "ifthenelse_split" (formula "27") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                             (rule "castedGetAny" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "lenNonNegative" (formula "42") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "42"))
                                                (rule "ifthenelse_split" (formula "38") (term "0"))
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "33") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0"))
                                                   (rule "add_literals" (formula "33") (term "0"))
                                                   (rule "leq_literals" (formula "33"))
                                                   (rule "closeFalse" (formula "33"))
                                                )
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                                   (rule "hideAuxiliaryEq" (formula "38"))
                                                   (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "33") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "33"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "lenNonNegative" (formula "42") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "42"))
                                                (rule "ifthenelse_split" (formula "38") (term "0"))
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                                   (rule "hideAuxiliaryEq" (formula "38"))
                                                   (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "46"))
                                             (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")))
                                             (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                             (rule "castedGetAny" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "lenNonNegative" (formula "42") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "42"))
                                                (rule "ifthenelse_split" (formula "38") (term "0"))
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "33") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "33"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                                   (rule "hideAuxiliaryEq" (formula "38"))
                                                   (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "33") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0"))
                                                   (rule "add_literals" (formula "33") (term "0"))
                                                   (rule "leq_literals" (formula "33"))
                                                   (rule "closeFalse" (formula "33"))
                                                )
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "lenNonNegative" (formula "42") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "42"))
                                                (rule "ifthenelse_split" (formula "38") (term "0"))
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " result_1605.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                                   (rule "hideAuxiliaryEq" (formula "38"))
                                                   (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "allLeft" (formula "33") (inst "t=i_2"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "33") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                       )
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "48"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "48")))
                                          (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "48")))
                                          (rule "ifthenelse_split" (formula "27") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                                (rule "castedGetAny" (formula "44") (term "0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_literals" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                                (rule "castedGetAny" (formula "44") (term "0"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "34") (term "0,0,1"))
                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "47"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "47")))
                                             (rule "seqGetAlphaCast" (formula "44") (term "0"))
                                             (rule "castedGetAny" (formula "44") (term "0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "cut_direct" (formula "16") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "allLeft" (formula "34") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "34") (term "0,0,1"))
                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "dismissNonSelectedField" (formula "60") (term "0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "60") (term "0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "60") (term "1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "60") (term "0,0,1,0") (inst "selectSK=java_util_Collection_seq_9"))
                                    (rule "applyEq" (formula "61") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "61") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "replaceKnownSelect_taclet000_55" (formula "1") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000_56" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0") (ifseqformula "30"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "applyEqReverse" (formula "62") (term "1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,0,0,0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_inputColsForPolyas_0"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet00000_58" (formula "2") (term "2,0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "nnf_ex2all" (formula "61"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "nnf_imp2or" (formula "35") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or_2" (formula "2") (term "0,0"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,0,0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "commute_or" (formula "27") (term "0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or" (formula "35") (term "0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "ifthenelse_split" (formula "40") (term "0"))
                                    (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "ifthenelse_split" (formula "31") (term "0"))
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                          (rule "hideAuxiliaryEq" (formula "32"))
                                          (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "applyEqReverse" (formula "34") (term "0,1,1,0") (ifseqformula "32"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "32"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0,0,0,0,0") (ifseqformula "32"))
                                          (rule "hideAuxiliaryEq" (formula "32"))
                                          (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "cut_direct" (formula "14") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "42"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0,1,1,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "25"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "41")))
                                             (rule "cut_direct" (formula "14") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "39"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "38"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "44"))
                                          (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "31"))
                                          (rule "hideAuxiliaryEq" (formula "31"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "44")))
                                          (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "43")))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "cut_direct" (formula "14") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "40"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "1"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "40"))
                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0"))
                                                (rule "leq_literals" (formula "40"))
                                                (rule "closeFalse" (formula "40"))
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "43"))
                                             (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "26") (term "0,1,1,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "25"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "42")))
                                             (rule "cut_direct" (formula "14") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "39"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "1"))
                                                (rule "andLeft" (formula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "40"))
                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0"))
                                                (rule "add_literals" (formula "40") (term "0"))
                                                (rule "leq_literals" (formula "40"))
                                                (rule "closeFalse" (formula "40"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "39") (term "0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "closeFalse" (formula "39"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                       (rule "orRight" (formula "47"))
                                       (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                       (rule "replace_known_right" (formula "40") (term "1,0,0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "46")))
                                       (rule "replace_known_right" (formula "39") (term "0,0,0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
                                       (rule "ifthenelse_split" (formula "32") (term "0"))
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "applyEqReverse" (formula "35") (term "0,0,0,0,0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "35") (term "0,1,1,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "ifthenelse_split" (formula "26") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "cut_direct" (formula "15") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "40") (term "0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "closeFalse" (formula "40"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "40"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "44"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "44")))
                                             (rule "cut_direct" (formula "15") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "40"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "41"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "40"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "1"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "41"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0"))
                                                (rule "add_literals" (formula "41") (term "0"))
                                                (rule "leq_literals" (formula "41"))
                                                (rule "closeFalse" (formula "41"))
                                             )
                                          )
                                       )
                                       (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                          (rule "orRight" (formula "46"))
                                          (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                          (rule "hideAuxiliaryEq" (formula "32"))
                                          (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "46")))
                                          (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
                                          (rule "ifthenelse_split" (formula "26") (term "0"))
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "cut_direct" (formula "15") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "41"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "42"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "41"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "42"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                                             (rule "orRight" (formula "45"))
                                             (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "45")))
                                             (rule "cut_direct" (formula "15") (term "0"))
                                             (branch "CUT: self_1672.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "41"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "42"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "CUT: self_1672.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "42"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "41"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "allRight" (formula "60") (inst "sk=f_0"))
                  (rule "allRight" (formula "60") (inst "sk=o_0"))
                  (rule "orRight" (formula "60"))
                  (rule "orRight" (formula "60"))
                  (rule "orRight" (formula "60"))
                  (rule "orRight" (formula "60"))
                  (rule "eqSymm" (formula "64"))
                  (rule "inEqSimp_ltToLeq" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "43"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                  (rule "polySimp_elimOne" (formula "43") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                  (rule "pullOutSelect" (formula "64") (term "1") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                  (rule "replaceKnownSelect_taclet100000_80" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "nnf_imp2or" (formula "36") (term "0"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "nnf_imp2or" (formula "28") (term "0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "44") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                  (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "28") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                  (rule "commute_and" (formula "65"))
                  (rule "commute_and" (formula "64"))
                  (rule "commute_and" (formula "63"))
                  (rule "commute_or_2" (formula "36") (term "0"))
                  (rule "cnf_rightDist" (formula "3") (term "0,0"))
                  (rule "commute_or_2" (formula "44") (term "0"))
                  (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                  (rule "commute_or_2" (formula "28") (term "0"))
                  (rule "commute_or" (formula "36") (term "0,0"))
                  (rule "commute_or_2" (formula "36") (term "0"))
                  (rule "commute_or" (formula "44") (term "0,0"))
                  (rule "commute_or_2" (formula "44") (term "0"))
                  (rule "commute_or" (formula "28") (term "0,0"))
                  (rule "commute_or_2" (formula "28") (term "0"))
                  (rule "commute_or" (formula "3") (term "1,0,0"))
                  (rule "ifthenelse_split" (formula "41") (term "0"))
                  (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                     (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                     (rule "hideAuxiliaryEq" (formula "42"))
                     (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "41"))
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "43"))
                     (rule "applyEqReverse" (formula "44") (term "0,1,1,0") (ifseqformula "43"))
                     (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "43"))
                     (rule "applyEqReverse" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "43"))
                     (rule "hideAuxiliaryEq" (formula "43"))
                     (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "41"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "applyEqReverse" (formula "43") (term "0,1,1,0") (ifseqformula "42"))
                     (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "42"))
                     (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "42"))
                     (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "42"))
                     (rule "hideAuxiliaryEq" (formula "42"))
                     (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "41"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "true_left" (formula "40"))
                     (rule "ifthenelse_split" (formula "33") (term "0"))
                     (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                        (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "applyEqReverse" (formula "36") (term "0,1,1,0") (ifseqformula "34"))
                        (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "34"))
                        (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "ifthenelse_split" (formula "27") (term "0"))
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "cut_direct" (formula "60") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "false_right" (formula "61"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "closeTrue" (formula "60"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "notRight" (formula "61"))
                              (rule "replace_known_right" (formula "4") (term "0,1,0,0,0") (ifseqformula "61"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "61")))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "60"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "closeTrue" (formula "61"))
                           )
                        )
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                           (rule "orRight" (formula "44"))
                           (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                           (rule "cut_direct" (formula "62") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "false_right" (formula "63"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "62"))
                              (rule "closeTrue" (formula "62"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "notRight" (formula "63"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")))
                              (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "closeTrue" (formula "63"))
                           )
                        )
                     )
                     (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                        (rule "orRight" (formula "46"))
                        (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                        (rule "hideAuxiliaryEq" (formula "33"))
                        (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "46")))
                        (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "46"))
                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "45")))
                        (rule "ifthenelse_split" (formula "27") (term "0"))
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "cut_direct" (formula "63") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "false_right" (formula "64"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "closeTrue" (formula "63"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "notRight" (formula "64"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "64"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "closeTrue" (formula "64"))
                           )
                        )
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                           (rule "orRight" (formula "45"))
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                           (rule "cut_direct" (formula "16") (term "0"))
                           (branch "CUT: self_1672.<created> = TRUE TRUE"
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "cut_direct" (formula "65") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "false_right" (formula "66"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "65"))
                                 (rule "closeTrue" (formula "65"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "notRight" (formula "66"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "66"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                 (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "65"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "65"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                 (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "closeTrue" (formula "66"))
                              )
                           )
                           (branch "CUT: self_1672.<created> = TRUE FALSE"
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "cut_direct" (formula "66") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "false_right" (formula "67"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "closeTrue" (formula "66"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "notRight" (formula "67"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                 (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "66")))
                                 (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "closeTrue" (formula "67"))
                              )
                           )
                        )
                     )
                  )
                  (branch " result_1605.<created> = TRUE ∨ result_1605.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                     (rule "orRight" (formula "49"))
                     (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "41"))
                     (rule "hideAuxiliaryEq" (formula "41"))
                     (rule "replace_known_right" (formula "42") (term "1,0,0,0,0") (ifseqformula "49"))
                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                     (rule "replace_known_right" (formula "41") (term "1,0,0,0") (ifseqformula "49"))
                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "48")))
                     (rule "replace_known_right" (formula "40") (term "0,0,0,0") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "49")))
                     (rule "ifthenelse_split" (formula "33") (term "0"))
                     (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                        (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "34"))
                        (rule "applyEqReverse" (formula "36") (term "0,1,1,0") (ifseqformula "34"))
                        (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "true_left" (formula "32"))
                        (rule "ifthenelse_split" (formula "27") (term "0"))
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "seqGetAlphaCast" (formula "43") (term "0"))
                           (rule "castedGetAny" (formula "43") (term "0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "cut_direct" (formula "64") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "false_right" (formula "65"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "closeTrue" (formula "64"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "notRight" (formula "65"))
                              (rule "replace_known_right" (formula "4") (term "0,1,0,0,0") (ifseqformula "65"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "65"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "64")))
                              (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "closeTrue" (formula "65"))
                           )
                        )
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                           (rule "orRight" (formula "46"))
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")))
                           (rule "seqGetAlphaCast" (formula "43") (term "0"))
                           (rule "castedGetAny" (formula "43") (term "0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "cut_direct" (formula "66") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "67"))
                              (rule "false_right" (formula "67"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "closeTrue" (formula "66"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "67"))
                              (rule "notRight" (formula "67"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "67"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "66")))
                              (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "67"))
                              (rule "closeTrue" (formula "67"))
                           )
                        )
                     )
                     (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                        (rule "orRight" (formula "48"))
                        (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                        (rule "hideAuxiliaryEq" (formula "33"))
                        (rule "replace_known_right" (formula "33") (term "1,0,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "47")))
                        (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "47")))
                        (rule "ifthenelse_split" (formula "27") (term "0"))
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "seqGetAlphaCast" (formula "44") (term "0"))
                           (rule "castedGetAny" (formula "44") (term "0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "true_left" (formula "44"))
                           (rule "cut_direct" (formula "67") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "68"))
                              (rule "false_right" (formula "68"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "67"))
                              (rule "closeTrue" (formula "67"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "68"))
                              (rule "notRight" (formula "68"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                              (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "67")))
                              (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "68"))
                              (rule "closeTrue" (formula "68"))
                           )
                        )
                        (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                           (rule "orRight" (formula "47"))
                           (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "46"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "47")))
                           (rule "cut_direct" (formula "16") (term "0"))
                           (branch "CUT: self_1672.<created> = TRUE TRUE"
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "seqGetAlphaCast" (formula "44") (term "0"))
                              (rule "castedGetAny" (formula "44") (term "0"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "true_left" (formula "44"))
                              (rule "cut_direct" (formula "69") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "false_right" (formula "70"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "69"))
                                 (rule "closeTrue" (formula "69"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "notRight" (formula "70"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "69"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")))
                                 (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "closeTrue" (formula "70"))
                              )
                           )
                           (branch "CUT: self_1672.<created> = TRUE FALSE"
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "seqGetAlphaCast" (formula "44") (term "0"))
                              (rule "castedGetAny" (formula "44") (term "0"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "true_left" (formula "44"))
                              (rule "cut_direct" (formula "70") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "false_right" (formula "71"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "70"))
                                 (rule "closeTrue" (formula "70"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "notRight" (formula "71"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,0,0") (ifseqformula "71"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")))
                                 (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "closeTrue" (formula "71"))
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Null Reference (c_32 = null)"
                (builtin "One Step Simplification" (formula "52"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (extractInputColsForPolyas)"
             (builtin "One Step Simplification" (formula "28"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "andLeft" (formula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "31"))
            (rule "notLeft" (formula "29"))
            (rule "close" (formula "33") (ifseqformula "32"))
         )
         (branch "Pre (extractInputColsForPolyas)"
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "28")) (ifInst ""  (formula "38")) (ifInst ""  (formula "28")) (ifInst ""  (formula "38")))
            (rule "castedGetAny" (formula "40") (term "0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,1,0,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0,1") (ifseqformula "21"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,1,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,1") (ifseqformula "21"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,1,0"))
            (rule "castedGetAny" (formula "40") (term "0,0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,1") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "12")))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,1") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "1")))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
            (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
            (rule "polySimp_elimOne" (formula "15") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
            (rule "wellFormedStoreObject" (formula "40") (term "1"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "27")))
            (rule "wellFormedAnonEQ" (formula "40") (term "0,1") (ifseqformula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,1") (ifseqformula "21"))
            (rule "replace_known_left" (formula "40") (term "1,0,1") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,1") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "wellFormedStoreObject" (formula "40") (term "0,1"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "28")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0,1") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "12")))
            (rule "wellFormedAnonEQ" (formula "40") (term "0,1") (ifseqformula "11"))
            (rule "wellFormedAnon" (formula "40") (term "0,0,1"))
            (rule "replace_known_left" (formula "40") (term "0,0,0,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "9")) (ifInst ""  (formula "10")))
            (rule "pullOutSelect" (formula "40") (term "0,0,1,0,0,1,0") (inst "selectSK=java_util_Collection_seq_5"))
            (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "41") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "replaceKnownSelect_taclet0_18" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "41") (term "0,0,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "nnf_imp2or" (formula "25") (term "0"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_notAnd" (formula "25") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
            (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
            (rule "mul_literals" (formula "25") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "40") (term "0,0,0"))
            (rule "nnf_notAnd" (formula "40") (term "0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "40") (term "1,1,0"))
            (rule "insert_constant_string_value" (formula "40") (term "0,0,1,0,0,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "insert_constant_string_value" (formula "40") (term "0,0,1,0,0,0,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "insert_constant_string_value" (formula "40") (term "0,0,1,0,0,0,0,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "castDel" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
            (rule "castDel" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "castDel" (formula "40") (term "0,0,0,1,0,0,0,0,1,1,0"))
            (rule "replace_known_right" (formula "40") (term "0,1,0,0,1,1,0") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
            (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,1,1,0"))
            (rule "replaceKnownSelect_taclet000_45" (formula "40") (term "1,0,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_48" (formula "40") (term "1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,1,1,0"))
            (rule "replaceKnownSelect_taclet000_49" (formula "40") (term "1,1,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_52" (formula "40") (term "1,1,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,1,1,0"))
            (rule "replaceKnownSelect_taclet000_29" (formula "40") (term "0,1,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "40") (term "0,1,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,1,1,0"))
            (rule "replaceKnownSelect_taclet000_33" (formula "40") (term "0,0,1,0,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_36" (formula "40") (term "0,0,1,0,0,1,1,0"))
            (rule "replace_known_right" (formula "40") (term "0,1,0,0,1,1,0") (ifseqformula "32"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,1,0"))
            (rule "replaceKnownSelect_taclet000_29" (formula "40") (term "0,0,1,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "40") (term "0,0,1,0,1,1,0"))
            (rule "replace_known_right" (formula "40") (term "0,1,0,1,1,0") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,1,0"))
            (rule "replaceKnownSelect_taclet000_41" (formula "40") (term "0,0,1,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_44" (formula "40") (term "0,0,1,0,1,1,0"))
            (rule "replace_known_right" (formula "40") (term "0,1,0,1,1,0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,1,1,0"))
            (rule "replaceKnownSelect_taclet000_29" (formula "40") (term "0,0,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "40") (term "0,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,1,1,0"))
            (rule "replaceKnownSelect_taclet000_37" (formula "40") (term "0,0,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_40" (formula "40") (term "0,0,0,1,1,0"))
            (rule "replace_known_right" (formula "40") (term "0,0,1,1,0") (ifseqformula "31"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "commute_or_2" (formula "25") (term "0"))
            (rule "commute_or_2" (formula "18") (term "0"))
            (rule "commute_or_2" (formula "40") (term "1"))
            (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "commute_or" (formula "25") (term "0,0"))
            (rule "commute_or_2" (formula "25") (term "0"))
            (rule "commute_or" (formula "18") (term "0,0"))
            (rule "commute_or_2" (formula "18") (term "0"))
            (rule "commute_or" (formula "40") (term "1,1"))
            (rule "replace_known_left" (formula "40") (term "1,1") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "ifthenelse_split" (formula "23") (term "0"))
            (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
               (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "applyEqReverse" (formula "25") (term "0,1,1,0") (ifseqformula "24"))
               (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "ifthenelse_split" (formula "17") (term "0"))
               (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                  (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0,0,0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "39") (term "0,0,1,0,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "19") (term "0,1,1,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "18"))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "andRight" (formula "37"))
                  (branch
                     (rule "allRight" (formula "37") (inst "sk=i_1"))
                     (rule "orRight" (formula "37"))
                     (rule "notRight" (formula "38"))
                     (rule "orRight" (formula "38"))
                     (rule "inEqSimp_geqRight" (formula "39"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "39"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "cut_direct" (formula "9") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                        (rule "add_literals" (formula "20") (term "0,0,1"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "closeFalse" (formula "20"))
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "closeFalse" (formula "20"))
                     )
                  )
                  (branch
                     (rule "nnf_ex2all" (formula "37"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "cut_direct" (formula "7") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "allLeft" (formula "1") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "allLeft" (formula "1") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                  )
               )
               (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                  (rule "orRight" (formula "25"))
                  (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "40") (term "0,0,0,1,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "40") (term "0,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "40") (term "0,1,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,1,0") (ifseqformula "17"))
                  (rule "hideAuxiliaryEq" (formula "17"))
                  (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "24")))
                  (rule "andRight" (formula "39"))
                  (branch
                     (rule "allRight" (formula "39") (inst "sk=i_1"))
                     (rule "orRight" (formula "39"))
                     (rule "notRight" (formula "40"))
                     (rule "orRight" (formula "40"))
                     (rule "inEqSimp_leqRight" (formula "40"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "41"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "cut_direct" (formula "9") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "20"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "20"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch
                     (rule "nnf_ex2all" (formula "39"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "cut_direct" (formula "7") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "allLeft" (formula "1") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "15"))
                        (rule "qeq_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "allLeft" (formula "1") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "15"))
                        (rule "qeq_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
            )
            (branch " result_1604.<created> = TRUE ∨ result_1604.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
               (rule "orRight" (formula "27"))
               (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
               (rule "hideAuxiliaryEq" (formula "23"))
               (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "26")))
               (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "27")))
               (rule "ifthenelse_split" (formula "17") (term "0"))
               (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "42") (term "0,1,1,0,0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0,0,0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "42") (term "0,0,1,0,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "19") (term "0,1,1,0") (ifseqformula "18"))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "andRight" (formula "40"))
                  (branch
                     (rule "allRight" (formula "40") (inst "sk=i_1"))
                     (rule "orRight" (formula "40"))
                     (rule "notRight" (formula "41"))
                     (rule "orRight" (formula "41"))
                     (rule "inEqSimp_geqRight" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "42"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "cut_direct" (formula "9") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                        (rule "add_literals" (formula "20") (term "0,0,1"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "closeFalse" (formula "20"))
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "20"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_literals" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch
                     (rule "nnf_ex2all" (formula "40"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "cut_direct" (formula "7") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "ifthenelse_split" (formula "23") (term "0"))
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "0,1,1,0") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                           (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "0,1,1,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "ifthenelse_split" (formula "23") (term "0"))
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "25") (term "0,1,1,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                           (rule "andLeft" (formula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "leq_literals" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                           (rule "applyEqReverse" (formula "24") (term "0,1,1,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
               (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
                  (rule "orRight" (formula "26"))
                  (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "43") (term "0,0,1,0,1") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0,1") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,1,0") (ifseqformula "17"))
                  (rule "hideAuxiliaryEq" (formula "17"))
                  (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "26")))
                  (rule "andRight" (formula "42"))
                  (branch
                     (rule "allRight" (formula "42") (inst "sk=i_1"))
                     (rule "orRight" (formula "42"))
                     (rule "notRight" (formula "43"))
                     (rule "orRight" (formula "43"))
                     (rule "inEqSimp_geqRight" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "44"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "cut_direct" (formula "9") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "2"))
                        (rule "andLeft" (formula "20"))
                        (rule "inEqSimp_homoInEq1" (formula "20"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0"))
                        (rule "add_zero_right" (formula "20") (term "0"))
                        (rule "leq_literals" (formula "20"))
                        (rule "closeFalse" (formula "20"))
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0,0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "2"))
                        (rule "andLeft" (formula "20"))
                        (rule "inEqSimp_homoInEq1" (formula "20"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0"))
                        (rule "add_literals" (formula "20") (term "0"))
                        (rule "leq_literals" (formula "20"))
                        (rule "closeFalse" (formula "20"))
                     )
                  )
                  (branch
                     (rule "nnf_ex2all" (formula "42"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "1") (term "0"))
                     (rule "commute_or" (formula "1") (term "0,0"))
                     (rule "cut_direct" (formula "7") (term "0"))
                     (branch "CUT: self_1672.<created> = TRUE TRUE"
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "ifthenelse_split" (formula "23") (term "0"))
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "0,1,1,0") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                           (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "0,1,1,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                     )
                     (branch "CUT: self_1672.<created> = TRUE FALSE"
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "ifthenelse_split" (formula "23") (term "0"))
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE TRUE"
                           (rule "applyEqReverse" (formula "25") (term "0,1,1,0") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch " result_1604.<created>@anon_heap_parseInputCols«anonHeapFunction» = TRUE FALSE"
                           (rule "applyEqReverse" (formula "24") (term "0,1,1,0") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "1") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Null Reference (c_31 = null)"
          (builtin "One Step Simplification" (formula "38"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (extractInputColsForDist)"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "andLeft" (formula "18"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,0") (ifseqformula "18"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "21"))
      (rule "notLeft" (formula "19"))
      (rule "close" (formula "23") (ifseqformula "22"))
   )
   (branch "Pre (extractInputColsForDist)"
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "17")) (ifInst ""  (formula "27")) (ifInst ""  (formula "17")) (ifInst ""  (formula "27")))
      (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,0,1,0,0,0"))
      (rule "replaceKnownSelect_taclet0_18" (formula "29") (term "0,0,0,0,1,0,0,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,1,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet0_18" (formula "29") (term "0,1,1,0,0,0,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,1,0,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0,1") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "10")))
      (rule "castedGetAny" (formula "29") (term "0,0,1,0,0,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,1,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "12"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
      (rule "polySimp_elimOne" (formula "12") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
      (rule "wellFormedStoreObject" (formula "29") (term "0,1"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "17")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0,1") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "10")))
      (rule "wellFormedAnonEQ" (formula "29") (term "0,1") (ifseqformula "9"))
      (rule "wellFormedAnon" (formula "29") (term "0,0,1"))
      (rule "replace_known_left" (formula "29") (term "0,0,0,1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "7")) (ifInst ""  (formula "8")))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "29") (term "0,0,0"))
      (rule "nnf_notAnd" (formula "29") (term "0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
      (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "29") (term "1,0"))
      (rule "insert_constant_string_value" (formula "29") (term "0,0,1,0,0,1,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "insert_constant_string_value" (formula "29") (term "0,0,1,0,0,0,1,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "insert_constant_string_value" (formula "29") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "castDel" (formula "29") (term "0,0,0,1,0,0,1,0"))
      (rule "castDel" (formula "29") (term "0,0,0,1,0,0,0,0,1,0"))
      (rule "castDel" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
      (rule "replace_known_right" (formula "29") (term "0,1,0,0,1,0") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "22")) (ifInst ""  (formula "23")))
      (rule "dismissNonSelectedField" (formula "29") (term "1,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,1,1,1,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "1,0,1,1,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,0,1,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,0,1,0,1,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,0,1,0,0,0,1,0"))
      (rule "dismissNonSelectedField" (formula "29") (term "0,0,1,1,0"))
      (rule "pullOutSelect" (formula "29") (term "1,1,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MAX_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet_4" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet_5" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "30") (term "1,1,1,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "29") (term "0,1,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasMode_1"))
      (rule "applyEq" (formula "30") (term "0,0,1,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "30") (term "0,0,1,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet_6" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet_7" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "30") (term "0,0,1,0,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "30") (term "0,0,1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "29") (term "0,1,1,0"))
      (rule "replace_known_right" (formula "29") (term "0,1,0,1,0") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "pullOutSelect" (formula "29") (term "0,0,1,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet_12" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet_13" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "30") (term "0,0,1,0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "29") (term "0,1,0,0,1,0") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "pullOutSelect" (formula "29") (term "0,0,1,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet_8" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet_9" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "30") (term "0,0,1,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "29") (term "0,1,0,1,0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "pullOutSelect" (formula "29") (term "0,0,1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_FieldsForPolyasMode_MIN_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet_14" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet_15" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "30") (term "0,0,1,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "29") (term "0,1,1,0"))
      (rule "pullOutSelect" (formula "29") (term "0,0,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_distVals_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet_10" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet_11" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "30") (term "0,0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "commute_or" (formula "29") (term "1,0"))
      (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "commute_or" (formula "15") (term "0,0"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "ifthenelse_split" (formula "14") (term "0"))
      (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE TRUE"
         (rule "applyEqReverse" (formula "13") (term "0,0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0,0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "16") (term "0,1,1,0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0,0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "cut_direct" (formula "4") (term "0"))
         (branch "CUT: self_1672.<created> = TRUE TRUE"
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "allLeft" (formula "14") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
            (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "andRight" (formula "28"))
            (branch
               (rule "allRight" (formula "28") (inst "sk=i_1"))
               (rule "orRight" (formula "28"))
               (rule "orRight" (formula "28"))
               (rule "notRight" (formula "30"))
               (rule "inEqSimp_leqRight" (formula "29"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "30"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "allLeft" (formula "17") (inst "t=i_1"))
               (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
               (rule "add_literals" (formula "17") (term "0,0,1"))
               (rule "leq_literals" (formula "17") (term "0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "orRight" (formula "28"))
               (rule "orRight" (formula "28"))
               (rule "referencedObjectIsCreatedRight" (formula "29") (ifseqformula "26"))
               (rule "close" (formula "29") (ifseqformula "7"))
            )
         )
         (branch "CUT: self_1672.<created> = TRUE FALSE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "allLeft" (formula "14") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
            (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "andRight" (formula "29"))
            (branch
               (rule "allRight" (formula "29") (inst "sk=i_1"))
               (rule "orRight" (formula "29"))
               (rule "notRight" (formula "30"))
               (rule "orRight" (formula "30"))
               (rule "inEqSimp_leqRight" (formula "30"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "31"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "allLeft" (formula "17") (inst "t=i_1"))
               (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "17") (term "0,0,1"))
               (rule "leq_literals" (formula "17") (term "0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "orRight" (formula "29"))
               (rule "orRight" (formula "29"))
               (rule "referencedObjectIsCreatedRight" (formula "30") (ifseqformula "27"))
               (rule "close" (formula "30") (ifseqformula "7"))
            )
         )
      )
      (branch " result_1603.<created> = TRUE ∨ result_1603.<created>@anonIn_heap«anonHeapFunction» = TRUE FALSE"
         (rule "orRight" (formula "17"))
         (rule "applyEqReverse" (formula "13") (term "0,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "31") (term "0,0,0,1,0,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "15") (term "0,1,1,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0,0") (ifseqformula "14"))
         (rule "hideAuxiliaryEq" (formula "14"))
         (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "17")))
         (rule "cut_direct" (formula "4") (term "0"))
         (branch "CUT: self_1672.<created> = TRUE TRUE"
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "allLeft" (formula "14") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
            (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "29"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "andRight" (formula "30"))
            (branch
               (rule "allRight" (formula "30") (inst "sk=i_1"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "30"))
               (rule "notRight" (formula "32"))
               (rule "inEqSimp_leqRight" (formula "31"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "32"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "allLeft" (formula "17") (inst "t=i_1"))
               (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
               (rule "add_literals" (formula "17") (term "0,0,1"))
               (rule "leq_literals" (formula "17") (term "0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
               (rule "qeq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "30"))
               (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "28"))
               (rule "close" (formula "31") (ifseqformula "7"))
            )
         )
         (branch "CUT: self_1672.<created> = TRUE FALSE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "allLeft" (formula "14") (inst "t=i_0"))
            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
            (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "13"))
            (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "andRight" (formula "31"))
            (branch
               (rule "allRight" (formula "31") (inst "sk=i_1"))
               (rule "orRight" (formula "31"))
               (rule "orRight" (formula "31"))
               (rule "notRight" (formula "33"))
               (rule "inEqSimp_geqRight" (formula "33"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "33"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "allLeft" (formula "17") (inst "t=i_1"))
               (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
               (rule "add_literals" (formula "17") (term "0,0,1"))
               (rule "leq_literals" (formula "17") (term "0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
               (rule "qeq_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "closeFalse" (formula "17"))
            )
            (branch
               (rule "orRight" (formula "31"))
               (rule "orRight" (formula "31"))
               (rule "referencedObjectIsCreatedRight" (formula "32") (ifseqformula "29"))
               (rule "close" (formula "32") (ifseqformula "7"))
            )
         )
      )
   )
)
(branch "Exceptional Post (parseInputCols)"
    (builtin "One Step Simplification" (formula "21"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "14") (ifseqformula "13"))
)
(branch "Pre (parseInputCols)"
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")))
   (rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "19") (term "1,0"))
   (rule "replaceKnownSelect_taclet_16" (formula "19") (term "0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_17" (formula "19") (term "0,0,1,0"))
   (rule "replace_known_right" (formula "19") (term "0,1,0") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "19") (term "0"))
   (rule "replaceKnownSelect_taclet_4" (formula "19") (term "1,1,1,0"))
   (rule "replaceKnownSelect_taclet_6" (formula "19") (term "0,1,1,0"))
   (rule "replaceKnownSelect_taclet_14" (formula "19") (term "1,0,1,0"))
   (rule "replaceKnownSelect_taclet_6" (formula "19") (term "0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_5" (formula "19") (term "1,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_7" (formula "19") (term "0,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_15" (formula "19") (term "1,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_7" (formula "19") (term "0,0,1,0"))
   (rule "replaceKnownSelect_taclet_6" (formula "19") (term "0,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_7" (formula "19") (term "0,0,1,0,0"))
   (rule "insert_constant_string_value" (formula "19") (term "0,0,1,0,0,0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")))
   (rule "insert_constant_string_value" (formula "19") (term "0,0,1,0,0,0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "insert_constant_string_value" (formula "19") (term "0,0,1,0,0,0,0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "replaceKnownSelect_taclet_8" (formula "19") (term "0,0,1,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_9" (formula "19") (term "0,0,1,0,0,0,0,0"))
   (rule "replaceKnownSelect_taclet_10" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
   (rule "replaceKnownSelect_taclet_12" (formula "19") (term "0,0,1,0,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_11" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet_13" (formula "19") (term "0,0,1,0,0,0,0,0,0"))
   (rule "castDel" (formula "19") (term "0,0,0,1,0,0"))
   (rule "castDel" (formula "19") (term "0,0,0,1,0,0,0"))
   (rule "castDel" (formula "19") (term "0,0,0,1,0,0,0,0"))
   (rule "replace_known_right" (formula "19") (term "0,1,0,0,0,0,0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "10")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
   (rule "commute_or" (formula "19") (term "0"))
   (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "2"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "orRight" (formula "19"))
   (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "16"))
   (rule "close" (formula "20") (ifseqformula "7"))
)
)
}
