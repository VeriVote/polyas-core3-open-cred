\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 02:16:20 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 02:16:20 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:parseInputCols(java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:parseInputCols(java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "4240")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "fileName,self_171,result_199,exc_227,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "6"))
 (builtin "One Step Simplification" (formula "6"))
(rule "insert_constant_string_value" (formula "6") (term "0,0,1,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "insert_constant_string_value" (formula "6") (term "0,0,1,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "insert_constant_string_value" (formula "6") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "castDel" (formula "6") (term "0,0,0,1,0,0"))
(rule "castDel" (formula "6") (term "0,0,0,1,0,0,0,0"))
(rule "castDel" (formula "6") (term "0,0,0,1,0,0,0"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "applyEq" (formula "14") (term "0") (ifseqformula "6"))
(rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_parseInputCols,savedHeapBefore_parseInputCols"))
 (builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationFinalAssign" (formula "17") (term "1"))
(rule "variableDeclarationFinal" (formula "17") (term "1") (newnames "parser"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "17") (term "1"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "var"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "17") (term "1") (inst "#v0=c"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "c_3"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "17") (term "1") (inst "#v0=c_4"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "c_4"))
(rule "activeUseStaticFieldReadAccess" (formula "17") (term "1"))
(rule "assignment_read_static_attribute" (formula "17") (term "1"))
 (builtin "One Step Simplification" (formula "17"))
 (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_withFirstRecordAsHeader,result_200,exc_228,heapAfter_withFirstRecordAsHeader,anon_heap_withFirstRecordAsHeader") (contract "org.apache.commons.csv.CSVFormat[org.apache.commons.csv.CSVFormat::withFirstRecordAsHeader()].JML normal_behavior operation contract.0"))
(branch "Post (withFirstRecordAsHeader)"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,1,0") (ifseqformula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "12"))
   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "assignment" (formula "23") (term "1"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "11"))
   (rule "notLeft" (formula "11"))
   (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
    (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_withDelimiter,result_201,exc_229,heapAfter_withDelimiter,anon_heap_withDelimiter") (contract "org.apache.commons.csv.CSVFormat[org.apache.commons.csv.CSVFormat::withDelimiter(char)].JML normal_behavior operation contract.0"))
   (branch "Post (withDelimiter)"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,1,0") (ifseqformula "8"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "15"))
      (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "assignment" (formula "28") (term "1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "var_1"))
      (rule "assignment" (formula "28") (term "1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "commute_or_2" (formula "13"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1") (ifseqformula "1"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "methodCallWithAssignmentWithinClass" (formula "32") (term "1") (inst "#v0=c"))
      (rule "variableDeclaration" (formula "32") (term "1") (newnames "c_5"))
      (rule "variableDeclarationFinalAssign" (formula "32") (term "1"))
      (rule "variableDeclarationFinal" (formula "32") (term "1") (newnames "csv"))
      (rule "assignment" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "variableDeclarationFinalAssign" (formula "32") (term "1"))
      (rule "variableDeclarationFinal" (formula "32") (term "1") (newnames "fName"))
      (rule "assignment" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_parse,savedHeapBefore_parse"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "returnUnfold" (formula "32") (term "1") (inst "#v0=c_6"))
      (rule "variableDeclarationAssign" (formula "32") (term "1"))
      (rule "variableDeclaration" (formula "32") (term "1") (newnames "c_6"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "32") (term "1"))
      (rule "variableDeclarationAssign" (formula "32") (term "1"))
      (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_2"))
      (rule "assignment" (formula "32") (term "1"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "variableDeclarationAssign" (formula "32") (term "1"))
      (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_3"))
       (builtin "Use Operation Contract" (formula "32") (newnames "heapBefore_FileReader,self_172,exc_230,heapAfter_FileReader,anon_heap_FileReader") (contract "java.io.FileReader[java.io.FileReader::FileReader(java.lang.String)].JML normal_behavior operation contract.0"))
      (branch "Post (FileReader)"
          (builtin "One Step Simplification" (formula "21"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,1,0,1,0,1") (ifseqformula "13"))
         (rule "andLeft" (formula "21"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0,1,0") (ifseqformula "21"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,1,0,1,0") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1,1,0,1,0") (ifseqformula "13"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "22"))
         (rule "notLeft" (formula "22"))
         (rule "orRight" (formula "26"))
         (rule "orRight" (formula "26"))
         (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "28"))
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")))
         (rule "assignment" (formula "42") (term "1"))
          (builtin "One Step Simplification" (formula "42"))
          (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_parse_0,result_202,exc_231,heapAfter_parse,anon_heap_parse") (contract "org.apache.commons.csv.CSVFormat[org.apache.commons.csv.CSVFormat::parse(java.io.Reader)].JML normal_behavior operation contract.0"))
         (branch "Post (parse)"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "andLeft" (formula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,1,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,1,0") (ifseqformula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,1,0") (ifseqformula "17"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,1,0") (ifseqformula "13"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "notLeft" (formula "30"))
            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "31"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "assignment" (formula "48") (term "1"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "blockEmpty" (formula "48") (term "1"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "29"))
            (rule "notLeft" (formula "29"))
            (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet00_2" (formula "1") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commute_or_2" (formula "28"))
            (rule "commute_or_2" (formula "28") (term "0,0"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commute_or_2" (formula "28"))
            (rule "tryReturn" (formula "47") (term "1"))
            (rule "methodCallReturn" (formula "47") (term "1"))
            (rule "assignment" (formula "47") (term "1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "methodCallEmpty" (formula "47") (term "1"))
            (rule "blockEmpty" (formula "47") (term "1"))
            (rule "assignment" (formula "47") (term "1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "blockEmpty" (formula "47") (term "1"))
            (rule "variableDeclarationFinal" (formula "47") (term "1") (newnames "inputColMap"))
            (rule "ifElseUnfold" (formula "47") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "47") (term "1") (newnames "x"))
            (rule "inequality_comparison_simple" (formula "47") (term "1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "replace_known_right" (formula "47") (term "0,0,1,0") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "ifElseSplit" (formula "47"))
            (branch "if x true"
                (builtin "One Step Simplification" (formula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
                (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore_getHeaderMap,result_203,exc_232,heapAfter_getHeaderMap,anon_heap_getHeaderMap") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getHeaderMap()].JML normal_behavior operation contract.0"))
               (branch "Post (getHeaderMap)"
                   (builtin "One Step Simplification" (formula "31"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "andLeft" (formula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,1,0") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,1,0") (ifseqformula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,1,1,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0,1,1,0") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0,0,1,1,0") (ifseqformula "13"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "35"))
                  (rule "notLeft" (formula "36"))
                  (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "castedGetAny" (formula "33") (term "0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                  (rule "assignment" (formula "55") (term "1"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "blockEmpty" (formula "55") (term "1"))
                  (rule "pullOutSelect" (formula "33") (term "0,1,1,0,0") (inst "selectSK=java_util_Map_key_seq_0"))
                  (rule "applyEq" (formula "34") (term "0,0,0,1,0") (ifseqformula "33"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0,0,0") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (rule "ifthenelse_negated" (formula "33") (term "0"))
                  (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=java_util_Map_key_seq_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "39")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0,0") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0,0,0") (ifseqformula "13"))
                  (rule "ifthenelse_negated" (formula "33") (term "0"))
                  (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=java_util_Map_key_seq_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0,0") (ifseqformula "13"))
                  (rule "ifthenelse_negated" (formula "33") (term "0"))
                  (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=java_util_Map_key_seq_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "41")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "13"))
                  (rule "ifthenelse_negated" (formula "33") (term "0"))
                  (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=java_util_Map_key_seq_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")))
                  (rule "ifthenelse_negated" (formula "33") (term "0"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "commute_or_2" (formula "32"))
                  (rule "commute_or_2" (formula "36") (term "0,0"))
                  (rule "commute_or_2" (formula "35") (term "0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0,0"))
                  (rule "commute_or_2" (formula "32") (term "0,0"))
                  (rule "commute_or_2" (formula "32") (term "0"))
                  (rule "commute_or_2" (formula "32"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "commute_and" (formula "38") (term "0,0"))
                  (rule "commute_or_2" (formula "36") (term "0,0,0"))
                  (rule "commute_or_2" (formula "36") (term "0,0"))
                  (rule "commute_or_2" (formula "32") (term "0,0,0"))
                  (rule "commute_or_2" (formula "32") (term "0,0"))
                  (rule "commute_or_2" (formula "32") (term "0"))
                  (rule "commute_or_2" (formula "32"))
                  (rule "commute_or_2" (formula "37") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0,0"))
                  (rule "commute_or_2" (formula "37") (term "0,0"))
                  (rule "returnUnfold" (formula "59") (term "1") (inst "#v0=l"))
                  (rule "variableDeclarationAssign" (formula "59") (term "1"))
                  (rule "variableDeclaration" (formula "59") (term "1") (newnames "l"))
                  (rule "instanceCreationAssignmentUnfoldArguments" (formula "59") (term "1"))
                  (rule "variableDeclarationAssign" (formula "59") (term "1"))
                  (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_4"))
                   (builtin "Use Operation Contract" (formula "59") (newnames "heapBefore_keySet,result_204,exc_233,heapAfter_keySet,anon_heap_keySet") (contract "java.util.Map[java.util.Map::keySet()].JML normal_behavior operation contract.0"))
                  (branch "Post (keySet)"
                      (builtin "One Step Simplification" (formula "61"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,1,0,1,1") (ifseqformula "31"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,1,0,1,1") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0,0,0,1,0,1,1") (ifseqformula "13"))
                     (rule "andLeft" (formula "42"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1,0") (ifseqformula "42"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,1,0") (ifseqformula "31"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,1,1,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,1,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,1,1,0") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,1,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "47"))
                     (rule "notLeft" (formula "45"))
                     (rule "orRight" (formula "47"))
                     (rule "orRight" (formula "47"))
                     (rule "orRight" (formula "47"))
                     (rule "orRight" (formula "47"))
                     (rule "orRight" (formula "47"))
                     (rule "eqSymm" (formula "44"))
                     (rule "replace_known_right" (formula "43") (term "1,0,0,1") (ifseqformula "51"))
                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "53")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "52")))
                     (rule "assignment" (formula "72") (term "1"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "pullOutSelect" (formula "44") (term "1") (inst "selectSK=java_util_Collection_seq_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "42"))
                      (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "55")))
                     (rule "replaceKnownSelect_taclet000000_7" (formula "45") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "31"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0,0") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                     (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "42"))
                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "54")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "31"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "44") (term "1,0,0,0") (ifseqformula "53"))
                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                     (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "44"))
                     (rule "hideAuxiliaryEq" (formula "44"))
                     (rule "ifthenelse_negated" (formula "44") (term "0"))
                     (rule "commute_or_2" (formula "44") (term "0,0"))
                     (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "44") (term "0,0,0"))
                     (rule "commute_or_2" (formula "44") (term "0,0"))
                     (rule "commute_or_2" (formula "44") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "44") (term "0,0,0"))
                     (rule "commute_or_2" (formula "44") (term "0,0"))
                     (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "eqSymm" (formula "44"))
                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "44"))
                     (rule "applyEqReverse" (formula "38") (term "0,1,0,0,0") (ifseqformula "44"))
                     (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0") (ifseqformula "44"))
                     (rule "hideAuxiliaryEq" (formula "44"))
                      (builtin "Use Operation Contract" (formula "71") (newnames "heapBefore_LinkedList,self_173,exc_234,heapAfter_LinkedList,anon_heap_LinkedList") (contract "java.util.LinkedList[java.util.LinkedList::LinkedList(java.util.Collection)].JML normal_behavior operation contract.0"))
                     (branch "Post (LinkedList)"
                         (builtin "One Step Simplification" (formula "47"))
                         (builtin "One Step Simplification" (formula "73"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,0,1,0,1") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,1,0,1,0,1") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "13"))
                        (rule "andLeft" (formula "47"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "1,1,0,1,0") (ifseqformula "47"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,1,0,1,0") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,1,1,0,1,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,1,1,0,1,0") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "13"))
                        (rule "andLeft" (formula "48"))
                        (rule "andLeft" (formula "49"))
                        (rule "andLeft" (formula "48"))
                        (rule "andLeft" (formula "49"))
                        (rule "andLeft" (formula "48"))
                        (rule "andLeft" (formula "48"))
                        (rule "notLeft" (formula "48"))
                        (rule "andLeft" (formula "48"))
                        (rule "notLeft" (formula "48"))
                        (rule "orRight" (formula "53"))
                        (rule "orRight" (formula "53"))
                        (rule "orRight" (formula "53"))
                        (rule "orRight" (formula "53"))
                        (rule "orRight" (formula "53"))
                        (rule "orRight" (formula "53"))
                        (rule "eqSymm" (formula "50"))
                        (rule "replace_known_right" (formula "48") (term "1,0,0,0,0") (ifseqformula "56"))
                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                        (rule "assignment" (formula "86") (term "1"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "blockEmpty" (formula "86") (term "1"))
                        (rule "pullOutSelect" (formula "50") (term "1") (inst "selectSK=java_util_Collection_seq_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,0") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,0,0") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,0,0,0") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,0,0,0,0") (ifseqformula "13"))
                        (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "68")))
                        (rule "replaceKnownSelect_taclet0000000_13" (formula "51") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_14" (formula "51") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0,0") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0,0,0") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,0,0,0,0,0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "50") (term "1,0,0,0,0,0,0,0") (ifseqformula "56"))
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                        (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "50"))
                        (rule "hideAuxiliaryEq" (formula "50"))
                        (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "43"))
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")) (ifInst ""  (formula "63")) (ifInst ""  (formula "64")) (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                        (rule "applyEq" (formula "38") (term "0,0,0,1,0") (ifseqformula "50"))
                        (rule "applyEq" (formula "37") (term "1") (ifseqformula "50"))
                        (rule "applyEq" (formula "38") (term "0,1,0,0,0") (ifseqformula "50"))
                        (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "51"))
                        (rule "true_left" (formula "51"))
                        (rule "methodCallReturn" (formula "85") (term "1"))
                        (rule "assignment" (formula "85") (term "1"))
                         (builtin "One Step Simplification" (formula "85"))
                        (rule "methodCallEmpty" (formula "85") (term "1"))
                        (rule "tryEmpty" (formula "85") (term "1"))
                        (rule "emptyModality" (formula "85") (term "1"))
                        (rule "andRight" (formula "85"))
                        (branch
                           (rule "andRight" (formula "85"))
                           (branch
                              (rule "andRight" (formula "85"))
                              (branch
                                  (builtin "One Step Simplification" (formula "85"))
                                 (rule "replaceKnownSelect_taclet00000000_16" (formula "85") (term "0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00000000_16" (formula "85") (term "0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_18" (formula "85") (term "0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_18" (formula "85") (term "0,1,1,0,0"))
                                 (rule "allRight" (formula "85") (inst "sk=i_0"))
                                 (rule "impRight" (formula "85"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "87"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "commute_or" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0"))
                                 (rule "ifthenelse_split" (formula "36") (term "0"))
                                 (branch "result_203.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "replace_known_left" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "eqSymm" (formula "40"))
                                    (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "replace_known_left" (formula "35") (term "0,0,0,0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "37") (term "0,0,0,0,0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "49") (term "1") (ifseqformula "36"))
                                    (rule "allLeft" (formula "37") (inst "t=i_0"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "37") (term "0,0,1"))
                                    (rule "leq_literals" (formula "37") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "closeFalse" (formula "37"))
                                 )
                                 (branch "result_203.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "replace_known_right" (formula "38") (term "0,0,0,0,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "replace_known_right" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "37") (term "0,0,0,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "replace_known_right" (formula "35") (term "0,0,0,0,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "ifthenelse_split" (formula "36") (term "0"))
                                    (branch " result_203.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "replace_known_left" (formula "38") (term "1,0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_left" (formula "38") (term "1,0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "37") (inst "t=i_0"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "3"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "inEqSimp_homoInEq1" (formula "37"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0"))
                                       (rule "add_literals" (formula "37") (term "0"))
                                       (rule "leq_literals" (formula "37"))
                                       (rule "closeFalse" (formula "37"))
                                    )
                                    (branch " result_203.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
                                       (rule "hideAuxiliaryEq" (formula "36"))
                                       (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "allLeft" (formula "39") (inst "t=i_0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "3"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "39"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0"))
                                       (rule "add_literals" (formula "39") (term "0"))
                                       (rule "leq_literals" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                 )
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "59")))
                                 (rule "closeTrue" (formula "85"))
                              )
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "85"))
                              (rule "closeTrue" (formula "85"))
                           )
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "allRight" (formula "85") (inst "sk=f_0"))
                           (rule "allRight" (formula "85") (inst "sk=o_0"))
                           (rule "orRight" (formula "85"))
                           (rule "eqSymm" (formula "86"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                           (rule "pullOutSelect" (formula "86") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "32"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "28"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "87"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "23"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "19"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "15"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "17"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "nnf_imp2or" (formula "44") (term "0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "44") (term "0"))
                           (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                           (rule "commute_or" (formula "44") (term "0,0"))
                           (rule "commute_or_2" (formula "44") (term "0"))
                           (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                           (rule "commute_or_2" (formula "5") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                           (rule "commute_or_2" (formula "6") (term "0,0,0,1,0,0"))
                           (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                           (rule "ifthenelse_split" (formula "39") (term "0"))
                           (branch "result_203.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                              (rule "hideAuxiliaryEq" (formula "40"))
                              (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "41"))
                              (rule "hideAuxiliaryEq" (formula "41"))
                              (rule "replace_known_left" (formula "41") (term "0,0,0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "41"))
                              (rule "hideAuxiliaryEq" (formula "41"))
                              (rule "replace_known_left" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                              (rule "hideAuxiliaryEq" (formula "40"))
                              (rule "eqSymm" (formula "40"))
                              (rule "replace_known_left" (formula "38") (term "0,0,0,0,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "true_left" (formula "38"))
                              (rule "applyEq" (formula "52") (term "1") (ifseqformula "39"))
                              (rule "applyEq" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                              (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "39"))
                              (rule "commute_or_2" (formula "5") (term "0,0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "54"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                 (rule "replace_known_right" (formula "5") (term "1,0,1,0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "55")) (ifInst ""  (formula "53")))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                 (rule "replace_known_right" (formula "89") (term "0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "53")))
                                 (rule "closeTrue" (formula "89"))
                              )
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "cut_direct" (formula "87") (term "0,0"))
                                 (branch "CUT: o_0 = null TRUE"
                                     (builtin "One Step Simplification" (formula "88"))
                                    (rule "false_right" (formula "88"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "84")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_0 = null FALSE"
                                     (builtin "One Step Simplification" (formula "88"))
                                    (rule "notRight" (formula "88"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "88")))
                                    (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                                    (rule "applyEqReverse" (formula "88") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "86")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "85")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "84")) (ifInst ""  (formula "85")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                           (branch "result_203.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                              (rule "hideAuxiliaryEq" (formula "39"))
                              (rule "replace_known_right" (formula "40") (term "0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "replace_known_right" (formula "41") (term "0,0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "replace_known_right" (formula "39") (term "0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "replace_known_right" (formula "38") (term "0,0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "commute_or_2" (formula "5") (term "0,0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                              (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "58"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "4") (term "1,0,1,0,0") (ifseqformula "58"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "93") (term "0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "57")))
                                 (rule "closeTrue" (formula "93"))
                              )
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "38") (term "0"))
                                 (branch " result_203.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "eqSymm" (formula "40"))
                                    (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "cut_direct" (formula "88") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "false_right" (formula "89"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "85")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "89"))
                                       (rule "notRight" (formula "89"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "89"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "88")))
                                       (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")))
                                       (rule "applyEqReverse" (formula "87") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "85"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "86")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch " result_203.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "replace_known_right" (formula "39") (term "1,0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "38") (term "1,0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "replace_known_right" (formula "40") (term "1,0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "cut_direct" (formula "91") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "92"))
                                       (rule "false_right" (formula "92"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "90") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "88")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "92"))
                                       (rule "notRight" (formula "92"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "92"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "91")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "90")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "89")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "88")) (ifInst ""  (formula "89")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Exceptional Post (LinkedList)"
                         (builtin "One Step Simplification" (formula "47"))
                         (builtin "One Step Simplification" (formula "73"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,0,1,0,1") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,1,0,1,0,1") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "13"))
                        (rule "andLeft" (formula "47"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "1,0,0") (ifseqformula "47"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,1,0,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "1,1,0,1,0") (ifseqformula "47"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,1,0,0") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,1,0,1,0") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,1,1,0,1,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,1,0,0") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,0,1,0,0") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,1,1,0,1,0") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "21"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "13"))
                        (rule "andLeft" (formula "48"))
                        (rule "andLeft" (formula "48"))
                        (rule "andLeft" (formula "50"))
                        (rule "andLeft" (formula "49"))
                        (rule "andLeft" (formula "48"))
                        (rule "andLeft" (formula "52"))
                        (rule "andLeft" (formula "50"))
                        (rule "notLeft" (formula "48"))
                        (rule "close" (formula "55") (ifseqformula "54"))
                     )
                     (branch "Pre (LinkedList)"
                         (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")))
                        (rule "wellFormedAnonEQ" (formula "71") (term "0") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "1") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,1") (ifseqformula "31"))
                        (rule "wellFormedAnonEQ" (formula "71") (term "0,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,1") (ifseqformula "27"))
                        (rule "wellFormedAnonEQ" (formula "71") (term "0,0,0") (ifseqformula "27"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,1") (ifseqformula "21"))
                        (rule "wellFormedAnonEQ" (formula "71") (term "0,0,0,0") (ifseqformula "21"))
                        (rule "wellFormedAnonEQ" (formula "71") (term "0,0,0,0,0") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0,1") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0,0,1") (ifseqformula "13"))
                        (rule "wellFormedAnonEQ" (formula "71") (term "0,0,0,0,0,0") (ifseqformula "13"))
                        (rule "replace_known_left" (formula "71") (term "1,0,0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "41")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "43")))
                        (rule "closeTrue" (formula "71"))
                     )
                  )
                  (branch "Exceptional Post (keySet)"
                      (builtin "One Step Simplification" (formula "61"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,1,0,1,1") (ifseqformula "31"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,1,0,1,1") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,0,0,0,1,0,1,1") (ifseqformula "13"))
                     (rule "andLeft" (formula "42"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "42"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0") (ifseqformula "31"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,1,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,1,0") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "43"))
                     (rule "close" (formula "47") (ifseqformula "46"))
                  )
                  (branch "Pre (keySet)"
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "39")))
                     (rule "wellFormedAnonEQ" (formula "59") (ifseqformula "31"))
                     (rule "wellFormedAnonEQ" (formula "59") (term "0") (ifseqformula "27"))
                     (rule "wellFormedAnonEQ" (formula "59") (term "0,0") (ifseqformula "21"))
                     (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0") (ifseqformula "17"))
                     (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "59") (term "1,0,0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "26")) (ifInst ""  (formula "30")))
                     (rule "closeTrue" (formula "59"))
                  )
                  (branch "Null reference (inputColMap = null)"
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "41")))
                     (rule "closeTrue" (formula "59"))
                  )
               )
               (branch "Exceptional Post (getHeaderMap)"
                   (builtin "One Step Simplification" (formula "49"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,0") (ifseqformula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,1,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0,1,0") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0,0,1,0") (ifseqformula "13"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "34"))
                  (rule "notLeft" (formula "32"))
                  (rule "close" (formula "36") (ifseqformula "35"))
               )
               (branch "Pre (getHeaderMap)"
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "wellFormedAnonEQ" (formula "47") (term "1") (ifseqformula "27"))
                  (rule "wellFormedAnonEQ" (formula "47") (term "0,1") (ifseqformula "21"))
                  (rule "wellFormedAnonEQ" (formula "47") (term "0,0,1") (ifseqformula "17"))
                  (rule "wellFormedAnonEQ" (formula "47") (term "0,0,0,1") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "47") (term "1,0,1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "26")))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "47"))
                  (rule "closeTrue" (formula "47"))
               )
               (branch "Null reference (parser = null)"
                   (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "30")))
                  (rule "closeTrue" (formula "47"))
               )
            )
            (branch "if x false"
                (builtin "One Step Simplification" (formula "48"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (parse)"
             (builtin "One Step Simplification" (formula "44"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0") (ifseqformula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0") (ifseqformula "17"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,0") (ifseqformula "13"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "30"))
            (rule "notLeft" (formula "28"))
            (rule "close" (formula "32") (ifseqformula "31"))
         )
         (branch "Pre (parse)"
             (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1,1") (ifseqformula "21"))
            (rule "wellFormedAnonEQ" (formula "42") (term "0,1") (ifseqformula "21"))
            (rule "wellFormedAnonEQ" (formula "42") (term "0,0,1") (ifseqformula "17"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,1") (ifseqformula "17"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,1") (ifseqformula "13"))
            (rule "wellFormedAnonEQ" (formula "42") (term "0,0,0,1") (ifseqformula "13"))
            (rule "replace_known_right" (formula "42") (term "1,0,1,1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "22")))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "42"))
            (rule "notRight" (formula "42"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet00_2" (formula "1") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "close" (formula "34") (ifseqformula "2"))
         )
         (branch "Null reference (var_2 = null)"
             (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "30")))
            (rule "closeTrue" (formula "42"))
         )
      )
      (branch "Exceptional Post (FileReader)"
          (builtin "One Step Simplification" (formula "21"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,0,1,0,1") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,1,0,1,0,1") (ifseqformula "13"))
         (rule "andLeft" (formula "21"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0,0") (ifseqformula "21"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,0,0") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1,0,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0,1,0") (ifseqformula "21"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,1,0,1,0") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1,1,0,1,0") (ifseqformula "13"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "22"))
         (rule "close" (formula "28") (ifseqformula "27"))
      )
      (branch "Pre (FileReader)"
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1") (ifseqformula "17"))
         (rule "wellFormedAnonEQ" (formula "32") (term "0") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1") (ifseqformula "13"))
         (rule "wellFormedAnonEQ" (formula "32") (term "0,0") (ifseqformula "13"))
         (rule "replace_known_left" (formula "32") (term "0,0,1") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "5")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")))
         (rule "closeTrue" (formula "32"))
      )
   )
   (branch "Exceptional Post (withDelimiter)"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0") (ifseqformula "8"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "13"))
      (rule "close" (formula "16") (ifseqformula "15"))
   )
   (branch "Pre (withDelimiter)"
       (builtin "One Step Simplification" (formula "22"))
      (rule "wellFormedAnonEQ" (formula "22") (term "0,1") (ifseqformula "8"))
      (rule "expand_inChar" (formula "22") (term "1,1"))
      (rule "replace_char_MAX" (formula "22") (term "1,0,1,1"))
      (rule "replace_char_MIN" (formula "22") (term "0,1,1,1"))
      (rule "replace_known_left" (formula "22") (term "1,0,1") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
      (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "22") (term "0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "22") (term "0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "22") (term "0,0,0"))
      (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "commute_and" (formula "22"))
      (rule "charLiteral_to_int" (formula "22") (term "0,0"))
      (rule "qeq_literals" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "inEqSimp_leqRight" (formula "22"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "charLiteral_to_int" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Null reference (c_3 = null)"
       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "11")))
      (rule "closeTrue" (formula "22"))
   )
)
(branch "Exceptional Post (withFirstRecordAsHeader)"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "9"))
   (rule "close" (formula "12") (ifseqformula "11"))
)
(branch "Pre (withFirstRecordAsHeader)"
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "17"))
   (rule "notRight" (formula "17"))
   (rule "close" (formula "8") (ifseqformula "1"))
)
(branch "Null reference (c_4 = null)"
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "7")))
   (rule "closeTrue" (formula "17"))
)
)
}
